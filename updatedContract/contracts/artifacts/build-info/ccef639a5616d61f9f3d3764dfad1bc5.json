{
	"id": "ccef639a5616d61f9f3d3764dfad1bc5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/InternalContract.sol": {
				"content": "pragma solidity 0.4.24;\n\nimport \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\";\nimport \"@goplugin/contracts/src/v0.4/PluginClient.sol\";\n\ncontract InternalContract is PluginClient, Ownable {\n    \n  //Initialize Oracle Payment     \n  uint256 constant private ORACLE_PAYMENT = 0.01 * 10**18;\n  address public oracle;  // \"0x97A6d407f4CD30936679d0a28A3bc2A7F13a2185\"\n  string  public jobId;   // \"32abe898ea834e328ebeb714c5a0991d\"\n  uint256 public currentValue;\n  uint256 public latestTimestamp;\n\n  //struct to keep track of PLI Deposits\n  struct PLIDatabase{\n    address depositor;\n    uint256 totalcredits;\n  }\n\n  mapping(address => PLIDatabase) public plidbs;\n\n  //Initialize event RequestFulfilled   \n  event RequestFulfilled(\n    bytes32 indexed requestId,\n    uint256 indexed currentVal\n  );\n\n  //Initialize event requestCreated   \n  event requestCreated(address indexed requester,bytes32 indexed jobId, bytes32 indexed requestId);\n  event requestCreatedTest(bytes32 indexed jobId, bytes32 indexed requestId);\n\n  //Constructor to pass Pli Token Address during deployment\n  constructor(address _pli,address _oracle,string memory _jobid) public Ownable() {\n    setPluginToken(_pli);\n    oracle = address(_oracle);\n    jobId = _jobid;\n  }\n\n  function depositPLI(uint256 _value) public returns(bool) {\n      require(_value<=100*10**18,\"NOT_MORE_THAN_100_ALLOWED\");\n      //Transfer PLI to contract\n      PliTokenInterface pli = PliTokenInterface(pluginTokenAddress());\n      pli.transferFrom(msg.sender,address(this),_value);\n      //Track the PLI deposited for the user\n      PLIDatabase memory _plidb = plidbs[msg.sender];\n      uint256 _totalCredits = _plidb.totalcredits + _value;\n      plidbs[msg.sender] = PLIDatabase(\n        msg.sender,\n        _totalCredits\n      );\n      return true;\n  }\n\n  function showPrice() public view returns(uint256){\n    return currentValue;\n  }\n\n  //_fsyms should be the name of your source token from which you want the comparison \n  //_tsyms should be the name of your destinaiton token to which you need the comparison\n  //_jobID should be tagged in Oracle\n  //_oracle should be fulfiled with your plugin node address\n\n  function requestData(address _caller)\n    public\n    returns (bytes32 requestId)\n  {\n    //Check the total Credits available for the user to perform the transaction\n    uint256 _a_totalCredits = plidbs[_caller].totalcredits;\n    require(_a_totalCredits>ORACLE_PAYMENT,\"NO_SUFFICIENT_CREDITS\");\n    plidbs[_caller].totalcredits = _a_totalCredits - ORACLE_PAYMENT;\n    \n    //Built a oracle request with the following params\n    Plugin.Request memory req = buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector);\n    req.add(\"_fsyms\",\"XDC\");\n    req.add(\"_tsyms\",\"USDT\");\n    req.addInt(\"times\", 10000);\n    requestId = sendPluginRequestTo(oracle, req, ORACLE_PAYMENT);\n    latestTimestamp = now;\n    emit requestCreated(_caller, stringToBytes32(jobId), requestId);\n  }\n\n function testMyFunc()\n    public\n    onlyOwner\n    returns (bytes32 requestId)\n  {    \n    //Built a oracle request with the following params\n    Plugin.Request memory req = buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector);\n    req.add(\"_fsyms\",\"XDC\");\n    req.add(\"_tsyms\",\"USDT\");\n    req.addInt(\"times\", 10000);\n    latestTimestamp = now;\n    requestId = sendPluginRequestTo(oracle, req, ORACLE_PAYMENT);\n    emit requestCreatedTest(stringToBytes32(jobId), requestId);\n  }\n\n\n  //callBack function\n  function fulfill(bytes32 _requestId, uint256 _currentval)\n    public\n    recordPluginFulfillment(_requestId)\n  {\n    // if that speed < 65kmph\n    // do write logic for token transfer\n    emit RequestFulfilled(_requestId, _currentval);\n    currentValue = _currentval;\n  }\n\n  function getPluginToken() public view returns (address) {\n    return pluginTokenAddress();\n  }\n\n  //With draw pli can be invoked only by owner\n  function withdrawPli() public onlyOwner {\n    PliTokenInterface pli = PliTokenInterface(pluginTokenAddress());\n    require(pli.transfer(msg.sender, pli.balanceOf(address(this))), \"Unable to transfer\");\n  }\n\n  //Cancel the existing request\n  function cancelRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunctionId,\n    uint256 _expiration\n  )\n    public\n    onlyOwner\n  {\n    cancelPluginRequest(_requestId, _payment, _callbackFunctionId, _expiration);\n  }\n\n  //String to bytes to convert jobid to bytest32\n  function stringToBytes32(string memory source) private pure returns (bytes32 result) {\n    bytes memory tempEmptyStringTest = bytes(source);\n    if (tempEmptyStringTest.length == 0) {\n      return 0x0;\n    }\n    assembly { \n      result := mload(add(source, 32))\n    }\n  }\n\n}"
			},
			"@goplugin/contracts/src/v0.4/PluginClient.sol": {
				"content": "pragma solidity ^0.4.24;\n\nimport \"./Plugin.sol\";\nimport \"./interfaces/ENSInterface.sol\";\nimport \"./interfaces/PliTokenInterface.sol\";\nimport \"./interfaces/PluginRequestInterface.sol\";\nimport \"./interfaces/PointerInterface.sol\";\nimport { ENSResolver as ENSResolver_Plugin } from \"./vendor/ENSResolver.sol\";\n\n/**\n * @title The PluginClient contract\n * @notice Contract writers can inherit this contract in order to create requests for the\n * Plugin network\n */\ncontract PluginClient {\n  using Plugin for Plugin.Request;\n\n  uint256 constant internal PLI = 10**18;\n  uint256 constant private AMOUNT_OVERRIDE = 0;\n  address constant private SENDER_OVERRIDE = 0x0;\n  uint256 constant private ARGS_VERSION = 1;\n  bytes32 constant private ENS_TOKEN_SUBNAME = keccak256(\"pli\");\n  bytes32 constant private ENS_ORACLE_SUBNAME = keccak256(\"oracle\");\n  address constant private PLI_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\n\n  ENSInterface private ens;\n  bytes32 private ensNode;\n  PliTokenInterface private pli;\n  PluginRequestInterface private oracle;\n  uint256 private requests = 1;\n  mapping(bytes32 => address) private pendingRequests;\n\n  event PluginRequested(bytes32 indexed id);\n  event PluginFulfilled(bytes32 indexed id);\n  event PluginCancelled(bytes32 indexed id);\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param _specId The Job Specification ID that the request will be created for\n   * @param _callbackAddress The callback address that the response will be sent to\n   * @param _callbackFunctionSignature The callback function signature to use for the callback address\n   * @return A Plugin Request struct in memory\n   */\n  function buildPluginRequest(\n    bytes32 _specId,\n    address _callbackAddress,\n    bytes4 _callbackFunctionSignature\n  ) internal pure returns (Plugin.Request memory) {\n    Plugin.Request memory req;\n    return req.initialize(_specId, _callbackAddress, _callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a Plugin request to the stored oracle address\n   * @dev Calls `pluginRequestTo` with the stored oracle address\n   * @param _req The initialized Plugin Request\n   * @param _payment The amount of PLI to send for the request\n   * @return The request ID\n   */\n  function sendPluginRequest(Plugin.Request memory _req, uint256 _payment)\n    internal\n    returns (bytes32)\n  {\n    return sendPluginRequestTo(oracle, _req, _payment);\n  }\n\n  /**\n   * @notice Creates a Plugin request to the specified oracle address\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send PLI which creates a request on the target oracle contract.\n   * Emits PluginRequested event.\n   * @param _oracle The address of the oracle for the request\n   * @param _req The initialized Plugin Request\n   * @param _payment The amount of PLI to send for the request\n   * @return The request ID\n   */\n  function sendPluginRequestTo(address _oracle, Plugin.Request memory _req, uint256 _payment)\n    internal\n    returns (bytes32 requestId)\n  {\n    requestId = keccak256(abi.encodePacked(this, requests));\n    _req.nonce = requests;\n    pendingRequests[requestId] = _oracle;\n    emit PluginRequested(requestId);\n    require(pli.transferAndCall(_oracle, _payment, encodeRequest(_req)), \"unable to transferAndCall to oracle\");\n    requests += 1;\n\n    return requestId;\n  }\n\n  /**\n   * @notice Allows a request to be cancelled if it has not been fulfilled\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\n   * Deletes the request from the `pendingRequests` mapping.\n   * Emits PluginCancelled event.\n   * @param _requestId The request ID\n   * @param _payment The amount of PLI sent for the request\n   * @param _callbackFunc The callback function specified for the request\n   * @param _expiration The time of the expiration for the request\n   */\n  function cancelPluginRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunc,\n    uint256 _expiration\n  )\n    internal\n  {\n    PluginRequestInterface requested = PluginRequestInterface(pendingRequests[_requestId]);\n    delete pendingRequests[_requestId];\n    emit PluginCancelled(_requestId);\n    requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration);\n  }\n\n  /**\n   * @notice Sets the stored oracle address\n   * @param _oracle The address of the oracle contract\n   */\n  function setPluginOracle(address _oracle) internal {\n    oracle = PluginRequestInterface(_oracle);\n  }\n\n  /**\n   * @notice Sets the PLI token address\n   * @param _pli The address of the PLI token contract\n   */\n  function setPluginToken(address _pli) internal {\n    pli = PliTokenInterface(_pli);\n  }\n\n  /**\n   * @notice Sets the Plugin token address for the public\n   * network as given by the Pointer contract\n   */\n  function setPublicPluginToken() internal {\n    setPluginToken(PointerInterface(PLI_TOKEN_POINTER).getAddress());\n  }\n\n  /**\n   * @notice Retrieves the stored address of the PLI token\n   * @return The address of the PLI token\n   */\n  function pluginTokenAddress()\n    internal\n    view\n    returns (address)\n  {\n    return address(pli);\n  }\n\n  /**\n   * @notice Retrieves the stored address of the oracle contract\n   * @return The address of the oracle contract\n   */\n  function pluginOracleAddress()\n    internal\n    view\n    returns (address)\n  {\n    return address(oracle);\n  }\n\n  /**\n   * @notice Allows for a request which was created on another contract to be fulfilled\n   * on this contract\n   * @param _oracle The address of the oracle contract that will fulfill the request\n   * @param _requestId The request ID used for the response\n   */\n  function addPluginExternalRequest(address _oracle, bytes32 _requestId)\n    internal\n    notPendingRequest(_requestId)\n  {\n    pendingRequests[_requestId] = _oracle;\n  }\n\n  /**\n   * @notice Sets the stored oracle and PLI token contracts with the addresses resolved by ENS\n   * @dev Accounts for subnodes having different resolvers\n   * @param _ens The address of the ENS contract\n   * @param _node The ENS node hash\n   */\n  function usePluginWithENS(address _ens, bytes32 _node)\n    internal\n  {\n    ens = ENSInterface(_ens);\n    ensNode = _node;\n    bytes32 pliSubnode = keccak256(abi.encodePacked(ensNode, ENS_TOKEN_SUBNAME));\n    ENSResolver_Plugin resolver = ENSResolver_Plugin(ens.resolver(pliSubnode));\n    setPluginToken(resolver.addr(pliSubnode));\n    updatePluginOracleWithENS();\n  }\n\n  /**\n   * @notice Sets the stored oracle contract with the address resolved by ENS\n   * @dev This may be called on its own as long as `usePluginWithENS` has been called previously\n   */\n  function updatePluginOracleWithENS()\n    internal\n  {\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(ensNode, ENS_ORACLE_SUBNAME));\n    ENSResolver_Plugin resolver = ENSResolver_Plugin(ens.resolver(oracleSubnode));\n    setPluginOracle(resolver.addr(oracleSubnode));\n  }\n\n  /**\n   * @notice Encodes the request to be sent to the oracle contract\n   * @dev The Plugin node expects values to be in order for the request to be picked up. Order of types\n   * will be validated in the oracle contract.\n   * @param _req The initialized Plugin Request\n   * @return The bytes payload for the `transferAndCall` method\n   */\n  function encodeRequest(Plugin.Request memory _req)\n    private\n    view\n    returns (bytes memory)\n  {\n    return abi.encodeWithSelector(\n      oracle.oracleRequest.selector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of PLI sent\n      _req.id,\n      _req.callbackAddress,\n      _req.callbackFunctionId,\n      _req.nonce,\n      ARGS_VERSION,\n      _req.buf.buf);\n  }\n\n  /**\n   * @notice Ensures that the fulfillment is valid for this contract\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\n   * @param _requestId The request ID for fulfillment\n   */\n  function validatePluginCallback(bytes32 _requestId)\n    internal\n    recordPluginFulfillment(_requestId)\n    // solhint-disable-next-line no-empty-blocks\n  {}\n\n  /**\n   * @dev Reverts if the sender is not the oracle of the request.\n   * Emits PluginFulfilled event.\n   * @param _requestId The request ID for fulfillment\n   */\n  modifier recordPluginFulfillment(bytes32 _requestId) {\n    require(msg.sender == pendingRequests[_requestId], \"Source must be the oracle of the request\");\n    delete pendingRequests[_requestId];\n    emit PluginFulfilled(_requestId);\n    _;\n  }\n\n  /**\n   * @dev Reverts if the request is already pending\n   * @param _requestId The request ID for fulfillment\n   */\n  modifier notPendingRequest(bytes32 _requestId) {\n    require(pendingRequests[_requestId] == address(0), \"Request is already pending\");\n    _;\n  }\n}\n"
			},
			"@goplugin/contracts/src/v0.4/vendor/Ownable.sol": {
				"content": "pragma solidity ^0.4.24;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n"
			},
			"@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol": {
				"content": "pragma solidity 0.4.24;\n\ncontract ENSResolver {\n  function addr(bytes32 node) public view returns (address);\n}\n"
			},
			"@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol": {
				"content": "pragma solidity ^0.4.24;\n\ninterface PointerInterface {\n  function getAddress() external view returns (address);\n}\n"
			},
			"@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol": {
				"content": "pragma solidity ^0.4.24;\n\ninterface PluginRequestInterface {\n  function oracleRequest(\n    address sender,\n    uint256 payment,\n    bytes32 id,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 version,\n    bytes data\n  ) external;\n\n  function cancelOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunctionId,\n    uint256 expiration\n  ) external;\n}\n"
			},
			"@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol": {
				"content": "pragma solidity ^0.4.24;\n\ninterface PliTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string tokenName);\n  function symbol() external view returns (string tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"
			},
			"@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol": {
				"content": "pragma solidity ^0.4.24;\n\ninterface ENSInterface {\n\n  // Logged when the owner of a node assigns a new owner to a subnode.\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n  // Logged when the owner of a node transfers ownership to a new account.\n  event Transfer(bytes32 indexed node, address owner);\n\n  // Logged when the resolver for a node changes.\n  event NewResolver(bytes32 indexed node, address resolver);\n\n  // Logged when the TTL of a node changes\n  event NewTTL(bytes32 indexed node, uint64 ttl);\n\n\n  function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external;\n  function setResolver(bytes32 node, address resolver) external;\n  function setOwner(bytes32 node, address owner) external;\n  function setTTL(bytes32 node, uint64 ttl) external;\n  function owner(bytes32 node) external view returns (address);\n  function resolver(bytes32 node) external view returns (address);\n  function ttl(bytes32 node) external view returns (uint64);\n\n}\n"
			},
			"@goplugin/contracts/src/v0.4/Plugin.sol": {
				"content": "pragma solidity ^0.4.24;\n\nimport { CBOR as CBOR_Plugin } from \"./vendor/CBOR.sol\";\nimport { Buffer as Buffer_Plugin } from \"./vendor/Buffer.sol\";\n\n/**\n * @title Library for common Plugin functions\n * @dev Uses imported CBOR library for encoding to buffer\n */\nlibrary Plugin {\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\n\n  using CBOR_Plugin for Buffer_Plugin.buffer;\n\n  struct Request {\n    bytes32 id;\n    address callbackAddress;\n    bytes4 callbackFunctionId;\n    uint256 nonce;\n    Buffer_Plugin.buffer buf;\n  }\n\n  /**\n   * @notice Initializes a Plugin request\n   * @dev Sets the ID, callback address, and callback function signature on the request\n   * @param self The uninitialized request\n   * @param _id The Job Specification ID\n   * @param _callbackAddress The callback address\n   * @param _callbackFunction The callback function signature\n   * @return The initialized request\n   */\n  function initialize(\n    Request memory self,\n    bytes32 _id,\n    address _callbackAddress,\n    bytes4 _callbackFunction\n  ) internal pure returns (Plugin.Request memory) {\n    Buffer_Plugin.init(self.buf, defaultBufferSize);\n    self.id = _id;\n    self.callbackAddress = _callbackAddress;\n    self.callbackFunctionId = _callbackFunction;\n    return self;\n  }\n\n  /**\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\n   * @param self The initialized request\n   * @param _data The CBOR data\n   */\n  function setBuffer(Request memory self, bytes _data)\n    internal pure\n  {\n    Buffer_Plugin.init(self.buf, _data.length);\n    Buffer_Plugin.append(self.buf, _data);\n  }\n\n  /**\n   * @notice Adds a string value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The string value to add\n   */\n  function add(Request memory self, string _key, string _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeString(_value);\n  }\n\n  /**\n   * @notice Adds a bytes value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The bytes value to add\n   */\n  function addBytes(Request memory self, string _key, bytes _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeBytes(_value);\n  }\n\n  /**\n   * @notice Adds a int256 value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The int256 value to add\n   */\n  function addInt(Request memory self, string _key, int256 _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeInt(_value);\n  }\n\n  /**\n   * @notice Adds a uint256 value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The uint256 value to add\n   */\n  function addUint(Request memory self, string _key, uint256 _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeUInt(_value);\n  }\n\n  /**\n   * @notice Adds an array of strings to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _values The array of string values to add\n   */\n  function addStringArray(Request memory self, string _key, string[] memory _values)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.startArray();\n    for (uint256 i = 0; i < _values.length; i++) {\n      self.buf.encodeString(_values[i]);\n    }\n    self.buf.endSequence();\n  }\n}\n"
			},
			"@goplugin/contracts/src/v0.4/vendor/Buffer.sol": {
				"content": "pragma solidity >0.4.18;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for writing to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n  /**\n  * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n  *      a capacity. The capacity may be longer than the current value, in\n  *      which case it can be extended without the need to allocate more memory.\n  */\n  struct buffer {\n    bytes buf;\n    uint capacity;\n  }\n\n  /**\n  * @dev Initializes a buffer with an initial capacity.\n  * @param buf The buffer to initialize.\n  * @param capacity The number of bytes of space to allocate the buffer.\n  * @return The buffer, for chaining.\n  */\n  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n    if (capacity % 32 != 0) {\n      capacity += 32 - (capacity % 32);\n    }\n    // Allocate space for the buffer data\n    buf.capacity = capacity;\n    assembly {\n      let ptr := mload(0x40)\n      mstore(buf, ptr)\n      mstore(ptr, 0)\n      mstore(0x40, add(32, add(ptr, capacity)))\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Initializes a new buffer from an existing bytes object.\n  *      Changes to the buffer may mutate the original value.\n  * @param b The bytes object to initialize the buffer with.\n  * @return A new buffer.\n  */\n  function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n    buffer memory buf;\n    buf.buf = b;\n    buf.capacity = b.length;\n    return buf;\n  }\n\n  function resize(buffer memory buf, uint capacity) private pure {\n    bytes memory oldbuf = buf.buf;\n    init(buf, capacity);\n    append(buf, oldbuf);\n  }\n\n  function max(uint a, uint b) private pure returns(uint) {\n    if (a > b) {\n      return a;\n    }\n    return b;\n  }\n\n  /**\n  * @dev Sets buffer length to 0.\n  * @param buf The buffer to truncate.\n  * @return The original buffer, for chaining..\n  */\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\n    assembly {\n      let bufptr := mload(buf)\n      mstore(bufptr, 0)\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The start offset to write to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {\n    require(len <= data.length);\n\n    if (off + len > buf.capacity) {\n      resize(buf, max(buf.capacity, len + off) * 2);\n    }\n\n    uint dest;\n    uint src;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Start address = buffer address + offset + sizeof(buffer length)\n      dest := add(add(bufptr, 32), off)\n      // Update buffer length if we're extending it\n      if gt(add(len, off), buflen) {\n        mstore(bufptr, add(len, off))\n      }\n      src := add(data, 32)\n    }\n\n    // Copy word-length chunks while possible\n    for (; len >= 32; len -= 32) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n      dest += 32;\n      src += 32;\n    }\n\n    // Copy remaining bytes\n    uint mask = 256 ** (32 - len) - 1;\n    assembly {\n      let srcpart := and(mload(src), not(mask))\n      let destpart := and(mload(dest), mask)\n      mstore(dest, or(destpart, srcpart))\n    }\n\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function append(buffer memory buf, bytes memory data, uint len) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, len);\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, data.length);\n  }\n\n  /**\n  * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write the byte at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {\n    if (off >= buf.capacity) {\n      resize(buf, buf.capacity * 2);\n    }\n\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Address = buffer address + sizeof(buffer length) + off\n      let dest := add(add(bufptr, off), 32)\n      mstore8(dest, data)\n      // Update buffer length if we extended it\n      if eq(off, buflen) {\n        mstore(bufptr, add(buflen, 1))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n    return writeUint8(buf, buf.buf.length, data);\n  }\n\n  /**\n  * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n  *      exceed the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (left-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = 256 ** len - 1;\n    // Right-align data\n    data = data >> (8 * (32 - len));\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + sizeof(buffer length) + off + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, off, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chhaining.\n  */\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, 32);\n  }\n\n  /**\n  * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (right-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = 256 ** len - 1;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + off + sizeof(buffer length) + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n   * exceed the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer.\n   */\n  function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n    return writeInt(buf, buf.buf.length, data, len);\n  }\n}\n"
			},
			"@goplugin/contracts/src/v0.4/vendor/CBOR.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.4.19 < 0.7.0;\n\nimport { Buffer as BufferPlugin } from \"./Buffer.sol\";\n\nlibrary CBOR {\n    using BufferPlugin for BufferPlugin.buffer;\n\n    uint8 private constant MAJOR_TYPE_INT = 0;\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\n    uint8 private constant MAJOR_TYPE_STRING = 3;\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\n    uint8 private constant MAJOR_TYPE_MAP = 5;\n    uint8 private constant MAJOR_TYPE_TAG = 6;\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n    function encodeType(BufferPlugin.buffer memory buf, uint8 major, uint value) private pure {\n        if(value <= 23) {\n            buf.appendUint8(uint8((major << 5) | value));\n        } else if(value <= 0xFF) {\n            buf.appendUint8(uint8((major << 5) | 24));\n            buf.appendInt(value, 1);\n        } else if(value <= 0xFFFF) {\n            buf.appendUint8(uint8((major << 5) | 25));\n            buf.appendInt(value, 2);\n        } else if(value <= 0xFFFFFFFF) {\n            buf.appendUint8(uint8((major << 5) | 26));\n            buf.appendInt(value, 4);\n        } else if(value <= 0xFFFFFFFFFFFFFFFF) {\n            buf.appendUint8(uint8((major << 5) | 27));\n            buf.appendInt(value, 8);\n        }\n    }\n\n    function encodeIndefiniteLengthType(BufferPlugin.buffer memory buf, uint8 major) private pure {\n        buf.appendUint8(uint8((major << 5) | 31));\n    }\n\n    function encodeUInt(BufferPlugin.buffer memory buf, uint value) internal pure {\n        encodeType(buf, MAJOR_TYPE_INT, value);\n    }\n\n    function encodeInt(BufferPlugin.buffer memory buf, int value) internal pure {\n        if(value < -0x10000000000000000) {\n            encodeSignedBigNum(buf, value);\n        } else if(value > 0xFFFFFFFFFFFFFFFF) {\n            encodeBigNum(buf, value);\n        } else if(value >= 0) {\n            encodeType(buf, MAJOR_TYPE_INT, uint(value));\n        } else {\n            encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value));\n        }\n    }\n\n    function encodeBytes(BufferPlugin.buffer memory buf, bytes memory value) internal pure {\n        encodeType(buf, MAJOR_TYPE_BYTES, value.length);\n        buf.append(value);\n    }\n\n    function encodeBigNum(BufferPlugin.buffer memory buf, int value) internal pure {\n      buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n      encodeBytes(buf, abi.encode(uint(value)));\n    }\n\n    function encodeSignedBigNum(BufferPlugin.buffer memory buf, int input) internal pure {\n      buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\n      encodeBytes(buf, abi.encode(uint(-1 - input)));\n    }\n\n    function encodeString(BufferPlugin.buffer memory buf, string memory value) internal pure {\n        encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length);\n        buf.append(bytes(value));\n    }\n\n    function startArray(BufferPlugin.buffer memory buf) internal pure {\n        encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n    }\n\n    function startMap(BufferPlugin.buffer memory buf) internal pure {\n        encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n    }\n\n    function endSequence(BufferPlugin.buffer memory buf) internal pure {\n        encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@goplugin/contracts/src/v0.4/Plugin.sol": {
				"Plugin": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "Library for common Plugin functions"
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":259:3688  library Plugin {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":259:3688  library Plugin {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820631e7b42415b52ce6d1a1c63a8d2cddde97e9da980ffe12ec0c20034ce4023550029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820631e7b42415b52ce6d1a1c63a8d2cddde97e9da980ffe12ec0c20034ce4023550029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x1E7B4241 JUMPDEST MSTORE 0xce PUSH14 0x1A1C63A8D2CDDDE97E9DA980FFE1 0x2e 0xc0 0xc2 STOP CALLVALUE 0xce BLOCKHASH 0x23 SSTORE STOP 0x29 ",
							"sourceMap": "259:3429:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820631e7b42415b52ce6d1a1c63a8d2cddde97e9da980ffe12ec0c20034ce4023550029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x1E7B4241 JUMPDEST MSTORE 0xce PUSH14 0x1A1C63A8D2CDDDE97E9DA980FFE1 0x2e 0xc0 0xc2 STOP CALLVALUE 0xce BLOCKHASH 0x23 SSTORE STOP 0x29 ",
							"sourceMap": "259:3429:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(struct Plugin.Request memory,string memory,string memory)": "infinite",
								"addBytes(struct Plugin.Request memory,string memory,bytes memory)": "infinite",
								"addInt(struct Plugin.Request memory,string memory,int256)": "infinite",
								"addStringArray(struct Plugin.Request memory,string memory,string memory[] memory)": "infinite",
								"addUint(struct Plugin.Request memory,string memory,uint256)": "infinite",
								"initialize(struct Plugin.Request memory,bytes32,address,bytes4)": "infinite",
								"setBuffer(struct Plugin.Request memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 259,
									"end": 3688,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 3688,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820631e7b42415b52ce6d1a1c63a8d2cddde97e9da980ffe12ec0c20034ce4023550029",
									".code": [
										{
											"begin": 259,
											"end": 3688,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "ADDRESS"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "MSTORE"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 3688,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Library for common Plugin functions\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.4/Plugin.sol\":\"Plugin\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.4/Plugin.sol\":{\"keccak256\":\"0x55d5a74c02f96985405b0b220344758006943a51cb1479875ae0beb02fe5a53e\",\"urls\":[\"bzzr://594231e6dc829495d3cf5e3a8ac05e73066ca66bf828c6c02c52eaa3ba5a6400\"]},\"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":{\"keccak256\":\"0x900b4c8ab35b4876d89835a8b050c96107ace250a70f64c5bba6a78a60f03883\",\"urls\":[\"bzzr://408340da4e8fa35e608196ee508f11f9d44f6f70a10f0db0083ab20b5a894d59\"]},\"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":{\"keccak256\":\"0xa6ccf721ad390d312d179af25b84db9a8c79bdd557390b3ead5f20a9513d0332\",\"urls\":[\"bzzr://7fadae93321d5ec1d9e0ace4197a3e44c4df6007b475ef67df7062b9189d82c8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/PluginClient.sol": {
				"PluginClient": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginCancelled",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "The PluginClient contract"
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":459:8887  contract PluginClient {... */\n  mstore(0x40, 0x80)\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1088:1089  1 */\n  0x1\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1061:1089  uint256 private requests = 1 */\n  0x4\n  sstore\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":459:8887  contract PluginClient {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":459:8887  contract PluginClient {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":459:8887  contract PluginClient {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058203fe4edfe6365a26279c91c0482455d285232b2630cb69dc515366908be3070bb0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001600455348015601457600080fd5b5060358060226000396000f3006080604052600080fd00a165627a7a723058203fe4edfe6365a26279c91c0482455d285232b2630cb69dc515366908be3070bb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x3f 0xe4 0xed INVALID PUSH4 0x65A26279 0xc9 SHR DIV DUP3 GASLIMIT 0x5d 0x28 MSTORE ORIGIN 0xb2 PUSH4 0xCB69DC5 ISZERO CALLDATASIZE PUSH10 0x8BE3070BB0029000000 ",
							"sourceMap": "459:8428:1:-;;;1088:1;1061:28;;459:8428;8:9:-1;5:2;;;30:1;27;20:12;5:2;459:8428:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058203fe4edfe6365a26279c91c0482455d285232b2630cb69dc515366908be3070bb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x3f 0xe4 0xed INVALID PUSH4 0x65A26279 0xc9 SHR DIV DUP3 GASLIMIT 0x5d 0x28 MSTORE ORIGIN 0xb2 PUSH4 0xCB69DC5 ISZERO CALLDATASIZE PUSH10 0x8BE3070BB0029000000 ",
							"sourceMap": "459:8428:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "20072",
								"totalCost": "30672"
							},
							"internal": {
								"addPluginExternalRequest(address,bytes32)": "infinite",
								"buildPluginRequest(bytes32,address,bytes4)": "infinite",
								"cancelPluginRequest(bytes32,uint256,bytes4,uint256)": "infinite",
								"encodeRequest(struct Plugin.Request memory)": "infinite",
								"pluginOracleAddress()": "infinite",
								"pluginTokenAddress()": "infinite",
								"sendPluginRequest(struct Plugin.Request memory,uint256)": "infinite",
								"sendPluginRequestTo(address,struct Plugin.Request memory,uint256)": "infinite",
								"setPluginOracle(address)": "infinite",
								"setPluginToken(address)": "infinite",
								"setPublicPluginToken()": "infinite",
								"updatePluginOracleWithENS()": "infinite",
								"usePluginWithENS(address,bytes32)": "infinite",
								"validatePluginCallback(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 459,
									"end": 8887,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "MSTORE"
								},
								{
									"begin": 1088,
									"end": 1089,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1061,
									"end": 1089,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1061,
									"end": 1089,
									"name": "SSTORE"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "POP"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "DUP1"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "CODECOPY"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 459,
									"end": 8887,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203fe4edfe6365a26279c91c0482455d285232b2630cb69dc515366908be3070bb0029",
									".code": [
										{
											"begin": 459,
											"end": 8887,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 459,
											"end": 8887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 8887,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 8887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 8887,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 8887,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginCancelled\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{},\"title\":\"The PluginClient contract\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.4/PluginClient.sol\":\"PluginClient\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.4/Plugin.sol\":{\"keccak256\":\"0x55d5a74c02f96985405b0b220344758006943a51cb1479875ae0beb02fe5a53e\",\"urls\":[\"bzzr://594231e6dc829495d3cf5e3a8ac05e73066ca66bf828c6c02c52eaa3ba5a6400\"]},\"@goplugin/contracts/src/v0.4/PluginClient.sol\":{\"keccak256\":\"0x02ee30c7bacfbd319dab6ec4e62bc0d60cd4ffe0dada9b8e4a096ccd22d91bc5\",\"urls\":[\"bzzr://563d6a01cf1a9bc96be7ee3ecc8c1fb152325115bf298dfd57b22a83c01187c9\"]},\"@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xd0b1a6134b5d6c0213bc4db5df8693ec41e13de3d97d43cc8d19639e516f9767\",\"urls\":[\"bzzr://93d66e26b4b5cf6cfa8c6a5d04cb56ff27d49a2aee8f54858ac3db7658355b1f\"]},\"@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol\":{\"keccak256\":\"0xe47511761a6c2376c687577b372cc9e4ffada0f7459d8c7a3098aadb5cab69d0\",\"urls\":[\"bzzr://c65c130027ab723ffce69a11e097b78f017eeb480578f83fb064fb4d327f0da2\"]},\"@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol\":{\"keccak256\":\"0x7f38f485eb3e9b2069399f5a994bf0c536f04f26f0324928f25e5bb554e24dee\",\"urls\":[\"bzzr://63132837e9194f67705c20046d53843c726042925786c735a1bbf5323afb031d\"]},\"@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x8019f30a207af4ee80a8b2774e42aba721641254ed0a97826a54f33d7caef218\",\"urls\":[\"bzzr://8ddbb9ae67ec27aed40d6013d6ea176c05f7cd61d4f6fa95492a03fa086d90af\"]},\"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":{\"keccak256\":\"0x900b4c8ab35b4876d89835a8b050c96107ace250a70f64c5bba6a78a60f03883\",\"urls\":[\"bzzr://408340da4e8fa35e608196ee508f11f9d44f6f70a10f0db0083ab20b5a894d59\"]},\"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":{\"keccak256\":\"0xa6ccf721ad390d312d179af25b84db9a8c79bdd557390b3ead5f20a9513d0332\",\"urls\":[\"bzzr://7fadae93321d5ec1d9e0ace4197a3e44c4df6007b475ef67df7062b9189d82c8\"]},\"@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol\":{\"keccak256\":\"0x08965df63f00cb8d164d6fc36a0c388740725906b0bfb79b17391d5dfeabf683\",\"urls\":[\"bzzr://0700cb12e032ed8ed8327e446dfd805ae9fa28785a2909a73def511fe374b8cd\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol": {
				"ENSInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "resolver",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								},
								{
									"name": "label",
									"type": "bytes32"
								},
								{
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setSubnodeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								},
								{
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setTTL",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "ttl",
							"outputs": [
								{
									"name": "",
									"type": "uint64"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								},
								{
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "setResolver",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								},
								{
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "label",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "NewOwner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "NewResolver",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "NewTTL",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner(bytes32)": "02571be3",
							"resolver(bytes32)": "0178b8bf",
							"setOwner(bytes32,address)": "5b0fc9c3",
							"setResolver(bytes32,address)": "1896f70a",
							"setSubnodeOwner(bytes32,bytes32,address)": "06ab5923",
							"setTTL(bytes32,uint64)": "14ab9038",
							"ttl(bytes32)": "16a25cbd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol": {
				"PliTokenInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "tokenName",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								},
								{
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol": {
				"PluginRequestInterface": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "payment",
									"type": "uint256"
								},
								{
									"name": "id",
									"type": "bytes32"
								},
								{
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"name": "nonce",
									"type": "uint256"
								},
								{
									"name": "version",
									"type": "uint256"
								},
								{
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "oracleRequest",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"name": "payment",
									"type": "uint256"
								},
								{
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"name": "expiration",
									"type": "uint256"
								}
							],
							"name": "cancelOracleRequest",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancelOracleRequest(bytes32,uint256,bytes4,uint256)": "6ee4d553",
							"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": "40429946"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol": {
				"PointerInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress()": "38cc4831"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/vendor/Buffer.sol": {
				"Buffer": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":403:9653  library Buffer {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":403:9653  library Buffer {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058201fddf7a99a3e6e452fc62eb194e5ac50bb7318d23f5e25b6911d3ad69b1e450a0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058201fddf7a99a3e6e452fc62eb194e5ac50bb7318d23f5e25b6911d3ad69b1e450a0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1f 0xdd 0xf7 0xa9 SWAP11 RETURNDATACOPY PUSH15 0x452FC62EB194E5AC50BB7318D23F5E 0x25 0xb6 SWAP2 SAR GASPRICE 0xd6 SWAP12 0x1e GASLIMIT EXP STOP 0x29 ",
							"sourceMap": "403:9250:6:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058201fddf7a99a3e6e452fc62eb194e5ac50bb7318d23f5e25b6911d3ad69b1e450a0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1f 0xdd 0xf7 0xa9 SWAP11 RETURNDATACOPY PUSH15 0x452FC62EB194E5AC50BB7318D23F5E 0x25 0xb6 SWAP2 SAR GASPRICE 0xd6 SWAP12 0x1e GASLIMIT EXP STOP 0x29 ",
							"sourceMap": "403:9250:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"append(struct Buffer.buffer memory,bytes memory)": "infinite",
								"append(struct Buffer.buffer memory,bytes memory,uint256)": "infinite",
								"appendBytes20(struct Buffer.buffer memory,bytes20)": "infinite",
								"appendBytes32(struct Buffer.buffer memory,bytes32)": "infinite",
								"appendInt(struct Buffer.buffer memory,uint256,uint256)": "infinite",
								"appendUint8(struct Buffer.buffer memory,uint8)": "infinite",
								"fromBytes(bytes memory)": "infinite",
								"init(struct Buffer.buffer memory,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"resize(struct Buffer.buffer memory,uint256)": "infinite",
								"truncate(struct Buffer.buffer memory)": "infinite",
								"write(struct Buffer.buffer memory,uint256,bytes memory,uint256)": "infinite",
								"write(struct Buffer.buffer memory,uint256,bytes32,uint256)": "infinite",
								"writeBytes20(struct Buffer.buffer memory,uint256,bytes20)": "infinite",
								"writeInt(struct Buffer.buffer memory,uint256,uint256,uint256)": "infinite",
								"writeUint8(struct Buffer.buffer memory,uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 403,
									"end": 9653,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 9653,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201fddf7a99a3e6e452fc62eb194e5ac50bb7318d23f5e25b6911d3ad69b1e450a0029",
									".code": [
										{
											"begin": 403,
											"end": 9653,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "ADDRESS"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "EQ"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 403,
											"end": 9653,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":{\"keccak256\":\"0x900b4c8ab35b4876d89835a8b050c96107ace250a70f64c5bba6a78a60f03883\",\"urls\":[\"bzzr://408340da4e8fa35e608196ee508f11f9d44f6f70a10f0db0083ab20b5a894d59\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/vendor/CBOR.sol": {
				"CBOR": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":124:3418  library CBOR {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":124:3418  library CBOR {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058207416cc52f2be080318819860abc8f6a8b0dedcc44ed6331af76d0ab9e9814c9b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058207416cc52f2be080318819860abc8f6a8b0dedcc44ed6331af76d0ab9e9814c9b0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH21 0x16CC52F2BE080318819860ABC8F6A8B0DEDCC44ED6 CALLER BYTE 0xf7 PUSH14 0xAB9E9814C9B0029000000000000 ",
							"sourceMap": "124:3294:7:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058207416cc52f2be080318819860abc8f6a8b0dedcc44ed6331af76d0ab9e9814c9b0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH21 0x16CC52F2BE080318819860ABC8F6A8B0DEDCC44ED6 CALLER BYTE 0xf7 PUSH14 0xAB9E9814C9B0029000000000000 ",
							"sourceMap": "124:3294:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"encodeBigNum(struct Buffer.buffer memory,int256)": "infinite",
								"encodeBytes(struct Buffer.buffer memory,bytes memory)": "infinite",
								"encodeIndefiniteLengthType(struct Buffer.buffer memory,uint8)": "infinite",
								"encodeInt(struct Buffer.buffer memory,int256)": "infinite",
								"encodeSignedBigNum(struct Buffer.buffer memory,int256)": "infinite",
								"encodeString(struct Buffer.buffer memory,string memory)": "infinite",
								"encodeType(struct Buffer.buffer memory,uint8,uint256)": "infinite",
								"encodeUInt(struct Buffer.buffer memory,uint256)": "infinite",
								"endSequence(struct Buffer.buffer memory)": "infinite",
								"startArray(struct Buffer.buffer memory)": "infinite",
								"startMap(struct Buffer.buffer memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 3418,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 3418,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058207416cc52f2be080318819860abc8f6a8b0dedcc44ed6331af76d0ab9e9814c9b0029",
									".code": [
										{
											"begin": 124,
											"end": 3418,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "ADDRESS"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 3418,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":\"CBOR\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":{\"keccak256\":\"0x900b4c8ab35b4876d89835a8b050c96107ace250a70f64c5bba6a78a60f03883\",\"urls\":[\"bzzr://408340da4e8fa35e608196ee508f11f9d44f6f70a10f0db0083ab20b5a894d59\"]},\"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":{\"keccak256\":\"0xa6ccf721ad390d312d179af25b84db9a8c79bdd557390b3ead5f20a9513d0332\",\"urls\":[\"bzzr://7fadae93321d5ec1d9e0ace4197a3e44c4df6007b475ef67df7062b9189d82c8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol": {
				"ENSResolver": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addr(bytes32)": "3b3b57de"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@goplugin/contracts/src/v0.4/vendor/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"_newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":217:1685  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":540:590  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":567:572  owner */\n  0x0\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":567:585  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":575:585  msg.sender */\n  caller\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":567:585  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":217:1685  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":217:1685  contract Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x715018a6\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":238:258  address public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":238:258  address public owner */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n      tag_6\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_13)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_15\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_15:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1077:1082  owner */\n      0x0\n      dup1\n      sload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1058:1083  OwnershipRenounced(owner) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1077:1082  owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1058:1083  OwnershipRenounced(owner) */\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      swap2\n      log2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1105:1106  0 */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1089:1107  owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":238:258  address public owner */\n    tag_10:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_13:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1343:1372  _transferOwnership(_newOwner) */\n      tag_20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1362:1371  _newOwner */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1343:1361  _transferOwnership */\n      tag_21\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1343:1372  _transferOwnership(_newOwner) */\n      jump\t// in\n    tag_20:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1512:1683  function _transferOwnership(address _newOwner) internal {... */\n    tag_21:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1582:1605  _newOwner != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1574:1606  require(_newOwner != address(0)) */\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1638:1643  owner */\n      0x0\n      dup1\n      sload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1617:1655  OwnershipTransferred(owner, _newOwner) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1638:1643  owner */\n      swap3\n      and\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1617:1655  OwnershipTransferred(owner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1661:1666  owner */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1661:1678  owner = _newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1512:1683  function _transferOwnership(address _newOwner) internal {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820e2f55ace0d5dbe99e541981927aa95ac1ecc9e75809543fc0f468e4393f5c3da0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060008054600160a060020a0319163317905561020b806100326000396000f3006080604052600436106100565763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a6811461005b5780638da5cb5b14610072578063f2fde38b146100a3575b600080fd5b34801561006757600080fd5b506100706100c4565b005b34801561007e57600080fd5b50610087610130565b60408051600160a060020a039092168252519081900360200190f35b3480156100af57600080fd5b50610070600160a060020a036004351661013f565b600054600160a060020a031633146100db57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600054600160a060020a0316331461015657600080fd5b61015f81610162565b50565b600160a060020a038116151561017757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e2f55ace0d5dbe99e541981927aa95ac1ecc9e75809543fc0f468e4393f5c3da0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x20B DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x715018A6 DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F DUP2 PUSH2 0x162 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe2 0xf5 GAS 0xce 0xd 0x5d 0xbe SWAP10 0xe5 COINBASE SWAP9 NOT 0x27 0xaa SWAP6 0xac 0x1e 0xcc SWAP15 PUSH22 0x809543FC0F468E4393F5C3DA00290000000000000000 ",
							"sourceMap": "217:1468:9:-;;;540:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;567:5:9;:18;;-1:-1:-1;;;;;;567:18:9;575:10;567:18;;;217:1468;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100565763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a6811461005b5780638da5cb5b14610072578063f2fde38b146100a3575b600080fd5b34801561006757600080fd5b506100706100c4565b005b34801561007e57600080fd5b50610087610130565b60408051600160a060020a039092168252519081900360200190f35b3480156100af57600080fd5b50610070600160a060020a036004351661013f565b600054600160a060020a031633146100db57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600054600160a060020a0316331461015657600080fd5b61015f81610162565b50565b600160a060020a038116151561017757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e2f55ace0d5dbe99e541981927aa95ac1ecc9e75809543fc0f468e4393f5c3da0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x715018A6 DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F DUP2 PUSH2 0x162 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe2 0xf5 GAS 0xce 0xd 0x5d 0xbe SWAP10 0xe5 COINBASE SWAP9 NOT 0x27 0xaa SWAP6 0xac 0x1e 0xcc SWAP15 PUSH22 0x809543FC0F468E4393F5C3DA00290000000000000000 ",
							"sourceMap": "217:1468:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:9;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:9;;;;;;;;-1:-1:-1;;;;;238:20:9;;;;;;;;;;;;;;1274:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:9;-1:-1:-1;;;;;1274:103:9;;;;;1001:111;719:5;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:9;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:9;;;1001:111::o;238:20::-;;;-1:-1:-1;;;;;238:20:9;;:::o;1274:103::-;719:5;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:9;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:9;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:9;-1:-1:-1;;;;;1661:17:9;;;;;;;;;;1512:171::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "104600",
								"executionCost": "20445",
								"totalCost": "125045"
							},
							"external": {
								"owner()": "559",
								"renounceOwnership()": "22072",
								"transferOwnership(address)": "22804"
							},
							"internal": {
								"_transferOwnership(address)": "22241"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 217,
									"end": 1685,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "MSTORE"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 567,
									"end": 572,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "DUP1"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "AND"
								},
								{
									"begin": 575,
									"end": 585,
									"name": "CALLER"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "OR"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "SWAP1"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "SSTORE"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "DUP1"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "CODECOPY"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1685,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e2f55ace0d5dbe99e541981927aa95ac1ecc9e75809543fc0f468e4393f5c3da0029",
									".code": [
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "DIV"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "EQ"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "EQ"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "EQ"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 1685,
											"name": "REVERT"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMP"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "STOP"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMP"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP3"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "AND"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP3"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "MSTORE"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "MLOAD"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP2"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SUB"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "RETURN"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMP"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SLOAD"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "PUSH",
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "SWAP2"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "LOG2"
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SSTORE"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "AND"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP2"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 1343,
											"end": 1372,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP2"
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1343,
											"end": 1372,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1372,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1372,
											"name": "JUMPDEST"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1512,
											"end": 1683,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1512,
											"end": 1683,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "ISZERO"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "ISZERO"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "JUMPI"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "REVERT"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "JUMPDEST"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "SLOAD"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "DUP1"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "DUP6"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "AND"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "SWAP4"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "SWAP3"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "SWAP2"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "SWAP2"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "LOG3"
										},
										{
											"begin": 1661,
											"end": 1666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "AND"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "OR"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SSTORE"
										},
										{
											"begin": 1512,
											"end": 1683,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			},
			"contracts/InternalContract.sol": {
				"InternalContract": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "testMyFunc",
							"outputs": [
								{
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdrawPli",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_requestId",
									"type": "bytes32"
								},
								{
									"name": "_currentval",
									"type": "uint256"
								}
							],
							"name": "fulfill",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "currentValue",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showPrice",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "requestData",
							"outputs": [
								{
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "plidbs",
							"outputs": [
								{
									"name": "depositor",
									"type": "address"
								},
								{
									"name": "totalcredits",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getPluginToken",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "jobId",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "depositPLI",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_requestId",
									"type": "bytes32"
								},
								{
									"name": "_payment",
									"type": "uint256"
								},
								{
									"name": "_callbackFunctionId",
									"type": "bytes4"
								},
								{
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "cancelRequest",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_pli",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_jobid",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "currentVal",
									"type": "uint256"
								}
							],
							"name": "RequestFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "jobId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"name": "requestCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "jobId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"name": "requestCreatedTest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginCancelled",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"_newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/InternalContract.sol\":140:4706  contract InternalContract is PluginClient, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1088:1089  1 */\n  0x1\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1061:1089  uint256 private requests = 1 */\n  0x4\n  sstore\n    /* \"contracts/InternalContract.sol\":1078:1240  constructor(address _pli,address _oracle,string memory _jobid) public Ownable() {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/InternalContract.sol\":1078:1240  constructor(address _pli,address _oracle,string memory _jobid) public Ownable() {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  swap1\n  dup2\n  mstore\n  dup2\n  mload\n  0x20\n  dup4\n  add\n  mload\n  swap2\n  dup4\n  add\n  mload\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":567:572  owner */\n  0x6\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":567:585  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":575:585  msg.sender */\n  caller\n    /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":567:585  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/InternalContract.sol\":1078:1240  constructor(address _pli,address _oracle,string memory _jobid) public Ownable() {... */\n  swap1\n  swap3\n  add\n    /* \"contracts/InternalContract.sol\":1164:1184  setPluginToken(_pli) */\n  tag_6\n    /* \"contracts/InternalContract.sol\":1078:1240  constructor(address _pli,address _oracle,string memory _jobid) public Ownable() {... */\n  dup4\n    /* \"contracts/InternalContract.sol\":1164:1178  setPluginToken */\n  0x100000000\n  tag_7\n  dup2\n  mul\n    /* \"contracts/InternalContract.sol\":1164:1184  setPluginToken(_pli) */\n  div\n  jump\t// in\ntag_6:\n    /* \"contracts/InternalContract.sol\":1190:1196  oracle */\n  0x7\n    /* \"contracts/InternalContract.sol\":1190:1215  oracle = address(_oracle) */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n  sub(exp(0x2, 0xa0), 0x1)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/InternalContract.sol\":1221:1235  jobId = _jobid */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/InternalContract.sol\":1221:1226  jobId */\n  0x8\n  swap1\n    /* \"contracts/InternalContract.sol\":1221:1235  jobId = _jobid */\n  0x20\n  dup5\n  add\n  swap1\n  jump\t// in(tag_9)\ntag_8:\n  pop\n    /* \"contracts/InternalContract.sol\":1078:1240  constructor(address _pli,address _oracle,string memory _jobid) public Ownable() {... */\n  pop\n  pop\n  pop\n    /* \"contracts/InternalContract.sol\":140:4706  contract InternalContract is PluginClient, Ownable {... */\n  jump(tag_10)\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4632:4719  function setPluginToken(address _pli) internal {... */\ntag_7:\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4685:4688  pli */\n  0x2\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4685:4714  pli = PliTokenInterface(_pli) */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n  sub(exp(0x2, 0xa0), 0x1)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4632:4719  function setPluginToken(address _pli) internal {... */\n  jump\t// out\n    /* \"contracts/InternalContract.sol\":140:4706  contract InternalContract is PluginClient, Ownable {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_13\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_13:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_14:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_14)\ntag_15:\n  pop\n  tag_16\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_17)\ntag_16:\n  pop\n  swap1\n  jump\t// out\ntag_17:\n  tag_18\n  swap2\n  swap1\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_16\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_19)\ntag_18:\n  swap1\n  jump\t// out\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/InternalContract.sol\":140:4706  contract InternalContract is PluginClient, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), exp(0x2, 0xe0)), 0xffffffff)\n      0x2d8c762c\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x37fccd30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4357855e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x698996f8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8205bf6a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e0e0abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9dd4cc5d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa2e36c5f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa4b6f67e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc2939d97\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd378d5eb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xec65d0f8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/InternalContract.sol\":2949:3447  function testMyFunc()... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/InternalContract.sol\":2949:3447  function testMyFunc()... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/InternalContract.sol\":3894:4099  function withdrawPli() public onlyOwner {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/InternalContract.sol\":3894:4099  function withdrawPli() public onlyOwner {... */\n      pop\n      tag_22\n      jump(tag_23)\n    tag_22:\n      stop\n        /* \"contracts/InternalContract.sol\":3474:3745  function fulfill(bytes32 _requestId, uint256 _currentval)... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n      pop\n        /* \"contracts/InternalContract.sol\":3474:3745  function fulfill(bytes32 _requestId, uint256 _currentval)... */\n      tag_22\n      calldataload(0x4)\n      calldataload(0x24)\n      jump(tag_26)\n        /* \"contracts/InternalContract.sol\":432:459  uint256 public currentValue */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/InternalContract.sol\":432:459  uint256 public currentValue */\n      pop\n      tag_19\n      jump(tag_29)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n      pop\n      tag_22\n      jump(tag_32)\n        /* \"contracts/InternalContract.sol\":294:315  address public oracle */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/InternalContract.sol\":294:315  address public oracle */\n      pop\n      tag_34\n      jump(tag_35)\n    tag_34:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/InternalContract.sol\":463:493  uint256 public latestTimestamp */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/InternalContract.sol\":463:493  uint256 public latestTimestamp */\n      pop\n      tag_19\n      jump(tag_38)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":238:258  address public owner */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":238:258  address public owner */\n      pop\n      tag_34\n      jump(tag_41)\n        /* \"contracts/InternalContract.sol\":1803:1882  function showPrice() public view returns(uint256){... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/InternalContract.sol\":1803:1882  function showPrice() public view returns(uint256){... */\n      pop\n      tag_19\n      jump(tag_44)\n        /* \"contracts/InternalContract.sol\":2162:2946  function requestData(address _caller)... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n      pop\n        /* \"contracts/InternalContract.sol\":2162:2946  function requestData(address _caller)... */\n      tag_19\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_47)\n        /* \"contracts/InternalContract.sol\":615:660  mapping(address => PLIDatabase) public plidbs */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n      pop\n        /* \"contracts/InternalContract.sol\":615:660  mapping(address => PLIDatabase) public plidbs */\n      tag_49\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_50)\n    tag_49:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/InternalContract.sol\":3749:3843  function getPluginToken() public view returns (address) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"contracts/InternalContract.sol\":3749:3843  function getPluginToken() public view returns (address) {... */\n      pop\n      tag_34\n      jump(tag_53)\n        /* \"contracts/InternalContract.sol\":368:388  string  public jobId */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/InternalContract.sol\":368:388  string  public jobId */\n      pop\n      tag_55\n      jump(tag_56)\n    tag_55:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_57:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_57)\n    tag_58:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/InternalContract.sol\":368:388  string  public jobId */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_60\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_60:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/InternalContract.sol\":1244:1799  function depositPLI(uint256 _value) public returns(bool) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n      pop\n        /* \"contracts/InternalContract.sol\":1244:1799  function depositPLI(uint256 _value) public returns(bool) {... */\n      tag_62\n      calldataload(0x4)\n      jump(tag_63)\n    tag_62:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/InternalContract.sol\":4135:4378  function cancelRequest(... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_64:\n      pop\n        /* \"contracts/InternalContract.sol\":4135:4378  function cancelRequest(... */\n      tag_22\n      calldataload(0x4)\n      calldataload(0x24)\n      and(calldataload(0x44), not(sub(exp(0x2, 0xe0), 0x1)))\n      calldataload(0x64)\n      jump(tag_66)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n      tag_22\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_69)\n        /* \"contracts/InternalContract.sol\":2949:3447  function testMyFunc()... */\n    tag_20:\n        /* \"contracts/InternalContract.sol\":3009:3026  bytes32 requestId */\n      0x0\n        /* \"contracts/InternalContract.sol\":3095:3120  Plugin.Request memory req */\n      tag_70\n      jump\t// in(tag_71)\n    tag_70:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_73\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_73:\n        /* \"contracts/InternalContract.sol\":3158:3163  jobId */\n      0x8\n        /* \"contracts/InternalContract.sol\":3142:3164  stringToBytes32(jobId) */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":3123:3194  buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      tag_75\n      swap4\n        /* \"contracts/InternalContract.sol\":3142:3164  stringToBytes32(jobId) */\n      tag_76\n      swap4\n      swap2\n      swap3\n        /* \"contracts/InternalContract.sol\":3158:3163  jobId */\n      swap1\n      swap2\n        /* \"contracts/InternalContract.sol\":3142:3164  stringToBytes32(jobId) */\n      dup4\n      add\n        /* \"contracts/InternalContract.sol\":3158:3163  jobId */\n      dup3\n        /* \"contracts/InternalContract.sol\":3142:3164  stringToBytes32(jobId) */\n      dup3\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/InternalContract.sol\":3142:3157  stringToBytes32 */\n      tag_80\n        /* \"contracts/InternalContract.sol\":3142:3164  stringToBytes32(jobId) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/InternalContract.sol\":3166:3170  this */\n      address\n        /* \"contracts/InternalContract.sol\":3172:3193  this.fulfill.selector */\n      0x4357855e00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/InternalContract.sol\":3123:3141  buildPluginRequest */\n      tag_81\n        /* \"contracts/InternalContract.sol\":3123:3194  buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/InternalContract.sol\":3200:3223  req.add(\"_fsyms\",\"XDC\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x6\n      dup2\n      mstore\n      0x5f6673796d730000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      0x3\n      dup4\n      mstore\n      0x5844430000000000000000000000000000000000000000000000000000000000\n      swap1\n      dup4\n      add\n      mstore\n        /* \"contracts/InternalContract.sol\":3095:3194  Plugin.Request memory req = buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/InternalContract.sol\":3200:3223  req.add(\"_fsyms\",\"XDC\") */\n      tag_82\n      swap2\n        /* \"contracts/InternalContract.sol\":3095:3194  Plugin.Request memory req = buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      dup4\n      swap2\n        /* \"contracts/InternalContract.sol\":3200:3223  req.add(\"_fsyms\",\"XDC\") */\n      0xffffffff\n        /* \"contracts/InternalContract.sol\":3200:3207  req.add */\n      tag_83\n        /* \"contracts/InternalContract.sol\":3200:3223  req.add(\"_fsyms\",\"XDC\") */\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/InternalContract.sol\":3229:3253  req.add(\"_tsyms\",\"USDT\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x6\n      dup2\n      mstore\n      0x5f7473796d730000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      0x4\n      dup4\n      mstore\n      0x5553445400000000000000000000000000000000000000000000000000000000\n      swap1\n      dup4\n      add\n      mstore\n      tag_84\n      swap2\n        /* \"contracts/InternalContract.sol\":3229:3232  req */\n      dup4\n      swap2\n        /* \"contracts/InternalContract.sol\":3229:3253  req.add(\"_tsyms\",\"USDT\") */\n      swap1\n      0xffffffff\n        /* \"contracts/InternalContract.sol\":3229:3236  req.add */\n      tag_83\n        /* \"contracts/InternalContract.sol\":3229:3253  req.add(\"_tsyms\",\"USDT\") */\n      and\n      jump\t// in\n    tag_84:\n        /* \"contracts/InternalContract.sol\":3259:3285  req.addInt(\"times\", 10000) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x5\n      dup2\n      mstore\n      0x74696d6573000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      tag_85\n      swap1\n        /* \"contracts/InternalContract.sol\":3259:3262  req */\n      dup3\n      swap1\n        /* \"contracts/InternalContract.sol\":3279:3284  10000 */\n      0x2710\n        /* \"contracts/InternalContract.sol\":3259:3285  req.addInt(\"times\", 10000) */\n      0xffffffff\n        /* \"contracts/InternalContract.sol\":3259:3269  req.addInt */\n      tag_86\n        /* \"contracts/InternalContract.sol\":3259:3285  req.addInt(\"times\", 10000) */\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/InternalContract.sol\":3309:3312  now */\n      timestamp\n        /* \"contracts/InternalContract.sol\":3291:3306  latestTimestamp */\n      0xa\n        /* \"contracts/InternalContract.sol\":3291:3312  latestTimestamp = now */\n      sstore\n        /* \"contracts/InternalContract.sol\":3350:3356  oracle */\n      sload(0x7)\n        /* \"contracts/InternalContract.sol\":3330:3378  sendPluginRequestTo(oracle, req, ORACLE_PAYMENT) */\n      tag_87\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/InternalContract.sol\":3350:3356  oracle */\n      and\n        /* \"contracts/InternalContract.sol\":3358:3361  req */\n      dup3\n        /* \"contracts/InternalContract.sol\":277:290  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"contracts/InternalContract.sol\":3330:3349  sendPluginRequestTo */\n      tag_88\n        /* \"contracts/InternalContract.sol\":3330:3378  sendPluginRequestTo(oracle, req, ORACLE_PAYMENT) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/InternalContract.sol\":3424:3429  jobId */\n      0x8\n        /* \"contracts/InternalContract.sol\":3408:3430  stringToBytes32(jobId) */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x2\n      0x100\n      0x1\n      dup8\n      and\n      iszero\n      mul\n      not(0x0)\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":3318:3378  requestId = sendPluginRequestTo(oracle, req, ORACLE_PAYMENT) */\n      swap4\n      swap6\n      pop\n      dup6\n      swap4\n        /* \"contracts/InternalContract.sol\":3408:3430  stringToBytes32(jobId) */\n      tag_89\n      swap4\n      swap1\n      swap3\n        /* \"contracts/InternalContract.sol\":3424:3429  jobId */\n      swap1\n      swap2\n        /* \"contracts/InternalContract.sol\":3408:3430  stringToBytes32(jobId) */\n      dup4\n      add\n        /* \"contracts/InternalContract.sol\":3424:3429  jobId */\n      dup3\n        /* \"contracts/InternalContract.sol\":3408:3430  stringToBytes32(jobId) */\n      dup3\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_89:\n        /* \"contracts/InternalContract.sol\":3389:3442  requestCreatedTest(stringToBytes32(jobId), requestId) */\n      mload(0x40)\n      0xeafd6b8e34637ca199864ee18f22fc46cbc730739912f5b54501a2a9e57e8070\n      swap1\n      0x0\n      swap1\n      log3\n        /* \"contracts/InternalContract.sol\":2949:3447  function testMyFunc()... */\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":3894:4099  function withdrawPli() public onlyOwner {... */\n    tag_23:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      sload(0x6)\n        /* \"contracts/InternalContract.sol\":3940:3961  PliTokenInterface pli */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_94\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_94:\n        /* \"contracts/InternalContract.sol\":3982:4002  pluginTokenAddress() */\n      tag_96\n        /* \"contracts/InternalContract.sol\":3982:4000  pluginTokenAddress */\n      tag_97\n        /* \"contracts/InternalContract.sol\":3982:4002  pluginTokenAddress() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":4064:4068  this */\n      address\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      0x4\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/InternalContract.sol\":3940:4003  PliTokenInterface pli = PliTokenInterface(pluginTokenAddress()) */\n      swap2\n      swap3\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/InternalContract.sol\":4017:4029  pli.transfer */\n      dup4\n      and\n      swap2\n      0xa9059cbb\n      swap2\n        /* \"contracts/InternalContract.sol\":4030:4040  msg.sender */\n      caller\n      swap2\n        /* \"contracts/InternalContract.sol\":4017:4029  pli.transfer */\n      dup5\n      swap2\n        /* \"contracts/InternalContract.sol\":4042:4055  pli.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x0\n        /* \"contracts/InternalContract.sol\":4017:4029  pli.transfer */\n      dup8\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_98:\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_99:\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_100:\n      pop\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      mload\n        /* \"contracts/InternalContract.sol\":4017:4071  pli.transfer(msg.sender, pli.balanceOf(address(this))) */\n      0x40\n      dup1\n      mload\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup7\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap4\n      and\n      0x4\n      dup5\n      add\n      mstore\n      0x24\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      mload\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/InternalContract.sol\":4042:4070  pli.balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"contracts/InternalContract.sol\":4017:4071  pli.transfer(msg.sender, pli.balanceOf(address(this))) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_101:\n        /* \"contracts/InternalContract.sol\":4017:4071  pli.transfer(msg.sender, pli.balanceOf(address(this))) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"contracts/InternalContract.sol\":4017:4071  pli.transfer(msg.sender, pli.balanceOf(address(this))) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n      pop\n        /* \"contracts/InternalContract.sol\":4017:4071  pli.transfer(msg.sender, pli.balanceOf(address(this))) */\n      mload\n        /* \"contracts/InternalContract.sol\":4009:4094  require(pli.transfer(msg.sender, pli.balanceOf(address(this))), \"Unable to transfer\") */\n      iszero\n      iszero\n      tag_104\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x556e61626c6520746f207472616e736665720000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/InternalContract.sol\":3894:4099  function withdrawPli() public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":3474:3745  function fulfill(bytes32 _requestId, uint256 _currentval)... */\n    tag_26:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8456:8483  pendingRequests[_requestId] */\n      0x0\n      dup3\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8456:8471  pendingRequests */\n      0x5\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8456:8483  pendingRequests[_requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup3\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8442:8452  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8442:8483  msg.sender == pendingRequests[_requestId] */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8434:8528  require(msg.sender == pendingRequests[_requestId], \"Source must be the oracle of the request\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x28\n      0x24\n      dup3\n      add\n      mstore\n      0x536f75726365206d75737420626520746865206f7261636c65206f6620746865\n      0x44\n      dup3\n      add\n      mstore\n      0x2072657175657374000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_106:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8541:8568  pendingRequests[_requestId] */\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8541:8556  pendingRequests */\n      0x5\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8541:8568  pendingRequests[_requestId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8534:8568  delete pendingRequests[_requestId] */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8579:8606  PluginFulfilled(_requestId) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8557:8567  _requestId */\n      dup3\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":8579:8606  PluginFulfilled(_requestId) */\n      0xa40ad10b942505047c532a7399bf5eac2768b11b7155b40ec80309aea567f998\n      swap2\n      log2\n        /* \"contracts/InternalContract.sol\":3667:3708  RequestFulfilled(_requestId, _currentval) */\n      mload(0x40)\n        /* \"contracts/InternalContract.sol\":3696:3707  _currentval */\n      dup3\n      swap1\n        /* \"contracts/InternalContract.sol\":3684:3694  _requestId */\n      dup5\n      swap1\n        /* \"contracts/InternalContract.sol\":3667:3708  RequestFulfilled(_requestId, _currentval) */\n      0x1ca8663227a7fe9919713a01d344afbb434e234f35a3e540a6ad924f88771f38\n      swap1\n      0x0\n      swap1\n      log3\n      pop\n        /* \"contracts/InternalContract.sol\":3714:3726  currentValue */\n      0x9\n        /* \"contracts/InternalContract.sol\":3714:3740  currentValue = _currentval */\n      sstore\n      pop\n        /* \"contracts/InternalContract.sol\":3474:3745  function fulfill(bytes32 _requestId, uint256 _currentval)... */\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":432:459  uint256 public currentValue */\n    tag_29:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n    tag_32:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_109\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_109:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1077:1082  owner */\n      sload(0x6)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1058:1083  OwnershipRenounced(owner) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1077:1082  owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1058:1083  OwnershipRenounced(owner) */\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1077:1082  owner */\n      0x0\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1058:1083  OwnershipRenounced(owner) */\n      log2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1089:1094  owner */\n      0x6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1089:1107  owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1001:1112  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":294:315  address public oracle */\n    tag_35:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x7))\n      dup2\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":463:493  uint256 public latestTimestamp */\n    tag_38:\n      sload(0xa)\n      dup2\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":238:258  address public owner */\n    tag_41:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n      dup2\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":1803:1882  function showPrice() public view returns(uint256){... */\n    tag_44:\n        /* \"contracts/InternalContract.sol\":1865:1877  currentValue */\n      sload(0x9)\n        /* \"contracts/InternalContract.sol\":1803:1882  function showPrice() public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":2162:2946  function requestData(address _caller)... */\n    tag_47:\n        /* \"contracts/InternalContract.sol\":2224:2241  bytes32 requestId */\n      0x0\n        /* \"contracts/InternalContract.sol\":2331:2354  uint256 _a_totalCredits */\n      dup1\n        /* \"contracts/InternalContract.sol\":2589:2614  Plugin.Request memory req */\n      tag_112\n      jump\t// in(tag_71)\n    tag_112:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/InternalContract.sol\":2357:2372  plidbs[_caller] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":2357:2363  plidbs */\n      0xb\n        /* \"contracts/InternalContract.sol\":2357:2372  plidbs[_caller] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/InternalContract.sol\":2357:2385  plidbs[_caller].totalcredits */\n      0x1\n      add\n      sload\n      swap2\n      pop\n        /* \"contracts/InternalContract.sol\":277:290  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"contracts/InternalContract.sol\":2399:2429  _a_totalCredits>ORACLE_PAYMENT */\n      dup3\n      gt\n        /* \"contracts/InternalContract.sol\":2391:2454  require(_a_totalCredits>ORACLE_PAYMENT,\"NO_SUFFICIENT_CREDITS\") */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      0x4e4f5f53554646494349454e545f435245444954530000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/InternalContract.sol\":2460:2475  plidbs[_caller] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":2460:2466  plidbs */\n      0xb\n        /* \"contracts/InternalContract.sol\":2460:2475  plidbs[_caller] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      not(0x2386f26fc0ffff)\n        /* \"contracts/InternalContract.sol\":2491:2523  _a_totalCredits - ORACLE_PAYMENT */\n      dup6\n      add\n        /* \"contracts/InternalContract.sol\":2460:2488  plidbs[_caller].totalcredits */\n      0x1\n      swap2\n      dup3\n      add\n        /* \"contracts/InternalContract.sol\":2460:2523  plidbs[_caller].totalcredits = _a_totalCredits - ORACLE_PAYMENT */\n      sstore\n        /* \"contracts/InternalContract.sol\":2652:2657  jobId */\n      0x8\n        /* \"contracts/InternalContract.sol\":2636:2658  stringToBytes32(jobId) */\n      dup1\n      sload\n      dup5\n      mload\n      0x2\n      swap4\n      dup3\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap2\n      and\n      swap3\n      swap1\n      swap3\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup4\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup4\n      dup3\n      mstore\n        /* \"contracts/InternalContract.sol\":2617:2688  buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      tag_115\n      swap4\n        /* \"contracts/InternalContract.sol\":2636:2658  stringToBytes32(jobId) */\n      tag_76\n      swap4\n      dup4\n      add\n        /* \"contracts/InternalContract.sol\":2652:2657  jobId */\n      dup3\n        /* \"contracts/InternalContract.sol\":2636:2658  stringToBytes32(jobId) */\n      dup3\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n        /* \"contracts/InternalContract.sol\":2617:2688  buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n    tag_115:\n        /* \"contracts/InternalContract.sol\":2694:2717  req.add(\"_fsyms\",\"XDC\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x6\n      dup2\n      mstore\n      0x5f6673796d730000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      0x3\n      dup4\n      mstore\n      0x5844430000000000000000000000000000000000000000000000000000000000\n      swap1\n      dup4\n      add\n      mstore\n        /* \"contracts/InternalContract.sol\":2589:2688  Plugin.Request memory req = buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/InternalContract.sol\":2694:2717  req.add(\"_fsyms\",\"XDC\") */\n      tag_120\n      swap2\n        /* \"contracts/InternalContract.sol\":2589:2688  Plugin.Request memory req = buildPluginRequest(stringToBytes32(jobId), this, this.fulfill.selector) */\n      dup4\n      swap2\n        /* \"contracts/InternalContract.sol\":2694:2717  req.add(\"_fsyms\",\"XDC\") */\n      0xffffffff\n        /* \"contracts/InternalContract.sol\":2694:2701  req.add */\n      tag_83\n        /* \"contracts/InternalContract.sol\":2694:2717  req.add(\"_fsyms\",\"XDC\") */\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/InternalContract.sol\":2723:2747  req.add(\"_tsyms\",\"USDT\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x6\n      dup2\n      mstore\n      0x5f7473796d730000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      0x4\n      dup4\n      mstore\n      0x5553445400000000000000000000000000000000000000000000000000000000\n      swap1\n      dup4\n      add\n      mstore\n      tag_121\n      swap2\n        /* \"contracts/InternalContract.sol\":2723:2726  req */\n      dup4\n      swap2\n        /* \"contracts/InternalContract.sol\":2723:2747  req.add(\"_tsyms\",\"USDT\") */\n      swap1\n      0xffffffff\n        /* \"contracts/InternalContract.sol\":2723:2730  req.add */\n      tag_83\n        /* \"contracts/InternalContract.sol\":2723:2747  req.add(\"_tsyms\",\"USDT\") */\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/InternalContract.sol\":2753:2779  req.addInt(\"times\", 10000) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x5\n      dup2\n      mstore\n      0x74696d6573000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      tag_122\n      swap1\n        /* \"contracts/InternalContract.sol\":2753:2756  req */\n      dup3\n      swap1\n        /* \"contracts/InternalContract.sol\":2773:2778  10000 */\n      0x2710\n        /* \"contracts/InternalContract.sol\":2753:2779  req.addInt(\"times\", 10000) */\n      0xffffffff\n        /* \"contracts/InternalContract.sol\":2753:2763  req.addInt */\n      tag_86\n        /* \"contracts/InternalContract.sol\":2753:2779  req.addInt(\"times\", 10000) */\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/InternalContract.sol\":2817:2823  oracle */\n      sload(0x7)\n        /* \"contracts/InternalContract.sol\":2797:2845  sendPluginRequestTo(oracle, req, ORACLE_PAYMENT) */\n      tag_123\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/InternalContract.sol\":2817:2823  oracle */\n      and\n        /* \"contracts/InternalContract.sol\":2825:2828  req */\n      dup3\n        /* \"contracts/InternalContract.sol\":277:290  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"contracts/InternalContract.sol\":2797:2816  sendPluginRequestTo */\n      tag_88\n        /* \"contracts/InternalContract.sol\":2797:2845  sendPluginRequestTo(oracle, req, ORACLE_PAYMENT) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/InternalContract.sol\":2869:2872  now */\n      timestamp\n        /* \"contracts/InternalContract.sol\":2851:2866  latestTimestamp */\n      0xa\n        /* \"contracts/InternalContract.sol\":2851:2872  latestTimestamp = now */\n      sstore\n        /* \"contracts/InternalContract.sol\":2923:2928  jobId */\n      0x8\n        /* \"contracts/InternalContract.sol\":2907:2929  stringToBytes32(jobId) */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x2\n      0x100\n      0x1\n      dup8\n      and\n      iszero\n      mul\n      not(0x0)\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":2785:2845  requestId = sendPluginRequestTo(oracle, req, ORACLE_PAYMENT) */\n      swap4\n      swap7\n      pop\n      dup7\n      swap4\n        /* \"contracts/InternalContract.sol\":2907:2929  stringToBytes32(jobId) */\n      tag_124\n      swap4\n      swap1\n      swap3\n        /* \"contracts/InternalContract.sol\":2923:2928  jobId */\n      swap1\n      swap2\n        /* \"contracts/InternalContract.sol\":2907:2929  stringToBytes32(jobId) */\n      dup4\n      add\n        /* \"contracts/InternalContract.sol\":2923:2928  jobId */\n      dup3\n        /* \"contracts/InternalContract.sol\":2907:2929  stringToBytes32(jobId) */\n      dup3\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_124:\n        /* \"contracts/InternalContract.sol\":2883:2941  requestCreated(_caller, stringToBytes32(jobId), requestId) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      dup8\n      and\n      swap1\n      0x7f3df4038a13e7b83557e5a0ebf67fec07391a522319ab42e81255e88de18ffb\n      swap1\n      0x0\n      swap1\n      log4\n        /* \"contracts/InternalContract.sol\":2162:2946  function requestData(address _caller)... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":615:660  mapping(address => PLIDatabase) public plidbs */\n    tag_50:\n      mstore(0x20, 0xb)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x1\n      swap1\n      swap2\n      add\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":3749:3843  function getPluginToken() public view returns (address) {... */\n    tag_53:\n        /* \"contracts/InternalContract.sol\":3796:3803  address */\n      0x0\n        /* \"contracts/InternalContract.sol\":3818:3838  pluginTokenAddress() */\n      tag_129\n        /* \"contracts/InternalContract.sol\":3818:3836  pluginTokenAddress */\n      tag_97\n        /* \"contracts/InternalContract.sol\":3818:3838  pluginTokenAddress() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/InternalContract.sol\":3811:3838  return pluginTokenAddress() */\n      swap1\n      pop\n        /* \"contracts/InternalContract.sol\":3749:3843  function getPluginToken() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":368:388  string  public jobId */\n    tag_56:\n      0x8\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":1244:1799  function depositPLI(uint256 _value) public returns(bool) {... */\n    tag_63:\n        /* \"contracts/InternalContract.sol\":1295:1299  bool */\n      0x0\n        /* \"contracts/InternalContract.sol\":1405:1426  PliTokenInterface pli */\n      dup1\n        /* \"contracts/InternalContract.sol\":1578:1603  PLIDatabase memory _plidb */\n      tag_133\n      jump\t// in(tag_134)\n    tag_133:\n        /* \"contracts/InternalContract.sol\":1632:1653  uint256 _totalCredits */\n      0x0\n        /* \"contracts/InternalContract.sol\":1325:1335  100*10**18 */\n      0x56bc75e2d63100000\n        /* \"contracts/InternalContract.sol\":1317:1335  _value<=100*10**18 */\n      dup6\n      gt\n      iszero\n        /* \"contracts/InternalContract.sol\":1309:1364  require(_value<=100*10**18,\"NOT_MORE_THAN_100_ALLOWED\") */\n      tag_136\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x4e4f545f4d4f52455f5448414e5f3130305f414c4c4f57454400000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/InternalContract.sol\":1447:1467  pluginTokenAddress() */\n      tag_137\n        /* \"contracts/InternalContract.sol\":1447:1465  pluginTokenAddress */\n      tag_97\n        /* \"contracts/InternalContract.sol\":1447:1467  pluginTokenAddress() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      0x40\n      dup1\n      mload\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":1493:1503  msg.sender */\n      caller\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      0x4\n      dup3\n      add\n      mstore\n        /* \"contracts/InternalContract.sol\":1512:1516  this */\n      address\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"contracts/InternalContract.sol\":1405:1468  PliTokenInterface pli = PliTokenInterface(pluginTokenAddress()) */\n      swap2\n      swap5\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/InternalContract.sol\":1476:1492  pli.transferFrom */\n      dup6\n      and\n      swap2\n      0x23b872dd\n      swap2\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      0x64\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x0\n        /* \"contracts/InternalContract.sol\":1476:1492  pli.transferFrom */\n      dup8\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_138\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_138:\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_139:\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_140:\n      pop\n      pop\n        /* \"contracts/InternalContract.sol\":1613:1623  msg.sender */\n      caller\n        /* \"contracts/InternalContract.sol\":1606:1624  plidbs[msg.sender] */\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":1606:1612  plidbs */\n      0xb\n        /* \"contracts/InternalContract.sol\":1476:1525  pli.transferFrom(msg.sender,address(this),_value) */\n      0x20\n        /* \"contracts/InternalContract.sol\":1606:1624  plidbs[msg.sender] */\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/InternalContract.sol\":1578:1624  PLIDatabase memory _plidb = plidbs[msg.sender] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      dup2\n      dup2\n      and\n      dup4\n      mstore\n      0x1\n      dup1\n      dup6\n      add\n      dup1\n      sload\n      swap5\n      dup9\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/InternalContract.sol\":1713:1775  PLIDatabase(... */\n      dup7\n      mload\n      dup1\n      dup9\n      add\n      swap1\n      swap8\n      mstore\n      dup11\n      dup8\n      mstore\n        /* \"contracts/InternalContract.sol\":1656:1684  _plidb.totalcredits + _value */\n      swap15\n      swap1\n      swap4\n      add\n        /* \"contracts/InternalContract.sol\":1713:1775  PLIDatabase(... */\n      dup6\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/InternalContract.sol\":1692:1710  plidbs[msg.sender] */\n      swap9\n      swap1\n      swap8\n      mstore\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/InternalContract.sol\":1692:1775  plidbs[msg.sender] = PLIDatabase(... */\n      swap1\n      mload\n      swap1\n      swap4\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n      swap1\n      mload\n      swap1\n      swap6\n      sstore\n      pop\n        /* \"contracts/InternalContract.sol\":1578:1624  PLIDatabase memory _plidb = plidbs[msg.sender] */\n      swap3\n      swap4\n        /* \"contracts/InternalContract.sol\":1244:1799  function depositPLI(uint256 _value) public returns(bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/InternalContract.sol\":4135:4378  function cancelRequest(... */\n    tag_66:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/InternalContract.sol\":4298:4373  cancelPluginRequest(_requestId, _payment, _callbackFunctionId, _expiration) */\n      tag_144\n        /* \"contracts/InternalContract.sol\":4318:4328  _requestId */\n      dup5\n        /* \"contracts/InternalContract.sol\":4330:4338  _payment */\n      dup5\n        /* \"contracts/InternalContract.sol\":4340:4359  _callbackFunctionId */\n      dup5\n        /* \"contracts/InternalContract.sol\":4361:4372  _expiration */\n      dup5\n        /* \"contracts/InternalContract.sol\":4298:4317  cancelPluginRequest */\n      tag_145\n        /* \"contracts/InternalContract.sol\":4298:4373  cancelPluginRequest(_requestId, _payment, _callbackFunctionId, _expiration) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/InternalContract.sol\":4135:4378  function cancelRequest(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1274:1377  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_69:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":719:724  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:715  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":705:724  msg.sender == owner */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":697:725  require(msg.sender == owner) */\n      tag_147\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_147:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1343:1372  _transferOwnership(_newOwner) */\n      tag_104\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1362:1371  _newOwner */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1343:1361  _transferOwnership */\n      tag_150\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1343:1372  _transferOwnership(_newOwner) */\n      jump\t// in\n        /* \"contracts/InternalContract.sol\":4431:4703  function stringToBytes32(string memory source) private pure returns (bytes32 result) {... */\n    tag_80:\n        /* \"contracts/InternalContract.sol\":4580:4606  tempEmptyStringTest.length */\n      dup1\n      mload\n        /* \"contracts/InternalContract.sol\":4500:4514  bytes32 result */\n      0x0\n      swap1\n        /* \"contracts/InternalContract.sol\":4563:4569  source */\n      dup3\n      swap1\n        /* \"contracts/InternalContract.sol\":4580:4611  tempEmptyStringTest.length == 0 */\n      iszero\n        /* \"contracts/InternalContract.sol\":4576:4638  if (tempEmptyStringTest.length == 0) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"contracts/InternalContract.sol\":4628:4631  0x0 */\n      0x0\n      swap2\n      pop\n        /* \"contracts/InternalContract.sol\":4621:4631  return 0x0 */\n      jump(tag_151)\n        /* \"contracts/InternalContract.sol\":4576:4638  if (tempEmptyStringTest.length == 0) {... */\n    tag_152:\n        /* \"contracts/InternalContract.sol\":4689:4691  32 */\n      0x20\n        /* \"contracts/InternalContract.sol\":4681:4687  source */\n      dup4\n        /* \"contracts/InternalContract.sol\":4677:4692  add(source, 32) */\n      add\n        /* \"contracts/InternalContract.sol\":4671:4693  mload(add(source, 32)) */\n      mload\n        /* \"contracts/InternalContract.sol\":4661:4693  result := mload(add(source, 32)) */\n      swap2\n      pop\n        /* \"contracts/InternalContract.sol\":4652:4699  { ... */\n    tag_151:\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1680:1966  function buildPluginRequest(... */\n    tag_81:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1825:1839  Plugin.Request */\n      tag_153\n      jump\t// in(tag_71)\n    tag_153:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1854:1879  Plugin.Request memory req */\n      tag_154\n      jump\t// in(tag_71)\n    tag_154:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1892:1961  req.initialize(_specId, _callbackAddress, _callbackFunctionSignature) */\n      tag_156\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1892:1895  req */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1907:1914  _specId */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1916:1932  _callbackAddress */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1934:1960  _callbackFunctionSignature */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1892:1961  req.initialize(_specId, _callbackAddress, _callbackFunctionSignature) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1892:1906  req.initialize */\n      tag_157\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1892:1961  req.initialize(_specId, _callbackAddress, _callbackFunctionSignature) */\n      and\n      jump\t// in\n    tag_156:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1885:1961  return req.initialize(_specId, _callbackAddress, _callbackFunctionSignature) */\n      swap6\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":1680:1966  function buildPluginRequest(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1922:2077  function add(Request memory self, string _key, string _value)... */\n    tag_83:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2010:2018  self.buf */\n      0x80\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2010:2037  self.buf.encodeString(_key) */\n      tag_159\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2032:2036  _key */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2010:2037  self.buf.encodeString(_key) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2010:2031  self.buf.encodeString */\n      tag_160\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2010:2037  self.buf.encodeString(_key) */\n      and\n      jump\t// in\n    tag_159:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2043:2051  self.buf */\n      0x80\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2043:2072  self.buf.encodeString(_value) */\n      tag_161\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2065:2071  _value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2043:2072  self.buf.encodeString(_value) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2043:2064  self.buf.encodeString */\n      tag_160\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2043:2072  self.buf.encodeString(_value) */\n      and\n      jump\t// in\n    tag_161:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1922:2077  function add(Request memory self, string _key, string _value)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2647:2802  function addInt(Request memory self, string _key, int256 _value)... */\n    tag_86:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2738:2746  self.buf */\n      0x80\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2738:2765  self.buf.encodeString(_key) */\n      tag_163\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2760:2764  _key */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2738:2765  self.buf.encodeString(_key) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2738:2759  self.buf.encodeString */\n      tag_160\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2738:2765  self.buf.encodeString(_key) */\n      and\n      jump\t// in\n    tag_163:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2771:2779  self.buf */\n      0x80\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2771:2797  self.buf.encodeInt(_value) */\n      tag_161\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2790:2796  _value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2771:2797  self.buf.encodeInt(_value) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2771:2789  self.buf.encodeInt */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":2771:2797  self.buf.encodeInt(_value) */\n      and\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":2917:3383  function sendPluginRequestTo(address _oracle, Plugin.Request memory _req, uint256 _payment)... */\n    tag_88:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3035:3052  bytes32 requestId */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3101:3105  this */\n      address\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3107:3115  requests */\n      sload(0x4)\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3084:3116  abi.encodePacked(this, requests) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3084:3116  abi.encodePacked(this, requests) */\n      swap1\n      0x40\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3074:3117  keccak256(abi.encodePacked(this, requests)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_167:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":58:69   */\n      dup4\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_167)\n    tag_168:\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":344:354   */\n      dup2\n      mload\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      swap4\n      dup5\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n      not(0x0)\n        /* \"--CODEGEN--\":246:276   */\n      add\n        /* \"--CODEGEN--\":311:320   */\n      dup1\n      not\n        /* \"--CODEGEN--\":295:321   */\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":340:361   */\n      swap2\n      and\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":365:398   */\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3074:3117  keccak256(abi.encodePacked(this, requests)) */\n      0x40\n      dup1\n      mload\n      swap3\n      swap1\n      swap5\n      add\n      dup3\n      swap1\n      sub\n      swap1\n      swap2\n      keccak256\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3136:3144  requests */\n      sload(0x4)\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3123:3133  _req.nonce */\n      0x60\n      dup11\n      add\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3123:3144  _req.nonce = requests */\n      mstore\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3150:3176  pendingRequests[requestId] */\n      dup2\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3150:3165  pendingRequests */\n      0x5\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3150:3176  pendingRequests[requestId] */\n      swap1\n      swap3\n      mstore\n      dup4\n      dup3\n      keccak256\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3150:3186  pendingRequests[requestId] = _oracle */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup13\n      and\n      or\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3197:3223  PluginRequested(requestId) */\n      swap3\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3074:3117  keccak256(abi.encodePacked(this, requests)) */\n      swap3\n      swap6\n      pop\n      dup6\n      swap5\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3197:3223  PluginRequested(requestId) */\n      0xa6745906207afb96a5801b8e5711fd7b74c5780ce893a973806e179d675bbe24\n      swap4\n      pop\n      swap2\n      swap1\n      pop\n      log2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3240  pli */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x2))\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3256  pli.transferAndCall */\n      0x4000aea0\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3257:3264  _oracle */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3266:3274  _payment */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3276:3295  encodeRequest(_req) */\n      tag_170\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3290:3294  _req */\n      dup8\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3276:3289  encodeRequest */\n      tag_171\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3276:3295  encodeRequest(_req) */\n      jump\t// in\n    tag_170:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3296  pli.transferAndCall(_oracle, _payment, encodeRequest(_req)) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      exp(0x2, 0xe0)\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_172:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_172)\n    tag_173:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3296  pli.transferAndCall(_oracle, _payment, encodeRequest(_req)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3296  pli.transferAndCall(_oracle, _payment, encodeRequest(_req)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_177:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3296  pli.transferAndCall(_oracle, _payment, encodeRequest(_req)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_178:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3237:3296  pli.transferAndCall(_oracle, _payment, encodeRequest(_req)) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3229:3336  require(pli.transferAndCall(_oracle, _payment, encodeRequest(_req)), \"unable to transferAndCall to oracle\") */\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261\n      0x44\n      dup3\n      add\n      mstore\n      0x636c650000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_179:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3342:3350  requests */\n      0x4\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3342:3355  requests += 1 */\n      dup1\n      sload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3354:3355  1 */\n      0x1\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3342:3355  requests += 1 */\n      add\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":2917:3383  function sendPluginRequestTo(address _oracle, Plugin.Request memory _req, uint256 _payment)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":5072:5178  function pluginTokenAddress()... */\n    tag_97:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":5169:5172  pli */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x2))\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":5072:5178  function pluginTokenAddress()... */\n      swap1\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3899:4304  function cancelPluginRequest(... */\n    tag_145:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4050:4082  PluginRequestInterface requested */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4108:4135  pendingRequests[_requestId] */\n      dup5\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4108:4123  pendingRequests */\n      0x5\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4108:4135  pendingRequests[_requestId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4142:4176  delete pendingRequests[_requestId] */\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4187:4214  PluginCancelled(_requestId) */\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4108:4135  pendingRequests[_requestId] */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4124:4134  _requestId */\n      dup7\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4187:4214  PluginCancelled(_requestId) */\n      0x715822738dad692e521ebc0193d189bf23153eb1d4420173d6b30cd8add9f9a6\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4050:4082  PluginRequestInterface requested */\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4187:4214  PluginCancelled(_requestId) */\n      log2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4299  requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration) */\n      0x40\n      dup1\n      mload\n      0x6ee4d55300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n      0x24\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n      not(sub(exp(0x2, 0xe0), 0x1))\n      dup6\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4249  requested.cancelOracleRequest */\n      dup4\n      and\n      swap2\n      0x6ee4d553\n      swap2\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4299  requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration) */\n      0x84\n      dup1\n      dup4\n      add\n      swap3\n      0x0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4249  requested.cancelOracleRequest */\n      dup8\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4299  requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_182\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_182:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4299  requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_183\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_183:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":4220:4299  requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration) */\n      pop\n      pop\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":3899:4304  function cancelPluginRequest(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1512:1683  function _transferOwnership(address _newOwner) internal {... */\n    tag_150:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1582:1605  _newOwner != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1574:1606  require(_newOwner != address(0)) */\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1638:1643  owner */\n      sload(0x6)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1617:1655  OwnershipTransferred(owner, _newOwner) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1638:1643  owner */\n      and\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1617:1655  OwnershipTransferred(owner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1638:1643  owner */\n      0x0\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1617:1655  OwnershipTransferred(owner, _newOwner) */\n      log3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1661:1666  owner */\n      0x6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1661:1678  owner = _newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":1512:1683  function _transferOwnership(address _newOwner) internal {... */\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":948:1308  function initialize(... */\n    tag_157:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1097:1111  Plugin.Request */\n      tag_186\n      jump\t// in(tag_71)\n    tag_186:\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1126:1173  Buffer_Plugin.init(self.buf, defaultBufferSize) */\n      tag_188\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1145:1149  self */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1145:1153  self.buf */\n      0x80\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":324:327  256 */\n      0x100\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1126:1144  Buffer_Plugin.init */\n      tag_189\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1126:1173  Buffer_Plugin.init(self.buf, defaultBufferSize) */\n      jump\t// in\n    tag_188:\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1179:1192  self.id = _id */\n      swap2\n      dup4\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1198:1237  self.callbackAddress = _callbackAddress */\n      and\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1198:1218  self.callbackAddress */\n      0x20\n      dup4\n      add\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1198:1237  self.callbackAddress = _callbackAddress */\n      mstore\n      not(sub(exp(0x2, 0xe0), 0x1))\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1243:1286  self.callbackFunctionId = _callbackFunction */\n      and\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1243:1266  self.callbackFunctionId */\n      0x40\n      dup3\n      add\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1243:1286  self.callbackFunctionId = _callbackFunction */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":1179:1192  self.id = _id */\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/Plugin.sol\":948:1308  function initialize(... */\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2803:2998  function encodeString(BufferPlugin.buffer memory buf, string memory value) internal pure {... */\n    tag_160:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2902:2957  encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length) */\n      tag_191\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2913:2916  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":387:388  3 */\n      0x3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2943:2948  value */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2937:2956  bytes(value).length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2902:2912  encodeType */\n      tag_192\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2902:2957  encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length) */\n      jump\t// in\n    tag_191:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2967:2991  buf.append(bytes(value)) */\n      tag_161\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2967:2970  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2984:2989  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2967:2991  buf.append(bytes(value)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2967:2977  buf.append */\n      tag_194\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2967:2991  buf.append(bytes(value)) */\n      and\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1724:2169  function encodeInt(BufferPlugin.buffer memory buf, int value) internal pure {... */\n    tag_165:\n      not(0xffffffffffffffff)\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1813:1818  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1813:1841  value < -0x10000000000000000 */\n      slt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1810:2163  if(value < -0x10000000000000000) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1857:1887  encodeSignedBigNum(buf, value) */\n      tag_197\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1876:1879  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1881:1886  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1857:1875  encodeSignedBigNum */\n      tag_198\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1857:1887  encodeSignedBigNum(buf, value) */\n      jump\t// in\n    tag_197:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1810:2163  if(value < -0x10000000000000000) {... */\n      jump(tag_207)\n    tag_196:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1915:1933  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1907:1912  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1907:1933  value > 0xFFFFFFFFFFFFFFFF */\n      sgt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1904:2163  if(value > 0xFFFFFFFFFFFFFFFF) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1949:1973  encodeBigNum(buf, value) */\n      tag_197\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1962:1965  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1967:1972  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1949:1961  encodeBigNum */\n      tag_202\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1949:1973  encodeBigNum(buf, value) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1904:2163  if(value > 0xFFFFFFFFFFFFFFFF) {... */\n    tag_200:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2002:2003  0 */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1993:2003  value >= 0 */\n      dup2\n      slt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1990:2163  if(value >= 0) {... */\n      tag_204\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2019:2063  encodeType(buf, MAJOR_TYPE_INT, uint(value)) */\n      tag_197\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2030:2033  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":232:233  0 */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2056:2061  value */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2019:2029  encodeType */\n      tag_192\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2019:2063  encodeType(buf, MAJOR_TYPE_INT, uint(value)) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1990:2163  if(value >= 0) {... */\n    tag_204:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2094:2152  encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value)) */\n      tag_207\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2105:2108  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":288:289  1 */\n      0x1\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2145:2150  value */\n      dup4\n      not(0x0)\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2140:2150  -1 - value */\n      sub\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2094:2104  encodeType */\n      tag_192\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2094:2152  encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value)) */\n      jump\t// in\n    tag_207:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1724:2169  function encodeInt(BufferPlugin.buffer memory buf, int value) internal pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7293:7816  function encodeRequest(Plugin.Request memory _req)... */\n    tag_171:\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7686:7693  _req.id */\n      dup1\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7701:7721  _req.callbackAddress */\n      0x20\n      dup1\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7729:7752  _req.callbackFunctionId */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7378:7383  bytes */\n      0x60\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7760:7770  _req.nonce */\n      dup7\n      dup2\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7798:7806  _req.buf */\n      0x80\n      dup9\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7798:7810  _req.buf.buf */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      swap4\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7443  oracle */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      0x24\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      0x44\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0x64\n      dup4\n      add\n      dup11\n      swap1\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup9\n      and\n      0x84\n      dup5\n      add\n      mstore\n      not(sub(exp(0x2, 0xe0), 0x1))\n      dup7\n      and\n      0xa4\n      dup5\n      add\n      mstore\n      0xc4\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7443  oracle */\n      0x1\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      0xe4\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7443  oracle */\n      0x100\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      0x104\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n      dup9\n      mload\n      0x124\n      dup7\n      add\n      mstore\n      dup9\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7378:7383  bytes */\n      swap7\n      swap12\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7466  oracle.oracleRequest.selector */\n      0x4042994600000000000000000000000000000000000000000000000000000000\n      swap12\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7443  oracle */\n      swap5\n      swap11\n      dup12\n      swap11\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7686:7693  _req.id */\n      swap2\n      swap10\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7701:7721  _req.callbackAddress */\n      swap1\n      swap9\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7729:7752  _req.callbackFunctionId */\n      swap1\n      swap8\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7760:7770  _req.nonce */\n      swap7\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7443  oracle */\n      swap4\n      swap6\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7798:7810  _req.buf.buf */\n      swap2\n      swap5\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      swap4\n      0x144\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7437:7443  oracle */\n      dup15\n        /* \"--CODEGEN--\":8:108   */\n    tag_209:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_209)\n    tag_210:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_212\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_212:\n      pop\n      0x40\n      dup1\n      mload\n      not(0x1f)\n        /* \"--CODEGEN--\":26:47   */\n      dup2\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      swap2\n      swap1\n      mstore\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":25:43   */\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":182:197   */\n      and\n      not(sub(exp(0x2, 0xe0), 0x1))\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      swap1\n      swap14\n      and\n        /* \"--CODEGEN--\":179:208   */\n      swap13\n      swap1\n      swap13\n      or\n        /* \"--CODEGEN--\":160:209   */\n      swap1\n      swap12\n      mstore\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7407:7811  abi.encodeWithSelector(... */\n      swap9\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.4/PluginClient.sol\":7293:7816  function encodeRequest(Plugin.Request memory _req)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":942:1337  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {... */\n    tag_189:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1012:1018  buffer */\n      tag_213\n      jump\t// in(tag_214)\n    tag_213:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1048:1050  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1037:1045  capacity */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1037:1050  capacity % 32 */\n      mod\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1037:1055  capacity % 32 != 0 */\n      iszero\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1033:1104  if (capacity % 32 != 0) {... */\n      tag_217\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1094:1096  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1083:1091  capacity */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1083:1096  capacity % 32 */\n      mod\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1077:1079  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1077:1097  32 - (capacity % 32) */\n      sub\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1065:1097  capacity += 32 - (capacity % 32) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1033:1104  if (capacity % 32 != 0) {... */\n    tag_217:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1151:1163  buf.capacity */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1151:1174  buf.capacity = capacity */\n      dup3\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1214:1218  0x40 */\n      0x40\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1208:1219  mload(0x40) */\n      dup1\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1226:1242  mstore(buf, ptr) */\n      dup1\n      dup6\n      mstore\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1249:1263  mstore(ptr, 0) */\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1291:1309  add(ptr, capacity) */\n      dup4\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1283:1310  add(32, add(ptr, capacity)) */\n      swap1\n      swap2\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1270:1311  mstore(0x40, add(32, add(ptr, capacity))) */\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1151:1154  buf */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":942:1337  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {... */\n    tag_215:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":700:1421  function encodeType(BufferPlugin.buffer memory buf, uint8 major, uint value) private pure {... */\n    tag_192:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":812:814  23 */\n      0x17\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":803:814  value <= 23 */\n      dup2\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":800:1415  if(value <= 23) {... */\n      tag_220\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":830:874  buf.appendUint8(uint8((major << 5) | value)) */\n      tag_221\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":830:833  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":853:863  major << 5 */\n      0xff\n      dup5\n      dup2\n      and\n      0x20\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":852:872  (major << 5) | value */\n      and\n      dup4\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":830:845  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":830:874  buf.appendUint8(uint8((major << 5) | value)) */\n      jump\t// in\n    tag_221:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":800:1415  if(value <= 23) {... */\n      jump(tag_161)\n    tag_220:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":903:907  0xFF */\n      0xff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":894:907  value <= 0xFF */\n      dup2\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":891:1415  if(value <= 0xFF) {... */\n      tag_224\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":923:964  buf.appendUint8(uint8((major << 5) | 24)) */\n      tag_225\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":923:926  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":960:962  24 */\n      0x18\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":946:956  major << 5 */\n      0x20\n      0xff\n      dup7\n      and\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":945:962  (major << 5) | 24 */\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":923:964  buf.appendUint8(uint8((major << 5) | 24)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":923:938  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":923:964  buf.appendUint8(uint8((major << 5) | 24)) */\n      and\n      jump\t// in\n    tag_225:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":978:1001  buf.appendInt(value, 1) */\n      tag_221\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":978:981  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":992:997  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":999:1000  1 */\n      0x1\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":978:1001  buf.appendInt(value, 1) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":978:991  buf.appendInt */\n      tag_227\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":978:1001  buf.appendInt(value, 1) */\n      and\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":891:1415  if(value <= 0xFF) {... */\n    tag_224:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1030:1036  0xFFFF */\n      0xffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1021:1036  value <= 0xFFFF */\n      dup2\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1018:1415  if(value <= 0xFFFF) {... */\n      tag_229\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1052:1093  buf.appendUint8(uint8((major << 5) | 25)) */\n      tag_230\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1052:1055  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1089:1091  25 */\n      0x19\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1075:1085  major << 5 */\n      0x20\n      0xff\n      dup7\n      and\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1074:1091  (major << 5) | 25 */\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1052:1093  buf.appendUint8(uint8((major << 5) | 25)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1052:1067  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1052:1093  buf.appendUint8(uint8((major << 5) | 25)) */\n      and\n      jump\t// in\n    tag_230:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1107:1130  buf.appendInt(value, 2) */\n      tag_221\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1107:1110  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1121:1126  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1128:1129  2 */\n      0x2\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1107:1130  buf.appendInt(value, 2) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1107:1120  buf.appendInt */\n      tag_227\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1107:1130  buf.appendInt(value, 2) */\n      and\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1018:1415  if(value <= 0xFFFF) {... */\n    tag_229:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1159:1169  0xFFFFFFFF */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1150:1169  value <= 0xFFFFFFFF */\n      dup2\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1147:1415  if(value <= 0xFFFFFFFF) {... */\n      tag_233\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1185:1226  buf.appendUint8(uint8((major << 5) | 26)) */\n      tag_234\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1185:1188  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1222:1224  26 */\n      0x1a\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1208:1218  major << 5 */\n      0x20\n      0xff\n      dup7\n      and\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1207:1224  (major << 5) | 26 */\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1185:1226  buf.appendUint8(uint8((major << 5) | 26)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1185:1200  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1185:1226  buf.appendUint8(uint8((major << 5) | 26)) */\n      and\n      jump\t// in\n    tag_234:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1240:1263  buf.appendInt(value, 4) */\n      tag_221\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1240:1243  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1254:1259  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1261:1262  4 */\n      0x4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1240:1263  buf.appendInt(value, 4) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1240:1253  buf.appendInt */\n      tag_227\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1240:1263  buf.appendInt(value, 4) */\n      and\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1147:1415  if(value <= 0xFFFFFFFF) {... */\n    tag_233:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1292:1310  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1283:1310  value <= 0xFFFFFFFFFFFFFFFF */\n      dup2\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1280:1415  if(value <= 0xFFFFFFFFFFFFFFFF) {... */\n      tag_161\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1326:1367  buf.appendUint8(uint8((major << 5) | 27)) */\n      tag_238\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1326:1329  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1363:1365  27 */\n      0x1b\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1349:1359  major << 5 */\n      0x20\n      0xff\n      dup7\n      and\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1348:1365  (major << 5) | 27 */\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1326:1367  buf.appendUint8(uint8((major << 5) | 27)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1326:1341  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1326:1367  buf.appendUint8(uint8((major << 5) | 27)) */\n      and\n      jump\t// in\n    tag_238:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1381:1404  buf.appendInt(value, 8) */\n      tag_144\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1381:1384  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1395:1400  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1402:1403  8 */\n      0x8\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1381:1404  buf.appendInt(value, 8) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1381:1394  buf.appendInt */\n      tag_227\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":1381:1404  buf.appendInt(value, 8) */\n      and\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4496:4651  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {... */\n    tag_194:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4573:4579  buffer */\n      tag_240\n      jump\t// in(tag_214)\n    tag_240:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4601:4646  write(buf, buf.buf.length, data, data.length) */\n      tag_242\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4607:4610  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4612:4615  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4612:4619  buf.buf */\n      0x0\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4612:4626  buf.buf.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4628:4632  data */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4634:4638  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4634:4645  data.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4601:4606  write */\n      tag_243\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4601:4646  write(buf, buf.buf.length, data, data.length) */\n      jump\t// in\n    tag_242:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4594:4646  return write(buf, buf.buf.length, data, data.length) */\n      swap4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4496:4651  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2571:2797  function encodeSignedBigNum(BufferPlugin.buffer memory buf, int input) internal pure {... */\n    tag_198:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2664:2736  buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)) */\n      tag_245\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2664:2667  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2686:2734  (MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM */\n      0xc3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2664:2736  buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2664:2679  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2664:2736  buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)) */\n      and\n      jump\t// in\n    tag_245:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2744:2790  encodeBytes(buf, abi.encode(uint(-1 - input))) */\n      tag_207\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2756:2759  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2782:2787  input */\n      dup3\n      not(0x0)\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2777:2787  -1 - input */\n      sub\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2761:2789  abi.encode(uint(-1 - input)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2761:2789  abi.encode(uint(-1 - input)) */\n      swap1\n      0x40\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2744:2755  encodeBytes */\n      tag_247\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2744:2790  encodeBytes(buf, abi.encode(uint(-1 - input))) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2359:2565  function encodeBigNum(BufferPlugin.buffer memory buf, int value) internal pure {... */\n    tag_202:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2446:2509  buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM)) */\n      tag_249\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2446:2449  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2468:2507  (MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM */\n      0xc2\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2446:2509  buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM)) */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2446:2461  buf.appendUint8 */\n      tag_222\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2446:2509  buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM)) */\n      and\n      jump\t// in\n    tag_249:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2517:2558  encodeBytes(buf, abi.encode(uint(value))) */\n      tag_207\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2529:2532  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2550:2555  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2534:2557  abi.encode(uint(value)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2534:2557  abi.encode(uint(value)) */\n      swap1\n      0x40\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2517:2528  encodeBytes */\n      tag_247\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2517:2558  encodeBytes(buf, abi.encode(uint(value))) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5811:5955  function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {... */\n    tag_222:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5885:5891  buffer */\n      tag_251\n      jump\t// in(tag_214)\n    tag_251:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5913:5950  writeUint8(buf, buf.buf.length, data) */\n      tag_242\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5924:5927  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5929:5932  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5929:5936  buf.buf */\n      0x0\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5929:5943  buf.buf.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5945:5949  data */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5913:5923  writeUint8 */\n      tag_254\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5913:5950  writeUint8(buf, buf.buf.length, data) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9497:9651  function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {... */\n    tag_227:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9578:9584  buffer */\n      tag_255\n      jump\t// in(tag_214)\n    tag_255:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9606:9646  writeInt(buf, buf.buf.length, data, len) */\n      tag_257\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9615:9618  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9620:9623  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9620:9627  buf.buf */\n      0x0\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9620:9634  buf.buf.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9636:9640  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9642:9645  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9606:9614  writeInt */\n      tag_258\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9606:9646  writeInt(buf, buf.buf.length, data, len) */\n      jump\t// in\n    tag_257:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9599:9646  return writeInt(buf, buf.buf.length, data, len) */\n      swap5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9497:9651  function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2651:3791  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {... */\n    tag_243:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2746:2752  buffer */\n      tag_259\n      jump\t// in(tag_214)\n    tag_259:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2897:2906  uint dest */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2912:2920  uint src */\n      dup1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3580:3589  uint mask */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2782:2786  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2782:2793  data.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2775:2778  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2775:2793  len <= data.length */\n      gt\n      iszero\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2767:2794  require(len <= data.length) */\n      iszero\n      iszero\n      tag_261\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_261:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2817:2820  buf */\n      dup8\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2817:2829  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2811:2814  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2805:2808  off */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2805:2814  off + len */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2805:2829  off + len > buf.capacity */\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2801:2891  if (off + len > buf.capacity) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2839:2884  resize(buf, max(buf.capacity, len + off) * 2) */\n      tag_263\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2846:2849  buf */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2851:2879  max(buf.capacity, len + off) */\n      tag_264\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2855:2858  buf */\n      dup11\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2855:2867  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2875:2878  off */\n      dup11\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2869:2872  len */\n      dup10\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2869:2878  len + off */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2851:2854  max */\n      tag_265\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2851:2879  max(buf.capacity, len + off) */\n      jump\t// in\n    tag_264:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2882:2883  2 */\n      0x2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2851:2883  max(buf.capacity, len + off) * 2 */\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2839:2845  resize */\n      tag_266\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2839:2884  resize(buf, max(buf.capacity, len + off) * 2) */\n      jump\t// in\n    tag_263:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3006:3009  buf */\n      dup8\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3000:3010  mload(buf) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3077:3083  bufptr */\n      dup1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3071:3084  mload(bufptr) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3193:3196  off */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3188:3190  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3180:3186  bufptr */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3176:3191  add(bufptr, 32) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3172:3197  add(add(bufptr, 32), off) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3164:3197  dest := add(add(bufptr, 32), off) */\n      swap5\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3277:3283  buflen */\n      dup1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3271:3274  off */\n      dup10\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3266:3269  len */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3262:3275  add(len, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3259:3284  gt(add(len, off), buflen) */\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3256:3258  if */\n      iszero\n      tag_267\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3319:3322  off */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3314:3317  len */\n      dup8\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3310:3323  add(len, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3302:3308  bufptr */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3295:3324  mstore(bufptr, add(len, off)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3256:3258  if */\n    tag_267:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3356:3358  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3350:3354  data */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3346:3359  add(data, 32) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3339:3359  src := add(data, 32) */\n      swap4\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2935:3365  {... */\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3417:3546  for (; len >= 32; len -= 32) {... */\n    tag_268:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3431:3433  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3424:3433  len >= 32 */\n      dup6\n      lt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3417:3546  for (; len >= 32; len -= 32) {... */\n      tag_269\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3486:3496  mload(src) */\n      dup2\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3473:3497  mstore(dest, mload(src)) */\n      dup4\n      mstore\n      not(0x1f)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3435:3444  len -= 32 */\n      swap1\n      swap5\n      add\n      swap4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3520:3522  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3512:3522  dest += 32 */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3530:3539  src += 32 */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3417:3546  for (; len >= 32; len -= 32) {... */\n      jump(tag_268)\n    tag_269:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3655:3665  mload(src) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3704:3715  mload(dest) */\n      dup2\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3600:3602  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3600:3608  32 - len */\n      swap5\n      swap1\n      swap5\n      sub\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3592:3595  256 */\n      0x100\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3592:3609  256 ** (32 - len) */\n      exp\n      not(0x0)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3592:3613  256 ** (32 - len) - 1 */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3667:3676  not(mask) */\n      dup1\n      not\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3651:3677  and(mload(src), not(mask)) */\n      swap1\n      swap2\n      and\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3700:3722  and(mload(dest), mask) */\n      swap4\n      and\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3742:3763  or(destpart, srcpart) */\n      swap3\n      swap1\n      swap3\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3729:3764  mstore(dest, or(destpart, srcpart)) */\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":3783:3786  buf */\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":2651:3791  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {... */\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2175:2353  function encodeBytes(BufferPlugin.buffer memory buf, bytes memory value) internal pure {... */\n    tag_247:\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2272:2319  encodeType(buf, MAJOR_TYPE_BYTES, value.length) */\n      tag_191\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2283:2286  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":337:338  2 */\n      0x2\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2306:2311  value */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2306:2318  value.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2272:2282  encodeType */\n      tag_192\n        /* \"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":2272:2319  encodeType(buf, MAJOR_TYPE_BYTES, value.length) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4945:5564  function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {... */\n    tag_254:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5028:5034  buffer */\n      tag_274\n      jump\t// in(tag_214)\n    tag_274:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5060:5072  buf.capacity */\n      0x20\n      dup5\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5053:5072  off >= buf.capacity */\n      dup4\n      lt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5049:5118  if (off >= buf.capacity) {... */\n      tag_277\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5082:5111  resize(buf, buf.capacity * 2) */\n      tag_277\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5089:5092  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5094:5097  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5094:5106  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5109:5110  2 */\n      0x2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5094:5110  buf.capacity * 2 */\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5082:5088  resize */\n      tag_266\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5082:5111  resize(buf, buf.capacity * 2) */\n      jump\t// in\n    tag_277:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5204:5207  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5198:5208  mload(buf) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5275:5281  bufptr */\n      dup1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5269:5282  mload(bufptr) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5387:5389  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5381:5384  off */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5373:5379  bufptr */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5369:5385  add(bufptr, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5365:5390  add(add(bufptr, off), 32) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5411:5415  data */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5405:5409  dest */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5397:5416  mstore8(dest, data) */\n      mstore8\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5482:5488  buflen */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5477:5480  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5474:5489  eq(off, buflen) */\n      eq\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5471:5473  if */\n      iszero\n      tag_278\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5527:5528  1 */\n      0x1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5519:5525  buflen */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5515:5529  add(buflen, 1) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5507:5513  bufptr */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5500:5530  mstore(bufptr, add(buflen, 1)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5471:5473  if */\n    tag_278:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":5556:5559  buf */\n      swap5\n      swap6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":4945:5564  function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8610:9252  function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {... */\n    tag_258:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8699:8705  buffer */\n      tag_279\n      jump\t// in(tag_214)\n    tag_279:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8799:8808  uint mask */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8736:8739  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8736:8748  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8730:8733  off */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8724:8727  len */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8724:8733  len + off */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8724:8748  len + off > buf.capacity */\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8720:8793  if (len + off > buf.capacity) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8758:8786  resize(buf, (len + off) * 2) */\n      tag_282\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8765:8768  buf */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8777:8780  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8771:8774  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8771:8780  len + off */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8784:8785  2 */\n      0x2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8770:8785  (len + off) * 2 */\n      mul\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8758:8764  resize */\n      tag_266\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8758:8786  resize(buf, (len + off) * 2) */\n      jump\t// in\n    tag_282:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8824:8825  1 */\n      0x1\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8818:8821  len */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8811:8814  256 */\n      0x100\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8811:8821  256 ** len */\n      exp\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8811:8825  256 ** len - 1 */\n      sub\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8799:8825  uint mask = 256 ** len - 1 */\n      swap1\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8911:8914  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8905:8915  mload(buf) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9026:9029  len */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9020:9023  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9012:9018  bufptr */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9008:9024  add(bufptr, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9004:9030  add(add(bufptr, off), len) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9082:9086  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9074:9078  mask */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9070:9079  not(mask) */\n      not\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9063:9067  dest */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9057:9068  mload(dest) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9053:9080  and(mload(dest), not(mask)) */\n      and\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9050:9087  or(and(mload(dest), not(mask)), data) */\n      or\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9044:9048  dest */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9037:9088  mstore(dest, or(and(mload(dest), not(mask)), data)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9170:9176  bufptr */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9164:9177  mload(bufptr) */\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9158:9161  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9153:9156  off */\n      dup9\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9149:9162  add(off, len) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9146:9178  gt(add(off, len), mload(bufptr)) */\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9143:9145  if */\n      iszero\n      tag_283\n      jumpi\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9213:9216  len */\n      dup5\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9208:9211  off */\n      dup8\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9204:9217  add(off, len) */\n      add\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9196:9202  bufptr */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9189:9218  mstore(bufptr, add(off, len)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9143:9145  if */\n    tag_283:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":9244:9247  buf */\n      swap6\n      swap7\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":8610:9252  function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1889:2003  function max(uint a, uint b) private pure returns(uint) {... */\n    tag_265:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1939:1943  uint */\n      0x0\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1959:1960  b */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1955:1956  a */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1955:1960  a > b */\n      gt\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1951:1985  if (a > b) {... */\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1977:1978  a */\n      dup2\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1970:1978  return a */\n      jump(tag_215)\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1732:1885  function resize(buffer memory buf, uint capacity) private pure {... */\n    tag_266:\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1823:1830  buf.buf */\n      dup2\n      mload\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1836:1855  init(buf, capacity) */\n      tag_287\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1823:1826  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1846:1854  capacity */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1836:1840  init */\n      tag_189\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1836:1855  init(buf, capacity) */\n      jump\t// in\n    tag_287:\n      pop\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1861:1880  append(buf, oldbuf) */\n      tag_144\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1868:1871  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1873:1879  oldbuf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1861:1867  append */\n      tag_194\n        /* \"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":1861:1880  append(buf, oldbuf) */\n      jump\t// in\n        /* \"contracts/InternalContract.sol\":140:4706  contract InternalContract is PluginClient, Ownable {... */\n    tag_71:\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x0\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x80\n      dup2\n      add\n      tag_289\n      jump\t// in(tag_214)\n    tag_289:\n      swap1\n      mstore\n      swap1\n      jump\t// out\n    tag_134:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x0\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_214:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x0\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820b7b85266636901284703ed908b0a706eb34aa426c6416fed9eaa7768feb050ff0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260016004553480156200001657600080fd5b5060405162001b9d38038062001b9d833981016040908152815160208301519183015160068054600160a060020a0319163317905590920162000062836401000000006200009c810204565b60078054600160a060020a031916600160a060020a038416179055805162000092906008906020840190620000be565b5050505062000163565b60028054600160a060020a031916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b6200016091905b808211156200013f57600081556001016200014a565b90565b611a2a80620001736000396000f3006080604052600436106100cc5763ffffffff60e060020a6000350416632d8c762c81146100d157806337fccd30146100f85780634357855e1461010f578063698996f81461012a578063715018a61461013f5780637dc0d1d0146101545780638205bf6a146101855780638da5cb5b1461019a5780638e0e0abb146101af5780639dd4cc5d146101c4578063a2e36c5f146101e5578063a4b6f67e14610229578063c2939d971461023e578063d378d5eb146102c8578063ec65d0f8146102f4578063f2fde38b1461031f575b600080fd5b3480156100dd57600080fd5b506100e6610340565b60408051918252519081900360200190f35b34801561010457600080fd5b5061010d610616565b005b34801561011b57600080fd5b5061010d6004356024356107a4565b34801561013657600080fd5b506100e66108be565b34801561014b57600080fd5b5061010d6108c4565b34801561016057600080fd5b50610169610932565b60408051600160a060020a039092168252519081900360200190f35b34801561019157600080fd5b506100e6610941565b3480156101a657600080fd5b50610169610947565b3480156101bb57600080fd5b506100e6610956565b3480156101d057600080fd5b506100e6600160a060020a036004351661095c565b3480156101f157600080fd5b50610206600160a060020a0360043516610c6e565b60408051600160a060020a03909316835260208301919091528051918290030190f35b34801561023557600080fd5b50610169610c93565b34801561024a57600080fd5b50610253610ca2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028d578181015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d457600080fd5b506102e0600435610d30565b604080519115158252519081900360200190f35b34801561030057600080fd5b5061010d600435602435600160e060020a031960443516606435610ec9565b34801561032b57600080fd5b5061010d600160a060020a0360043516610ef2565b600061034a61199a565b600654600160a060020a0316331461036157600080fd5b6008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152610422936103fb93919290918301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b5050505050610f12565b307f4357855e00000000000000000000000000000000000000000000000000000000610f36565b604080518082018252600681527f5f6673796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600383527f58444300000000000000000000000000000000000000000000000000000000009083015291925061049e91839163ffffffff610f6116565b604080518082018252600681527f5f7473796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600483527f5553445400000000000000000000000000000000000000000000000000000000908301526105189183919063ffffffff610f6116565b60408051808201909152600581527f74696d6573000000000000000000000000000000000000000000000000000000602082015261056090829061271063ffffffff610f9016565b42600a5560075461058290600160a060020a031682662386f26fc10000610fba565b60088054604080516020601f6002610100600187161502600019019095169490940493840181900481028201810190925282815293955085936105e993909290918301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b6040517feafd6b8e34637ca199864ee18f22fc46cbc730739912f5b54501a2a9e57e807090600090a35090565b600654600090600160a060020a0316331461063057600080fd5b610638611257565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051919250600160a060020a0383169163a9059cbb91339184916370a082319160248083019260209291908290030181600087803b1580156106a657600080fd5b505af11580156106ba573d6000803e3d6000fd5b505050506040513d60208110156106d057600080fd5b50516040805160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561071f57600080fd5b505af1158015610733573d6000803e3d6000fd5b505050506040513d602081101561074957600080fd5b505115156107a1576040805160e560020a62461bcd02815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015290519081900360640190fd5b50565b6000828152600560205260409020548290600160a060020a0316331461083a576040805160e560020a62461bcd02815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f2072657175657374000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600081815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff191690555182917fa40ad10b942505047c532a7399bf5eac2768b11b7155b40ec80309aea567f99891a2604051829084907f1ca8663227a7fe9919713a01d344afbb434e234f35a3e540a6ad924f88771f3890600090a35060095550565b60095481565b600654600160a060020a031633146108db57600080fd5b600654604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600754600160a060020a031681565b600a5481565b600654600160a060020a031681565b60095490565b60008061096761199a565b600160a060020a0384166000908152600b60205260409020600101549150662386f26fc1000082116109e3576040805160e560020a62461bcd02815260206004820152601560248201527f4e4f5f53554646494349454e545f435245444954530000000000000000000000604482015290519081900360640190fd5b600160a060020a0384166000908152600b6020908152604091829020662386f26fc0ffff198501600191820155600880548451600293821615610100026000190190911692909204601f8101849004840283018401909452838252610a6c936103fb938301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b604080518082018252600681527f5f6673796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600383527f584443000000000000000000000000000000000000000000000000000000000090830152919250610ae891839163ffffffff610f6116565b604080518082018252600681527f5f7473796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600483527f555344540000000000000000000000000000000000000000000000000000000090830152610b629183919063ffffffff610f6116565b60408051808201909152600581527f74696d65730000000000000000000000000000000000000000000000000000006020820152610baa90829061271063ffffffff610f9016565b600754610bc890600160a060020a031682662386f26fc10000610fba565b42600a5560088054604080516020601f600261010060018716150260001901909516949094049384018190048102820181019092528281529396508693610c3393909290918301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b604051600160a060020a038716907f7f3df4038a13e7b83557e5a0ebf67fec07391a522319ab42e81255e88de18ffb90600090a45050919050565b600b6020526000908152604090208054600190910154600160a060020a039091169082565b6000610c9d611257565b905090565b6008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b505050505081565b600080610d3b6119cf565b600068056bc75e2d63100000851115610d9e576040805160e560020a62461bcd02815260206004820152601960248201527f4e4f545f4d4f52455f5448414e5f3130305f414c4c4f57454400000000000000604482015290519081900360640190fd5b610da6611257565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529051919450600160a060020a038516916323b872dd916064808201926020929091908290030181600087803b158015610e1857600080fd5b505af1158015610e2c573d6000803e3d6000fd5b505050506040513d6020811015610e4257600080fd5b5050336000818152600b60208181526040808420815180830183528154600160a060020a0381811683526001808501805494880185905286518088019097528a87529e9093018587019081529890975294909352905190931673ffffffffffffffffffffffffffffffffffffffff1990921691909117909155905190955550929392505050565b600654600160a060020a03163314610ee057600080fd5b610eec84848484611266565b50505050565b600654600160a060020a03163314610f0957600080fd5b6107a181611364565b805160009082901515610f285760009150610f30565b602083015191505b50919050565b610f3e61199a565b610f4661199a565b610f588186868663ffffffff6113e216565b95945050505050565b6080830151610f76908363ffffffff61141f16565b6080830151610f8b908263ffffffff61141f16565b505050565b6080830151610fa5908363ffffffff61141f16565b6080830151610f8b908263ffffffff61143c16565b6000306004546040516020018083600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106110365780518252601f199092019160209182019101611017565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060045460608a015260008181526005909252838220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038c1617905592519295508594507fa6745906207afb96a5801b8e5711fd7b74c5780ce893a973806e179d675bbe249350919050a2600254600160a060020a0316634000aea085846110e48761149e565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611151578181015183820152602001611139565b50505050905090810190601f16801561117e5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561119f57600080fd5b505af11580156111b3573d6000803e3d6000fd5b505050506040513d60208110156111c957600080fd5b50511515611247576040805160e560020a62461bcd02815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160448201527f636c650000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6004805460010190559392505050565b600254600160a060020a031690565b600084815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff1981169091559051600160a060020a039091169186917f715822738dad692e521ebc0193d189bf23153eb1d4420173d6b30cd8add9f9a69190a2604080517f6ee4d5530000000000000000000000000000000000000000000000000000000081526004810187905260248101869052600160e060020a031985166044820152606481018490529051600160a060020a03831691636ee4d55391608480830192600092919082900301818387803b15801561134557600080fd5b505af1158015611359573d6000803e3d6000fd5b505050505050505050565b600160a060020a038116151561137957600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6113ea61199a565b6113fa85608001516101006115f5565b5050918352600160a060020a03166020830152600160e060020a031916604082015290565b61142c8260038351611635565b610f8b828263ffffffff61173216565b67ffffffffffffffff1981121561145c576114578282611753565b61149a565b67ffffffffffffffff811315611476576114578282611792565b6000811261148a5761145782600083611635565b61149a8260018360001903611635565b5050565b8051602080830151604080850151606086810151608088015151935160006024820181815260448301829052606483018a9052600160a060020a0388166084840152600160e060020a0319861660a484015260c48301849052600160e48401819052610100610104850190815288516101248601528851969b7f40429946000000000000000000000000000000000000000000000000000000009b949a8b9a91999098909796939591949361014401918501908083838e5b8381101561156e578181015183820152602001611556565b50505050905090810190601f16801561159b5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160e060020a0319909d169c909c17909b5250989950505050505050505050919050565b6115fd6119e6565b60208206156116125760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b60178111611657576116518360ff8481166020021683176117cd565b50610f8b565b60ff811161168b57611678836018602060ff8616021763ffffffff6117cd16565b506116518382600163ffffffff6117e516565b61ffff81116116c0576116ad836019602060ff8616021763ffffffff6117cd16565b506116518382600263ffffffff6117e516565b63ffffffff81116116f7576116e483601a602060ff8616021763ffffffff6117cd16565b506116518382600463ffffffff6117e516565b67ffffffffffffffff8111610f8b5761171f83601b602060ff8616021763ffffffff6117cd16565b50610eec8382600863ffffffff6117e516565b61173a6119e6565b61174c83846000015151848551611806565b9392505050565b6117648260c363ffffffff6117cd16565b5061149a828260001903604051602001808281526020019150506040516020818303038152906040526118bc565b6117a38260c263ffffffff6117cd16565b5061149a8282604051602001808281526020019150506040516020818303038152906040526118bc565b6117d56119e6565b61174c83846000015151846118c9565b6117ed6119e6565b6117fe848560000151518585611914565b949350505050565b61180e6119e6565b60008060008551851115151561182357600080fd5b8760200151858801111561184d5761184d886118458a602001518a8901611972565b600202611983565b8751805188602083010194508089880111156118695788870182525b60208801935050505b602085106118945781518352601f199094019360209283019290910190611872565b505181516020949094036101000a600019018019909116931692909217909152509192915050565b61142c8260028351611635565b6118d16119e6565b602084015183106118ed576118ed848560200151600202611983565b8351805160208583010184815381861415611909576001820183525b509495945050505050565b61191c6119e6565b60008560200151858401111561193b5761193b86868501600202611983565b6001836101000a03905085518386820101858319825116178152815185880111156119665784870182525b50959695505050505050565b600081831115610f3057508161162f565b815161198f83836115f5565b50610eec8382611732565b6040805160c0810182526000808252602082018190529181018290526060810191909152608081016119ca6119e6565b905290565b604080518082019091526000808252602082015290565b604080518082019091526060815260006020820152905600a165627a7a72305820b7b85266636901284703ed908b0a706eb34aa426c6416fed9eaa7768feb050ff0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B9D CODESIZE SUB DUP1 PUSH3 0x1B9D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD SWAP2 DUP4 ADD MLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 SWAP3 ADD PUSH3 0x62 DUP4 PUSH5 0x100000000 PUSH3 0x9C DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH3 0x92 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xBE JUMP JUMPDEST POP POP POP POP PUSH3 0x163 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x101 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x131 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x131 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x131 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x114 JUMP JUMPDEST POP PUSH3 0x13F SWAP3 SWAP2 POP PUSH3 0x143 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x160 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x13F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x14A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A2A DUP1 PUSH3 0x173 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCC JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x2D8C762C DUP2 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x37FCCD30 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x4357855E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x698996F8 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x8E0E0ABB EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x9DD4CC5D EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xA2E36C5F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA4B6F67E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xC2939D97 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xD378D5EB EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xEC65D0F8 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x7A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x8C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x947 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x956 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x95C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 CALLDATALOAD PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH1 0x44 CALLDATALOAD AND PUSH1 0x64 CALLDATALOAD PUSH2 0xEC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A PUSH2 0x199A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x422 SWAP4 PUSH2 0x3FB SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xF12 JUMP JUMPDEST ADDRESS PUSH32 0x4357855E00000000000000000000000000000000000000000000000000000000 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F6673796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH32 0x5844430000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x49E SWAP2 DUP4 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F7473796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE PUSH2 0x518 SWAP2 DUP4 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0x74696D6573000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x560 SWAP1 DUP3 SWAP1 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0xF90 AND JUMP JUMPDEST TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x7 SLOAD PUSH2 0x582 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH7 0x2386F26FC10000 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP4 SWAP6 POP DUP6 SWAP4 PUSH2 0x5E9 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xEAFD6B8E34637CA199864EE18F22FC46CBC730739912F5B54501A2A9E57E8070 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x638 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 CALLER SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2072657175657374000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0xA40AD10B942505047C532A7399BF5EAC2768B11B7155B40EC80309AEA567F998 SWAP2 LOG2 PUSH1 0x40 MLOAD DUP3 SWAP1 DUP5 SWAP1 PUSH32 0x1CA8663227A7FE9919713A01D344AFBB434E234F35A3E540A6AD924F88771F38 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x967 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x9E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F5F53554646494349454E545F435245444954530000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH7 0x2386F26FC0FFFF NOT DUP6 ADD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x8 DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP4 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP4 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP4 DUP3 MSTORE PUSH2 0xA6C SWAP4 PUSH2 0x3FB SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F6673796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH32 0x5844430000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0xAE8 SWAP2 DUP4 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F7473796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE PUSH2 0xB62 SWAP2 DUP4 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0x74696D6573000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBAA SWAP1 DUP3 SWAP1 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0xF90 AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xBC8 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH7 0x2386F26FC10000 PUSH2 0xFBA JUMP JUMPDEST TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP4 SWAP7 POP DUP7 SWAP4 PUSH2 0xC33 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP1 PUSH32 0x7F3DF4038A13E7B83557E5A0EBF67FEC07391A522319AB42E81255E88DE18FFB SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD3B PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP6 GT ISZERO PUSH2 0xD9E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F4D4F52455F5448414E5F3130305F414C4C4F57454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xDA6 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD SWAP5 DUP9 ADD DUP6 SWAP1 MSTORE DUP7 MLOAD DUP1 DUP9 ADD SWAP1 SWAP8 MSTORE DUP11 DUP8 MSTORE SWAP15 SWAP1 SWAP4 ADD DUP6 DUP8 ADD SWAP1 DUP2 MSTORE SWAP9 SWAP1 SWAP8 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP1 MLOAD SWAP1 SWAP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP6 SSTORE POP SWAP3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEC DUP5 DUP5 DUP5 DUP5 PUSH2 0x1266 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x1364 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 ISZERO ISZERO PUSH2 0xF28 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3E PUSH2 0x199A JUMP JUMPDEST PUSH2 0xF46 PUSH2 0x199A JUMP JUMPDEST PUSH2 0xF58 DUP2 DUP7 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x13E2 AND JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF76 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x141F AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF8B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x141F AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xFA5 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x141F AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF8B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x143C AND JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1036 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1017 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SLOAD PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND OR SWAP1 SSTORE SWAP3 MLOAD SWAP3 SWAP6 POP DUP6 SWAP5 POP PUSH32 0xA6745906207AFB96A5801B8E5711FD7B74C5780CE893A973806E179D675BBE24 SWAP4 POP SWAP2 SWAP1 POP LOG2 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x4000AEA0 DUP6 DUP5 PUSH2 0x10E4 DUP8 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1151 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x117E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x1247 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636C650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 PUSH32 0x715822738DAD692E521EBC0193D189BF23153EB1D4420173D6B30CD8ADD9F9A6 SWAP2 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH32 0x6EE4D55300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP2 PUSH4 0x6EE4D553 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1359 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x13EA PUSH2 0x199A JUMP JUMPDEST PUSH2 0x13FA DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x15F5 JUMP JUMPDEST POP POP SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x142C DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x1635 JUMP JUMPDEST PUSH2 0xF8B DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1732 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 SLT ISZERO PUSH2 0x145C JUMPI PUSH2 0x1457 DUP3 DUP3 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SGT ISZERO PUSH2 0x1476 JUMPI PUSH2 0x1457 DUP3 DUP3 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x148A JUMPI PUSH2 0x1457 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x149A DUP3 PUSH1 0x1 DUP4 PUSH1 0x0 NOT SUB PUSH2 0x1635 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP9 ADD MLOAD MLOAD SWAP4 MLOAD PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x44 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP7 AND PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 PUSH2 0x104 DUP6 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH2 0x124 DUP7 ADD MSTORE DUP9 MLOAD SWAP7 SWAP12 PUSH32 0x4042994600000000000000000000000000000000000000000000000000000000 SWAP12 SWAP5 SWAP11 DUP12 SWAP11 SWAP2 SWAP10 SWAP1 SWAP9 SWAP1 SWAP8 SWAP7 SWAP4 SWAP6 SWAP2 SWAP5 SWAP4 PUSH2 0x144 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP15 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1556 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x159B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP14 AND SWAP13 SWAP1 SWAP13 OR SWAP1 SWAP12 MSTORE POP SWAP9 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FD PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x1612 JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0x1657 JUMPI PUSH2 0x1651 DUP4 PUSH1 0xFF DUP5 DUP2 AND PUSH1 0x20 MUL AND DUP4 OR PUSH2 0x17CD JUMP JUMPDEST POP PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x168B JUMPI PUSH2 0x1678 DUP4 PUSH1 0x18 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x1651 DUP4 DUP3 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x16C0 JUMPI PUSH2 0x16AD DUP4 PUSH1 0x19 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x1651 DUP4 DUP3 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH2 0x16E4 DUP4 PUSH1 0x1A PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x1651 DUP4 DUP3 PUSH1 0x4 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF8B JUMPI PUSH2 0x171F DUP4 PUSH1 0x1B PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0xEEC DUP4 DUP3 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH2 0x173A PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x174C DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x1806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1764 DUP3 PUSH1 0xC3 PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x149A DUP3 DUP3 PUSH1 0x0 NOT SUB PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x17A3 DUP3 PUSH1 0xC2 PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x149A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x17D5 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x174C DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x17ED PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x17FE DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x1914 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x180E PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD DUP6 GT ISZERO ISZERO ISZERO PUSH2 0x1823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 ADD MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x184D JUMPI PUSH2 0x184D DUP9 PUSH2 0x1845 DUP11 PUSH1 0x20 ADD MLOAD DUP11 DUP10 ADD PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0x1983 JUMP JUMPDEST DUP8 MLOAD DUP1 MLOAD DUP9 PUSH1 0x20 DUP4 ADD ADD SWAP5 POP DUP1 DUP10 DUP9 ADD GT ISZERO PUSH2 0x1869 JUMPI DUP9 DUP8 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP9 ADD SWAP4 POP POP POP JUMPDEST PUSH1 0x20 DUP6 LT PUSH2 0x1894 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x1F NOT SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1872 JUMP JUMPDEST POP MLOAD DUP2 MLOAD PUSH1 0x20 SWAP5 SWAP1 SWAP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x142C DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP4 LT PUSH2 0x18ED JUMPI PUSH2 0x18ED DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 MUL PUSH2 0x1983 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0x1909 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x191C PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP6 DUP5 ADD GT ISZERO PUSH2 0x193B JUMPI PUSH2 0x193B DUP7 DUP7 DUP6 ADD PUSH1 0x2 MUL PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x1966 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP SWAP6 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xF30 JUMPI POP DUP2 PUSH2 0x162F JUMP JUMPDEST DUP2 MLOAD PUSH2 0x198F DUP4 DUP4 PUSH2 0x15F5 JUMP JUMPDEST POP PUSH2 0xEEC DUP4 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x19CA PUSH2 0x19E6 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb7 0xb8 MSTORE PUSH7 0x636901284703ED SWAP1 DUP12 EXP PUSH17 0x6EB34AA426C6416FED9EAA7768FEB050FF STOP 0x29 ",
							"sourceMap": "140:4566:10:-;;;1088:1:1;1061:28;;1078:162:10;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:162:10;;;;;;;;;;;;;;;;;;;;;;;;;;567:5:9;:18;;-1:-1:-1;;;;;;567:18:9;575:10;567:18;;;1078:162:10;;;1164:20;1078:162;1164:14;;;;:20;:::i;:::-;1190:6;:25;;-1:-1:-1;;;;;;1190:25:10;-1:-1:-1;;;;;1190:25:10;;;;;1221:14;;;;:5;;:14;;;;;:::i;:::-;;1078:162;;;140:4566;;4632:87:1;4685:3;:29;;-1:-1:-1;;;;;;4685:29:1;-1:-1:-1;;;;;4685:29:1;;;;;;;;;;4632:87::o;140:4566:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;140:4566:10;;;-1:-1:-1;140:4566:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100cc5763ffffffff60e060020a6000350416632d8c762c81146100d157806337fccd30146100f85780634357855e1461010f578063698996f81461012a578063715018a61461013f5780637dc0d1d0146101545780638205bf6a146101855780638da5cb5b1461019a5780638e0e0abb146101af5780639dd4cc5d146101c4578063a2e36c5f146101e5578063a4b6f67e14610229578063c2939d971461023e578063d378d5eb146102c8578063ec65d0f8146102f4578063f2fde38b1461031f575b600080fd5b3480156100dd57600080fd5b506100e6610340565b60408051918252519081900360200190f35b34801561010457600080fd5b5061010d610616565b005b34801561011b57600080fd5b5061010d6004356024356107a4565b34801561013657600080fd5b506100e66108be565b34801561014b57600080fd5b5061010d6108c4565b34801561016057600080fd5b50610169610932565b60408051600160a060020a039092168252519081900360200190f35b34801561019157600080fd5b506100e6610941565b3480156101a657600080fd5b50610169610947565b3480156101bb57600080fd5b506100e6610956565b3480156101d057600080fd5b506100e6600160a060020a036004351661095c565b3480156101f157600080fd5b50610206600160a060020a0360043516610c6e565b60408051600160a060020a03909316835260208301919091528051918290030190f35b34801561023557600080fd5b50610169610c93565b34801561024a57600080fd5b50610253610ca2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028d578181015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d457600080fd5b506102e0600435610d30565b604080519115158252519081900360200190f35b34801561030057600080fd5b5061010d600435602435600160e060020a031960443516606435610ec9565b34801561032b57600080fd5b5061010d600160a060020a0360043516610ef2565b600061034a61199a565b600654600160a060020a0316331461036157600080fd5b6008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152610422936103fb93919290918301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b5050505050610f12565b307f4357855e00000000000000000000000000000000000000000000000000000000610f36565b604080518082018252600681527f5f6673796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600383527f58444300000000000000000000000000000000000000000000000000000000009083015291925061049e91839163ffffffff610f6116565b604080518082018252600681527f5f7473796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600483527f5553445400000000000000000000000000000000000000000000000000000000908301526105189183919063ffffffff610f6116565b60408051808201909152600581527f74696d6573000000000000000000000000000000000000000000000000000000602082015261056090829061271063ffffffff610f9016565b42600a5560075461058290600160a060020a031682662386f26fc10000610fba565b60088054604080516020601f6002610100600187161502600019019095169490940493840181900481028201810190925282815293955085936105e993909290918301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b6040517feafd6b8e34637ca199864ee18f22fc46cbc730739912f5b54501a2a9e57e807090600090a35090565b600654600090600160a060020a0316331461063057600080fd5b610638611257565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051919250600160a060020a0383169163a9059cbb91339184916370a082319160248083019260209291908290030181600087803b1580156106a657600080fd5b505af11580156106ba573d6000803e3d6000fd5b505050506040513d60208110156106d057600080fd5b50516040805160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561071f57600080fd5b505af1158015610733573d6000803e3d6000fd5b505050506040513d602081101561074957600080fd5b505115156107a1576040805160e560020a62461bcd02815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015290519081900360640190fd5b50565b6000828152600560205260409020548290600160a060020a0316331461083a576040805160e560020a62461bcd02815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f2072657175657374000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600081815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff191690555182917fa40ad10b942505047c532a7399bf5eac2768b11b7155b40ec80309aea567f99891a2604051829084907f1ca8663227a7fe9919713a01d344afbb434e234f35a3e540a6ad924f88771f3890600090a35060095550565b60095481565b600654600160a060020a031633146108db57600080fd5b600654604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600754600160a060020a031681565b600a5481565b600654600160a060020a031681565b60095490565b60008061096761199a565b600160a060020a0384166000908152600b60205260409020600101549150662386f26fc1000082116109e3576040805160e560020a62461bcd02815260206004820152601560248201527f4e4f5f53554646494349454e545f435245444954530000000000000000000000604482015290519081900360640190fd5b600160a060020a0384166000908152600b6020908152604091829020662386f26fc0ffff198501600191820155600880548451600293821615610100026000190190911692909204601f8101849004840283018401909452838252610a6c936103fb938301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b604080518082018252600681527f5f6673796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600383527f584443000000000000000000000000000000000000000000000000000000000090830152919250610ae891839163ffffffff610f6116565b604080518082018252600681527f5f7473796d7300000000000000000000000000000000000000000000000000006020808301919091528251808401909352600483527f555344540000000000000000000000000000000000000000000000000000000090830152610b629183919063ffffffff610f6116565b60408051808201909152600581527f74696d65730000000000000000000000000000000000000000000000000000006020820152610baa90829061271063ffffffff610f9016565b600754610bc890600160a060020a031682662386f26fc10000610fba565b42600a5560088054604080516020601f600261010060018716150260001901909516949094049384018190048102820181019092528281529396508693610c3393909290918301828280156103f15780601f106103c6576101008083540402835291602001916103f1565b604051600160a060020a038716907f7f3df4038a13e7b83557e5a0ebf67fec07391a522319ab42e81255e88de18ffb90600090a45050919050565b600b6020526000908152604090208054600190910154600160a060020a039091169082565b6000610c9d611257565b905090565b6008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b505050505081565b600080610d3b6119cf565b600068056bc75e2d63100000851115610d9e576040805160e560020a62461bcd02815260206004820152601960248201527f4e4f545f4d4f52455f5448414e5f3130305f414c4c4f57454400000000000000604482015290519081900360640190fd5b610da6611257565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529051919450600160a060020a038516916323b872dd916064808201926020929091908290030181600087803b158015610e1857600080fd5b505af1158015610e2c573d6000803e3d6000fd5b505050506040513d6020811015610e4257600080fd5b5050336000818152600b60208181526040808420815180830183528154600160a060020a0381811683526001808501805494880185905286518088019097528a87529e9093018587019081529890975294909352905190931673ffffffffffffffffffffffffffffffffffffffff1990921691909117909155905190955550929392505050565b600654600160a060020a03163314610ee057600080fd5b610eec84848484611266565b50505050565b600654600160a060020a03163314610f0957600080fd5b6107a181611364565b805160009082901515610f285760009150610f30565b602083015191505b50919050565b610f3e61199a565b610f4661199a565b610f588186868663ffffffff6113e216565b95945050505050565b6080830151610f76908363ffffffff61141f16565b6080830151610f8b908263ffffffff61141f16565b505050565b6080830151610fa5908363ffffffff61141f16565b6080830151610f8b908263ffffffff61143c16565b6000306004546040516020018083600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106110365780518252601f199092019160209182019101611017565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060045460608a015260008181526005909252838220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038c1617905592519295508594507fa6745906207afb96a5801b8e5711fd7b74c5780ce893a973806e179d675bbe249350919050a2600254600160a060020a0316634000aea085846110e48761149e565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611151578181015183820152602001611139565b50505050905090810190601f16801561117e5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561119f57600080fd5b505af11580156111b3573d6000803e3d6000fd5b505050506040513d60208110156111c957600080fd5b50511515611247576040805160e560020a62461bcd02815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160448201527f636c650000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6004805460010190559392505050565b600254600160a060020a031690565b600084815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff1981169091559051600160a060020a039091169186917f715822738dad692e521ebc0193d189bf23153eb1d4420173d6b30cd8add9f9a69190a2604080517f6ee4d5530000000000000000000000000000000000000000000000000000000081526004810187905260248101869052600160e060020a031985166044820152606481018490529051600160a060020a03831691636ee4d55391608480830192600092919082900301818387803b15801561134557600080fd5b505af1158015611359573d6000803e3d6000fd5b505050505050505050565b600160a060020a038116151561137957600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6113ea61199a565b6113fa85608001516101006115f5565b5050918352600160a060020a03166020830152600160e060020a031916604082015290565b61142c8260038351611635565b610f8b828263ffffffff61173216565b67ffffffffffffffff1981121561145c576114578282611753565b61149a565b67ffffffffffffffff811315611476576114578282611792565b6000811261148a5761145782600083611635565b61149a8260018360001903611635565b5050565b8051602080830151604080850151606086810151608088015151935160006024820181815260448301829052606483018a9052600160a060020a0388166084840152600160e060020a0319861660a484015260c48301849052600160e48401819052610100610104850190815288516101248601528851969b7f40429946000000000000000000000000000000000000000000000000000000009b949a8b9a91999098909796939591949361014401918501908083838e5b8381101561156e578181015183820152602001611556565b50505050905090810190601f16801561159b5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160e060020a0319909d169c909c17909b5250989950505050505050505050919050565b6115fd6119e6565b60208206156116125760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b60178111611657576116518360ff8481166020021683176117cd565b50610f8b565b60ff811161168b57611678836018602060ff8616021763ffffffff6117cd16565b506116518382600163ffffffff6117e516565b61ffff81116116c0576116ad836019602060ff8616021763ffffffff6117cd16565b506116518382600263ffffffff6117e516565b63ffffffff81116116f7576116e483601a602060ff8616021763ffffffff6117cd16565b506116518382600463ffffffff6117e516565b67ffffffffffffffff8111610f8b5761171f83601b602060ff8616021763ffffffff6117cd16565b50610eec8382600863ffffffff6117e516565b61173a6119e6565b61174c83846000015151848551611806565b9392505050565b6117648260c363ffffffff6117cd16565b5061149a828260001903604051602001808281526020019150506040516020818303038152906040526118bc565b6117a38260c263ffffffff6117cd16565b5061149a8282604051602001808281526020019150506040516020818303038152906040526118bc565b6117d56119e6565b61174c83846000015151846118c9565b6117ed6119e6565b6117fe848560000151518585611914565b949350505050565b61180e6119e6565b60008060008551851115151561182357600080fd5b8760200151858801111561184d5761184d886118458a602001518a8901611972565b600202611983565b8751805188602083010194508089880111156118695788870182525b60208801935050505b602085106118945781518352601f199094019360209283019290910190611872565b505181516020949094036101000a600019018019909116931692909217909152509192915050565b61142c8260028351611635565b6118d16119e6565b602084015183106118ed576118ed848560200151600202611983565b8351805160208583010184815381861415611909576001820183525b509495945050505050565b61191c6119e6565b60008560200151858401111561193b5761193b86868501600202611983565b6001836101000a03905085518386820101858319825116178152815185880111156119665784870182525b50959695505050505050565b600081831115610f3057508161162f565b815161198f83836115f5565b50610eec8382611732565b6040805160c0810182526000808252602082018190529181018290526060810191909152608081016119ca6119e6565b905290565b604080518082019091526000808252602082015290565b604080518082019091526060815260006020820152905600a165627a7a72305820b7b85266636901284703ed908b0a706eb34aa426c6416fed9eaa7768feb050ff0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCC JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x2D8C762C DUP2 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x37FCCD30 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x4357855E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x698996F8 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x8E0E0ABB EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x9DD4CC5D EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xA2E36C5F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA4B6F67E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xC2939D97 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xD378D5EB EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xEC65D0F8 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x7A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x8C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x947 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x956 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x95C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 CALLDATALOAD PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH1 0x44 CALLDATALOAD AND PUSH1 0x64 CALLDATALOAD PUSH2 0xEC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A PUSH2 0x199A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x422 SWAP4 PUSH2 0x3FB SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xF12 JUMP JUMPDEST ADDRESS PUSH32 0x4357855E00000000000000000000000000000000000000000000000000000000 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F6673796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH32 0x5844430000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x49E SWAP2 DUP4 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F7473796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE PUSH2 0x518 SWAP2 DUP4 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0x74696D6573000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x560 SWAP1 DUP3 SWAP1 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0xF90 AND JUMP JUMPDEST TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x7 SLOAD PUSH2 0x582 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH7 0x2386F26FC10000 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP4 SWAP6 POP DUP6 SWAP4 PUSH2 0x5E9 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xEAFD6B8E34637CA199864EE18F22FC46CBC730739912F5B54501A2A9E57E8070 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x638 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 CALLER SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2072657175657374000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0xA40AD10B942505047C532A7399BF5EAC2768B11B7155B40EC80309AEA567F998 SWAP2 LOG2 PUSH1 0x40 MLOAD DUP3 SWAP1 DUP5 SWAP1 PUSH32 0x1CA8663227A7FE9919713A01D344AFBB434E234F35A3E540A6AD924F88771F38 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x967 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x9E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F5F53554646494349454E545F435245444954530000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH7 0x2386F26FC0FFFF NOT DUP6 ADD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x8 DUP1 SLOAD DUP5 MLOAD PUSH1 0x2 SWAP4 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP4 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP4 DUP3 MSTORE PUSH2 0xA6C SWAP4 PUSH2 0x3FB SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F6673796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH32 0x5844430000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0xAE8 SWAP2 DUP4 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x5F7473796D730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE PUSH2 0xB62 SWAP2 DUP4 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF61 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0x74696D6573000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBAA SWAP1 DUP3 SWAP1 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0xF90 AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xBC8 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH7 0x2386F26FC10000 PUSH2 0xFBA JUMP JUMPDEST TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP4 SWAP7 POP DUP7 SWAP4 PUSH2 0xC33 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP1 PUSH32 0x7F3DF4038A13E7B83557E5A0EBF67FEC07391A522319AB42E81255E88DE18FFB SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD3B PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP6 GT ISZERO PUSH2 0xD9E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F4D4F52455F5448414E5F3130305F414C4C4F57454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xDA6 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD SWAP5 DUP9 ADD DUP6 SWAP1 MSTORE DUP7 MLOAD DUP1 DUP9 ADD SWAP1 SWAP8 MSTORE DUP11 DUP8 MSTORE SWAP15 SWAP1 SWAP4 ADD DUP6 DUP8 ADD SWAP1 DUP2 MSTORE SWAP9 SWAP1 SWAP8 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP1 MLOAD SWAP1 SWAP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP6 SSTORE POP SWAP3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEC DUP5 DUP5 DUP5 DUP5 PUSH2 0x1266 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x1364 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 ISZERO ISZERO PUSH2 0xF28 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3E PUSH2 0x199A JUMP JUMPDEST PUSH2 0xF46 PUSH2 0x199A JUMP JUMPDEST PUSH2 0xF58 DUP2 DUP7 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x13E2 AND JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF76 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x141F AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF8B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x141F AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xFA5 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x141F AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF8B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x143C AND JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1036 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1017 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SLOAD PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND OR SWAP1 SSTORE SWAP3 MLOAD SWAP3 SWAP6 POP DUP6 SWAP5 POP PUSH32 0xA6745906207AFB96A5801B8E5711FD7B74C5780CE893A973806E179D675BBE24 SWAP4 POP SWAP2 SWAP1 POP LOG2 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x4000AEA0 DUP6 DUP5 PUSH2 0x10E4 DUP8 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1151 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x117E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x1247 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636C650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 PUSH32 0x715822738DAD692E521EBC0193D189BF23153EB1D4420173D6B30CD8ADD9F9A6 SWAP2 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH32 0x6EE4D55300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP2 PUSH4 0x6EE4D553 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1359 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x13EA PUSH2 0x199A JUMP JUMPDEST PUSH2 0x13FA DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x15F5 JUMP JUMPDEST POP POP SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x142C DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x1635 JUMP JUMPDEST PUSH2 0xF8B DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1732 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 SLT ISZERO PUSH2 0x145C JUMPI PUSH2 0x1457 DUP3 DUP3 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SGT ISZERO PUSH2 0x1476 JUMPI PUSH2 0x1457 DUP3 DUP3 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x148A JUMPI PUSH2 0x1457 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x149A DUP3 PUSH1 0x1 DUP4 PUSH1 0x0 NOT SUB PUSH2 0x1635 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP9 ADD MLOAD MLOAD SWAP4 MLOAD PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x44 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP7 AND PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 PUSH2 0x104 DUP6 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH2 0x124 DUP7 ADD MSTORE DUP9 MLOAD SWAP7 SWAP12 PUSH32 0x4042994600000000000000000000000000000000000000000000000000000000 SWAP12 SWAP5 SWAP11 DUP12 SWAP11 SWAP2 SWAP10 SWAP1 SWAP9 SWAP1 SWAP8 SWAP7 SWAP4 SWAP6 SWAP2 SWAP5 SWAP4 PUSH2 0x144 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP15 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1556 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x159B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP14 AND SWAP13 SWAP1 SWAP13 OR SWAP1 SWAP12 MSTORE POP SWAP9 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FD PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x1612 JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0x1657 JUMPI PUSH2 0x1651 DUP4 PUSH1 0xFF DUP5 DUP2 AND PUSH1 0x20 MUL AND DUP4 OR PUSH2 0x17CD JUMP JUMPDEST POP PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x168B JUMPI PUSH2 0x1678 DUP4 PUSH1 0x18 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x1651 DUP4 DUP3 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x16C0 JUMPI PUSH2 0x16AD DUP4 PUSH1 0x19 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x1651 DUP4 DUP3 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH2 0x16E4 DUP4 PUSH1 0x1A PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x1651 DUP4 DUP3 PUSH1 0x4 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF8B JUMPI PUSH2 0x171F DUP4 PUSH1 0x1B PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0xEEC DUP4 DUP3 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x17E5 AND JUMP JUMPDEST PUSH2 0x173A PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x174C DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x1806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1764 DUP3 PUSH1 0xC3 PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x149A DUP3 DUP3 PUSH1 0x0 NOT SUB PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x17A3 DUP3 PUSH1 0xC2 PUSH4 0xFFFFFFFF PUSH2 0x17CD AND JUMP JUMPDEST POP PUSH2 0x149A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x17D5 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x174C DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x17ED PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x17FE DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x1914 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x180E PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD DUP6 GT ISZERO ISZERO ISZERO PUSH2 0x1823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 ADD MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x184D JUMPI PUSH2 0x184D DUP9 PUSH2 0x1845 DUP11 PUSH1 0x20 ADD MLOAD DUP11 DUP10 ADD PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0x1983 JUMP JUMPDEST DUP8 MLOAD DUP1 MLOAD DUP9 PUSH1 0x20 DUP4 ADD ADD SWAP5 POP DUP1 DUP10 DUP9 ADD GT ISZERO PUSH2 0x1869 JUMPI DUP9 DUP8 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP9 ADD SWAP4 POP POP POP JUMPDEST PUSH1 0x20 DUP6 LT PUSH2 0x1894 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x1F NOT SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1872 JUMP JUMPDEST POP MLOAD DUP2 MLOAD PUSH1 0x20 SWAP5 SWAP1 SWAP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x142C DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP4 LT PUSH2 0x18ED JUMPI PUSH2 0x18ED DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 MUL PUSH2 0x1983 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0x1909 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x191C PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP6 DUP5 ADD GT ISZERO PUSH2 0x193B JUMPI PUSH2 0x193B DUP7 DUP7 DUP6 ADD PUSH1 0x2 MUL PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x1966 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP SWAP6 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xF30 JUMPI POP DUP2 PUSH2 0x162F JUMP JUMPDEST DUP2 MLOAD PUSH2 0x198F DUP4 DUP4 PUSH2 0x15F5 JUMP JUMPDEST POP PUSH2 0xEEC DUP4 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x19CA PUSH2 0x19E6 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb7 0xb8 MSTORE PUSH7 0x636901284703ED SWAP1 DUP12 EXP PUSH17 0x6EB34AA426C6416FED9EAA7768FEB050FF STOP 0x29 ",
							"sourceMap": "140:4566:10:-;;;;;;;;;-1:-1:-1;;;140:4566:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2949:498;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2949:498:10;;;;;;;;;;;;;;;;;;;;3894:205;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3894:205:10;;;;;;3474:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3474:271:10;;;;;;;432:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;432:27:10;;;;1001:111:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:9;;;;294:21:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:21:10;;;;;;;;-1:-1:-1;;;;;294:21:10;;;;;;;;;;;;;;463:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;463:30:10;;;;238:20:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:9;;;;1803:79:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1803:79:10;;;;2162:784;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2162:784:10;-1:-1:-1;;;;;2162:784:10;;;;;615:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;615:45:10;-1:-1:-1;;;;;615:45:10;;;;;;;;;-1:-1:-1;;;;;615:45:10;;;;;;;;;;;;;;;;;;;;;3749:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3749:94:10;;;;368:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;368:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;368:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:555;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1244:555:10;;;;;;;;;;;;;;;;;;;;;;;4135:243;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4135:243:10;;;;;-1:-1:-1;;;;;;4135:243:10;;;;;;;1274:103:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:9;-1:-1:-1;;;;;1274:103:9;;;;;2949:498:10;3009:17;3095:25;;:::i;:::-;719:5:9;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;3158:5:10;3142:22;;;;;;;;;;;;;-1:-1:-1;;3142:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;3123:71;;3142:22;;;;3158:5;;3142:22;;3158:5;3142:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:22::i;:::-;3166:4;3172:21;3123:18;:71::i;:::-;3200:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3095:99;;-1:-1:-1;3200:23:10;;3095:99;;3200:23;:7;:23;:::i;:::-;3229:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;;:24;;:7;:24;:::i;:::-;3259:26;;;;;;;;;;;;;;;;;;;:3;;3279:5;3259:26;:10;:26;:::i;:::-;3309:3;3291:15;:21;3350:6;;3330:48;;-1:-1:-1;;;;;3350:6:10;3358:3;277:13;3330:19;:48::i;:::-;3424:5;3408:22;;;;;;;;;;;;;;-1:-1:-1;;3408:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;3318:60;;-1:-1:-1;3318:60:10;;3408:22;;;;3424:5;;3408:22;;3424:5;3408:22;;;;;;;;;;;;;;;;;;;;;;;;;3389:53;;;;;;;2949:498;;:::o;3894:205::-;719:5:9;;3940:21:10;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;3982:20:10;:18;:20::i;:::-;4042:28;;;;;;4064:4;4042:28;;;;;;3940:63;;-1:-1:-1;;;;;;4017:12:10;;;;;4030:10;;4017:12;;4042:13;;:28;;;;;;;;;;;;;;-1:-1:-1;4017:12:10;4042:28;;;5:2:-1;;;;30:1;27;20:12;5:2;4042:28:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4042:28:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4042:28:10;4017:54;;;-1:-1:-1;;;4017:54:10;;;;;;-1:-1:-1;;;;;4017:54:10;;;;;;;;;;;;;;;;;;;;4042:28;;4017:54;;;;;;;-1:-1:-1;4017:54:10;;;;5:2:-1;;;;30:1;27;20:12;5:2;4017:54:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4017:54:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4017:54:10;4009:85;;;;;;;-1:-1:-1;;;;;4009:85:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:205;:::o;3474:271::-;8456:27:1;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;8456:27:1;8442:10;:41;8434:94;;;;;-1:-1:-1;;;;;8434:94:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8541:27;;;;:15;:27;;;;;;8534:34;;-1:-1:-1;;8534:34:1;;;8579:27;8557:10;;8579:27;;;3667:41:10;;3696:11;;3684:10;;3667:41;;;;;-1:-1:-1;3714:12:10;:26;-1:-1:-1;3474:271:10:o;432:27::-;;;;:::o;1001:111:9:-;719:5;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;1077:5;;1058:25;;-1:-1:-1;;;;;1077:5:9;;;;1058:25;;1077:5;;1058:25;1089:5;:18;;-1:-1:-1;;1089:18:9;;;1001:111::o;294:21:10:-;;;-1:-1:-1;;;;;294:21:10;;:::o;463:30::-;;;;:::o;238:20:9:-;;;-1:-1:-1;;;;;238:20:9;;:::o;1803:79:10:-;1865:12;;1803:79;:::o;2162:784::-;2224:17;2331:23;2589:25;;:::i;:::-;-1:-1:-1;;;;;2357:15:10;;;;;;:6;:15;;;;;:28;;;;-1:-1:-1;277:13:10;2399:30;;2391:63;;;;;-1:-1:-1;;;;;2391:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2460:15:10;;;;;;:6;:15;;;;;;;;;-1:-1:-1;;2491:32:10;;2460:28;;;;:63;2652:5;2636:22;;;;;;;;;;;-1:-1:-1;;2636:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;2617:71;;2636:22;;;;2652:5;2636:22;;;;;;;;;;;;;;;;;;;;;;;;2617:71;2694:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2589:99;;-1:-1:-1;2694:23:10;;2589:99;;2694:23;:7;:23;:::i;:::-;2723:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;;:24;;:7;:24;:::i;:::-;2753:26;;;;;;;;;;;;;;;;;;;:3;;2773:5;2753:26;:10;:26;:::i;:::-;2817:6;;2797:48;;-1:-1:-1;;;;;2817:6:10;2825:3;277:13;2797:19;:48::i;:::-;2869:3;2851:15;:21;2923:5;2907:22;;;;;;;;;;;;;;-1:-1:-1;;2907:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;2785:60;;-1:-1:-1;2785:60:10;;2907:22;;;;2923:5;;2907:22;;2923:5;2907:22;;;;;;;;;;;;;;;;;;;;;;;;;2883:58;;-1:-1:-1;;;;;2883:58:10;;;;;;;;2162:784;;;;;:::o;615:45::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;615:45:10;;;;;:::o;3749:94::-;3796:7;3818:20;:18;:20::i;:::-;3811:27;;3749:94;:::o;368:20::-;;;;;;;;;;;;;;;-1:-1:-1;;368:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1244:555::-;1295:4;1405:21;1578:25;;:::i;:::-;1632:21;1325:10;1317:18;;;1309:55;;;;;-1:-1:-1;;;;;1309:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:20;:18;:20::i;:::-;1476:49;;;;;;1493:10;1476:49;;;;1512:4;1476:49;;;;;;;;;;;;1405:63;;-1:-1:-1;;;;;;1476:16:10;;;;;:49;;;;;;;;;;;;;;;-1:-1:-1;1476:16:10;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1476:49:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1476:49:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1613:10:10;1606:18;;;;:6;1476:49;1606:18;;;;;;;1578:46;;;;;;;;;-1:-1:-1;;;;;1578:46:10;;;;;;;;;;;;;;;;;1713:62;;;;;;;;;;;1656:28;;;;1713:62;;;;;;1692:18;;;;;;;;:83;;;;;-1:-1:-1;;1692:83:10;;;;;;;;;;;;;;;-1:-1:-1;1578:46:10;;1244:555;-1:-1:-1;;;1244:555:10:o;4135:243::-;719:5:9;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;4298:75:10;4318:10;4330:8;4340:19;4361:11;4298:19;:75::i;:::-;4135:243;;;;:::o;1274:103:9:-;719:5;;-1:-1:-1;;;;;719:5:9;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;4431:272:10:-;4580:26;;4500:14;;4563:6;;4580:31;4576:62;;;4628:3;;-1:-1:-1;4621:10:10;;4576:62;4689:2;4681:6;4677:15;4671:22;4661:32;;4652:47;;;;;:::o;1680:286:1:-;1825:14;;:::i;:::-;1854:25;;:::i;:::-;1892:69;:3;1907:7;1916:16;1934:26;1892:69;:14;:69;:::i;:::-;1885:76;1680:286;-1:-1:-1;;;;;1680:286:1:o;1922:155:0:-;2010:8;;;;:27;;2032:4;2010:27;:21;:27;:::i;:::-;2043:8;;;;:29;;2065:6;2043:29;:21;:29;:::i;:::-;1922:155;;;:::o;2647:::-;2738:8;;;;:27;;2760:4;2738:27;:21;:27;:::i;:::-;2771:8;;;;:26;;2790:6;2771:26;:18;:26;:::i;2917:466:1:-;3035:17;3101:4;3107:8;;3084:32;;;;;;-1:-1:-1;;;;;3084:32:1;-1:-1:-1;;;;;3084:32:1;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3084:32:1;;;3074:43;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3074:43:1;;;;;;;;;;;;;3136:8;;3123:10;;;:21;-1:-1:-1;3150:26:1;;;:15;:26;;;;;;:36;;-1:-1:-1;;3150:36:1;-1:-1:-1;;;;;3150:36:1;;;;;3197:26;;3074:43;;-1:-1:-1;3074:43:1;;-1:-1:-1;3197:26:1;;-1:-1:-1;;3197:26:1;-1:-1:-1;3197:26:1;3237:3;;-1:-1:-1;;;;;3237:3:1;:19;3257:7;3266:8;3276:19;3290:4;3276:13;:19::i;:::-;3237:59;;;;;-1:-1:-1;;;3237:59:1;;;;;;;-1:-1:-1;;;;;3237:59:1;-1:-1:-1;;;;;3237:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3237:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3237:59:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3237:59:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3237:59:1;3229:107;;;;;;;-1:-1:-1;;;;;3229:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3342:8;:13;;3354:1;3342:13;;;2917:466;;;;;:::o;5072:106::-;5169:3;;-1:-1:-1;;;;;5169:3:1;5072:106;:::o;3899:405::-;4050:32;4108:27;;;:15;:27;;;;;;;;-1:-1:-1;;4142:34:1;;;;;4187:27;;-1:-1:-1;;;;;4108:27:1;;;;4124:10;;4187:27;;4050:32;4187:27;4220:79;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4220:79:1;;;;;;;;;;;;;;-1:-1:-1;;;;;4220:29:1;;;;;:79;;;;;;;;;;;;;;;:29;:79;;;5:2:-1;;;;30:1;27;20:12;5:2;4220:79:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4220:79:1;;;;3899:405;;;;;:::o;1512:171:9:-;-1:-1:-1;;;;;1582:23:9;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:9;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;1661:17:9;-1:-1:-1;;;;;1661:17:9;;;;;;;;;;1512:171::o;948:360:0:-;1097:14;;:::i;:::-;1126:47;1145:4;:8;;;324:3;1126:18;:47::i;:::-;-1:-1:-1;;1179:13:0;;;-1:-1:-1;;;;;1198:39:0;:20;;;:39;-1:-1:-1;;;;;;1243:43:0;:23;;;:43;1179:13;948:360::o;2803:195:7:-;2902:55;2913:3;387:1;2943:5;2937:19;2902:10;:55::i;:::-;2967:24;:3;2984:5;2967:24;:10;:24;:::i;1724:445::-;-1:-1:-1;;1813:5:7;:28;1810:353;;;1857:30;1876:3;1881:5;1857:18;:30::i;:::-;1810:353;;;1915:18;1907:5;:26;1904:259;;;1949:24;1962:3;1967:5;1949:12;:24::i;1904:259::-;2002:1;1993:10;;1990:173;;2019:44;2030:3;232:1;2056:5;2019:10;:44::i;1990:173::-;2094:58;2105:3;288:1;2145:5;-1:-1:-1;;2140:10:7;2094;:58::i;:::-;1724:445;;:::o;7293:523:1:-;7686:7;;7701:20;;;;;7729:23;;;;;7378:5;7760:10;;;;7798:8;;;;:12;7407:404;;7437:6;7407:404;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7407:404:1;;;;;;-1:-1:-1;;;;;;7407:404:1;;;;;;;;;;;;7437:6;7407:404;;;;;;7437:6;7407:404;;;;;;;;;;;;;;7378:5;;7437:29;;:6;;;;7686:7;;7701:20;;7729:23;;7760:10;7437:6;;7798:12;;7407:404;;;;;;;;;;7437:6;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7407:404:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7407:404:1;;;-1:-1:-1;;26:21;;;22:32;6:49;;7407:404:1;;;49:4:-1;25:18;;61:17;;7407:404:1;182:15:-1;-1:-1;;;;;;7407:404:1;;;179:29:-1;;;;160:49;;;-1:-1;7407:404:1;;-1:-1:-1;;;;;;;;;;7293:523:1;;;:::o;942:395:6:-;1012:6;;:::i;:::-;1048:2;1037:8;:13;:18;1033:71;;1094:2;1083:8;:13;1077:2;:20;1065:32;;;;1033:71;-1:-1:-1;1151:12:6;;;;:23;;;1214:4;1208:11;;1226:16;;;-1:-1:-1;1249:14:6;;1291:18;;1283:27;;;1270:41;;1151:3;942:395;;;;;:::o;700:721:7:-;812:2;803:11;;800:615;;830:44;:3;853:10;;;;;;852:20;;;830:15;:44::i;:::-;;800:615;;;903:4;894:13;;891:524;;923:41;:3;960:2;946:10;;;;;945:17;923:41;:15;:41;:::i;:::-;-1:-1:-1;978:23:7;:3;992:5;999:1;978:23;:13;:23;:::i;891:524::-;1030:6;1021:15;;1018:397;;1052:41;:3;1089:2;1075:10;;;;;1074:17;1052:41;:15;:41;:::i;:::-;-1:-1:-1;1107:23:7;:3;1121:5;1128:1;1107:23;:13;:23;:::i;1018:397::-;1159:10;1150:19;;1147:268;;1185:41;:3;1222:2;1208:10;;;;;1207:17;1185:41;:15;:41;:::i;:::-;-1:-1:-1;1240:23:7;:3;1254:5;1261:1;1240:23;:13;:23;:::i;1147:268::-;1292:18;1283:27;;1280:135;;1326:41;:3;1363:2;1349:10;;;;;1348:17;1326:41;:15;:41;:::i;:::-;-1:-1:-1;1381:23:7;:3;1395:5;1402:1;1381:23;:13;:23;:::i;4496:155:6:-;4573:6;;:::i;:::-;4601:45;4607:3;4612;:7;;;:14;4628:4;4634;:11;4601:5;:45::i;:::-;4594:52;4496:155;-1:-1:-1;;;4496:155:6:o;2571:226:7:-;2664:72;:3;2686:48;2664:72;:15;:72;:::i;:::-;;2744:46;2756:3;2782:5;-1:-1:-1;;2777:10:7;2761:28;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2761:28:7;;;2744:11;:46::i;2359:206::-;2446:63;:3;2468:39;2446:63;:15;:63;:::i;:::-;;2517:41;2529:3;2550:5;2534:23;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2534:23:7;;;2517:11;:41::i;5811:144:6:-;5885:6;;:::i;:::-;5913:37;5924:3;5929;:7;;;:14;5945:4;5913:10;:37::i;9497:154::-;9578:6;;:::i;:::-;9606:40;9615:3;9620;:7;;;:14;9636:4;9642:3;9606:8;:40::i;:::-;9599:47;9497:154;-1:-1:-1;;;;9497:154:6:o;2651:1140::-;2746:6;;:::i;:::-;2897:9;2912:8;3580:9;2782:4;:11;2775:3;:18;;2767:27;;;;;;;;2817:3;:12;;;2811:3;2805;:9;:24;2801:90;;;2839:45;2846:3;2851:28;2855:3;:12;;;2875:3;2869;:9;2851:3;:28::i;:::-;2882:1;2851:32;2839:6;:45::i;:::-;3006:3;3000:10;3077:6;3071:13;3193:3;3188:2;3180:6;3176:15;3172:25;3164:33;;3277:6;3271:3;3266;3262:13;3259:25;3256:2;;;3319:3;3314;3310:13;3302:6;3295:29;3256:2;3356;3350:4;3346:13;3339:20;;2935:430;;3417:129;3431:2;3424:9;;3417:129;;3486:10;;3473:24;;-1:-1:-1;;3435:9:6;;;;3520:2;3512:10;;;;3530:9;;;;3417:129;;;-1:-1:-1;3655:10:6;3704:11;;3600:2;:8;;;;3592:3;:17;-1:-1:-1;;3592:21:6;3667:9;;3651:26;;;3700:22;;3742:21;;;;3729:35;;;-1:-1:-1;3783:3:6;;;-1:-1:-1;;2651:1140:6:o;2175:178:7:-;2272:47;2283:3;337:1;2306:5;:12;2272:10;:47::i;4945:619:6:-;5028:6;;:::i;:::-;5060:12;;;;5053:19;;5049:69;;5082:29;5089:3;5094;:12;;;5109:1;5094:16;5082:6;:29::i;:::-;5204:3;5198:10;5275:6;5269:13;5387:2;5381:3;5373:6;5369:16;5365:25;5411:4;5405;5397:19;5482:6;5477:3;5474:15;5471:2;;;5527:1;5519:6;5515:14;5507:6;5500:30;5471:2;-1:-1:-1;5556:3:6;;4945:619;-1:-1:-1;;;;;4945:619:6:o;8610:642::-;8699:6;;:::i;:::-;8799:9;8736:3;:12;;;8730:3;8724;:9;:24;8720:73;;;8758:28;8765:3;8777;8771;:9;8784:1;8770:15;8758:6;:28::i;:::-;8824:1;8818:3;8811;:10;:14;8799:26;;8911:3;8905:10;9026:3;9020;9012:6;9008:16;9004:26;9082:4;9074;9070:9;9063:4;9057:11;9053:27;9050:37;9044:4;9037:51;9170:6;9164:13;9158:3;9153;9149:13;9146:32;9143:2;;;9213:3;9208;9204:13;9196:6;9189:29;9143:2;-1:-1:-1;9244:3:6;;8610:642;-1:-1:-1;;;;;;8610:642:6:o;1889:114::-;1939:4;1959:1;1955;:5;1951:34;;;-1:-1:-1;1977:1:6;1970:8;;1732:153;1823:7;;1836:19;1823:3;1846:8;1836:4;:19::i;:::-;;1861;1868:3;1873:6;1861;:19::i;140:4566:10:-;;;;;;;;;-1:-1:-1;140:4566:10;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;140:4566:10;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;140:4566:10;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1339600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cancelRequest(bytes32,uint256,bytes4,uint256)": "infinite",
								"currentValue()": "513",
								"depositPLI(uint256)": "infinite",
								"fulfill(bytes32,uint256)": "43582",
								"getPluginToken()": "877",
								"jobId()": "infinite",
								"latestTimestamp()": "579",
								"oracle()": "710",
								"owner()": "754",
								"plidbs(address)": "1215",
								"renounceOwnership()": "22226",
								"requestData(address)": "infinite",
								"showPrice()": "623",
								"testMyFunc()": "infinite",
								"transferOwnership(address)": "23153",
								"withdrawPli()": "infinite"
							},
							"internal": {
								"stringToBytes32(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "MSTORE"
								},
								{
									"begin": 1088,
									"end": 1089,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1061,
									"end": 1089,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1061,
									"end": 1089,
									"name": "SSTORE"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "POP"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "MLOAD"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "CODESIZE"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "SUB"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP1"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP4"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "CODECOPY"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP2"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "ADD"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "SWAP1"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP2"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "MSTORE"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP2"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "MLOAD"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP4"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "ADD"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "MLOAD"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "SWAP2"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP4"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "ADD"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "MLOAD"
								},
								{
									"begin": 567,
									"end": 572,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "DUP1"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "AND"
								},
								{
									"begin": 575,
									"end": 585,
									"name": "CALLER"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "OR"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "SWAP1"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "SSTORE"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "SWAP1"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "SWAP3"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "ADD"
								},
								{
									"begin": 1164,
									"end": 1184,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "DUP4"
								},
								{
									"begin": 1164,
									"end": 1178,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1164,
									"end": 1178,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 1164,
									"end": 1178,
									"name": "DUP2"
								},
								{
									"begin": 1164,
									"end": 1178,
									"name": "MUL"
								},
								{
									"begin": 1164,
									"end": 1184,
									"name": "DIV"
								},
								{
									"begin": 1164,
									"end": 1184,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1184,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 1164,
									"end": 1184,
									"name": "JUMPDEST"
								},
								{
									"begin": 1190,
									"end": 1196,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "DUP1"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "DUP5"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "AND"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "OR"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "SWAP1"
								},
								{
									"begin": 1190,
									"end": 1215,
									"name": "SSTORE"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "DUP1"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "MLOAD"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "SWAP1"
								},
								{
									"begin": 1221,
									"end": 1226,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 1221,
									"end": 1226,
									"name": "SWAP1"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "DUP5"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "ADD"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "SWAP1"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "JUMPDEST"
								},
								{
									"begin": 1221,
									"end": 1235,
									"name": "POP"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "POP"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "POP"
								},
								{
									"begin": 1078,
									"end": 1240,
									"name": "POP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP"
								},
								{
									"begin": 4632,
									"end": 4719,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 4632,
									"end": 4719,
									"name": "JUMPDEST"
								},
								{
									"begin": 4685,
									"end": 4688,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "DUP1"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP3"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP1"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP3"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "AND"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP2"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP1"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP2"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "OR"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SWAP1"
								},
								{
									"begin": 4685,
									"end": 4714,
									"name": "SSTORE"
								},
								{
									"begin": 4632,
									"end": 4719,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SLOAD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "AND"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ISZERO"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "MUL"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SUB"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "AND"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DIV"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "MSTORE"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "KECCAK256"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DIV"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "LT"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPI"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "MLOAD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "NOT"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "AND"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP4"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "OR"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP6"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SSTORE"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP6"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SSTORE"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ISZERO"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPI"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "GT"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ISZERO"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPI"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "MLOAD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SSTORE"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "POP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP3"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "GT"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ISZERO"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPI"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP2"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SSTORE"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "ADD"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "JUMPDEST"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "CODECOPY"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 140,
									"end": 4706,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b7b85266636901284703ed908b0a706eb34aa426c6416fed9eaa7768feb050ff0029",
									".code": [
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "LT"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DIV"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "2D8C762C"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "37FCCD30"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "4357855E"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "698996F8"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "7DC0D1D0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "8205BF6A"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "8E0E0ABB"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "9DD4CC5D"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "A2E36C5F"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "A4B6F67E"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "C2939D97"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "D378D5EB"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "EC65D0F8"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "EQ"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPI"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "REVERT"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "JUMPDEST"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "JUMP"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "JUMPDEST"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "SWAP2"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "DUP3"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "RETURN"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "JUMP"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "STOP"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "JUMPDEST"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "JUMP"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMP"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMP"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMP"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SWAP3"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "AND"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "RETURN"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "JUMPDEST"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "JUMP"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMP"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMPDEST"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "POP"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMP"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "JUMPDEST"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "AND"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "JUMP"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "JUMP"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP4"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP4"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "MSTORE"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP4"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "MSTORE"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "MLOAD"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP3"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SUB"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "RETURN"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "JUMPDEST"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "POP"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "JUMP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP6"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "EXP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "NOT"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "RETURN"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "JUMP"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "MLOAD"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "SWAP2"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "ISZERO"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "ISZERO"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "DUP3"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "MSTORE"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "MLOAD"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "DUP2"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "SUB"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "ADD"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "RETURN"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "JUMPDEST"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "AND"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "JUMP"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMP"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "JUMPDEST"
										},
										{
											"begin": 3009,
											"end": 3026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SLOAD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MLOAD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP6"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "AND"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ISZERO"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP5"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "AND"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DIV"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP5"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DIV"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP5"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MUL"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP5"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE"
										},
										{
											"begin": 3123,
											"end": 3194,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3123,
											"end": 3194,
											"name": "SWAP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP3"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ISZERO"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPI"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "LT"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPI"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SLOAD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DIV"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MUL"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "KECCAK256"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SLOAD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "GT"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPI"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SUB"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "AND"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3157,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST"
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "ADDRESS"
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "PUSH",
											"value": "4357855E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 3123,
											"end": 3194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3194,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3123,
											"end": 3194,
											"name": "JUMPDEST"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MLOAD"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP3"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "ADD"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP3"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MSTORE"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP2"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MSTORE"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "5F6673796D730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP4"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "ADD"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP2"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP2"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MSTORE"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP3"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MLOAD"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP5"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "ADD"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP4"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MSTORE"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP4"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MSTORE"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "5844430000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP1"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "DUP4"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "ADD"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "MSTORE"
										},
										{
											"begin": 3095,
											"end": 3194,
											"name": "SWAP2"
										},
										{
											"begin": 3095,
											"end": 3194,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "SWAP2"
										},
										{
											"begin": 3095,
											"end": 3194,
											"name": "DUP4"
										},
										{
											"begin": 3095,
											"end": 3194,
											"name": "SWAP2"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3207,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "AND"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3200,
											"end": 3223,
											"name": "JUMPDEST"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MLOAD"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP2"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "5F7473796D730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP4"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP2"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP2"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MLOAD"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP5"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP4"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP4"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "5553445400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP4"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP2"
										},
										{
											"begin": 3229,
											"end": 3232,
											"name": "DUP4"
										},
										{
											"begin": 3229,
											"end": 3232,
											"name": "SWAP2"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3229,
											"end": 3236,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "AND"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "JUMPDEST"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "DUP1"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "MLOAD"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "DUP1"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "DUP3"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "ADD"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "SWAP1"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "SWAP2"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "MSTORE"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "DUP2"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "MSTORE"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "PUSH",
											"value": "74696D6573000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "DUP3"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "ADD"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "MSTORE"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "SWAP1"
										},
										{
											"begin": 3259,
											"end": 3262,
											"name": "DUP3"
										},
										{
											"begin": 3259,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "AND"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 3259,
											"end": 3285,
											"name": "JUMPDEST"
										},
										{
											"begin": 3309,
											"end": 3312,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3291,
											"end": 3306,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "SSTORE"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "SLOAD"
										},
										{
											"begin": 3330,
											"end": 3378,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 3330,
											"end": 3378,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3358,
											"end": 3361,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 290,
											"name": "PUSH",
											"value": "2386F26FC10000"
										},
										{
											"begin": 3330,
											"end": 3349,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3330,
											"end": 3378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3378,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 3330,
											"end": 3378,
											"name": "JUMPDEST"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SLOAD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MLOAD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP8"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "AND"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ISZERO"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP6"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "AND"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP5"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP5"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DIV"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP4"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP5"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DIV"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MUL"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP3"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MSTORE"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MSTORE"
										},
										{
											"begin": 3318,
											"end": 3378,
											"name": "SWAP4"
										},
										{
											"begin": 3318,
											"end": 3378,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3318,
											"end": 3378,
											"name": "DUP6"
										},
										{
											"begin": 3318,
											"end": 3378,
											"name": "SWAP4"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP4"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP3"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "SWAP1"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "SWAP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP4"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ISZERO"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "JUMPI"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "LT"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "JUMPI"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP1"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP4"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SLOAD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DIV"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MUL"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "DUP4"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MSTORE"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "SWAP2"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "JUMP"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "JUMPDEST"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "MLOAD"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "PUSH",
											"value": "EAFD6B8E34637CA199864EE18F22FC46CBC730739912F5B54501A2A9E57E8070"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "SWAP1"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "SWAP1"
										},
										{
											"begin": 3389,
											"end": 3442,
											"name": "LOG3"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 3447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": 3940,
											"end": 3961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3961,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 3982,
											"end": 4002,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 3982,
											"end": 4002,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3982,
											"end": 4002,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3982,
											"end": 4002,
											"name": "JUMPDEST"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP1"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "MLOAD"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP2"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "MSTORE"
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "ADDRESS"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP3"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "ADD"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "MSTORE"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP1"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "MLOAD"
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2"
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "DUP4"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "AND"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "SWAP2"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "SWAP2"
										},
										{
											"begin": 4030,
											"end": 4040,
											"name": "CALLER"
										},
										{
											"begin": 4030,
											"end": 4040,
											"name": "SWAP2"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "DUP5"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "SWAP2"
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "SWAP2"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP1"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP4"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "ADD"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP3"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP3"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP2"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP1"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP3"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP1"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SUB"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "ADD"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "DUP8"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "DUP1"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "POP"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "GAS"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "CALL"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "POP"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "POP"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "POP"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "POP"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "MLOAD"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "MLOAD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP7"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MUL"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP2"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP4"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP5"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP4"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP2"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP2"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MLOAD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP4"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP3"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4070,
											"name": "SWAP3"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP2"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP3"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "SUB"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP8"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "DUP1"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "GAS"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "CALL"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MLOAD"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4071,
											"name": "MLOAD"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "ISZERO"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "ISZERO"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "JUMPI"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "DUP1"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "DUP2"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "MSTORE"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "DUP3"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "ADD"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "MSTORE"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "DUP3"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "ADD"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "MSTORE"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "556E61626C6520746F207472616E736665720000000000000000000000000000"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "DUP3"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "ADD"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "MSTORE"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "SWAP1"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "MLOAD"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "SWAP1"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "DUP2"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "SWAP1"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "SUB"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "ADD"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "SWAP1"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "REVERT"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 4009,
											"end": 4094,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "JUMPDEST"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "DUP3"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "DUP2"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "MSTORE"
										},
										{
											"begin": 8456,
											"end": 8471,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "MSTORE"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "SWAP1"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "KECCAK256"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "SLOAD"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "DUP3"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "AND"
										},
										{
											"begin": 8442,
											"end": 8452,
											"name": "CALLER"
										},
										{
											"begin": 8442,
											"end": 8483,
											"name": "EQ"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "JUMPI"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP1"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP2"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MSTORE"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP3"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "ADD"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MSTORE"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP3"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "ADD"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MSTORE"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "536F75726365206D75737420626520746865206F7261636C65206F6620746865"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP3"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "ADD"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MSTORE"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "2072657175657374000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP3"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "ADD"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MSTORE"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "SWAP1"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "MLOAD"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "SWAP1"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "DUP2"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "SWAP1"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "SUB"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "ADD"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "SWAP1"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "REVERT"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8434,
											"end": 8528,
											"name": "JUMPDEST"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "DUP2"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "DUP2"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "MSTORE"
										},
										{
											"begin": 8541,
											"end": 8556,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "MSTORE"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "DUP1"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "DUP3"
										},
										{
											"begin": 8541,
											"end": 8568,
											"name": "KECCAK256"
										},
										{
											"begin": 8534,
											"end": 8568,
											"name": "DUP1"
										},
										{
											"begin": 8534,
											"end": 8568,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8534,
											"end": 8568,
											"name": "AND"
										},
										{
											"begin": 8534,
											"end": 8568,
											"name": "SWAP1"
										},
										{
											"begin": 8534,
											"end": 8568,
											"name": "SSTORE"
										},
										{
											"begin": 8579,
											"end": 8606,
											"name": "MLOAD"
										},
										{
											"begin": 8557,
											"end": 8567,
											"name": "DUP3"
										},
										{
											"begin": 8557,
											"end": 8567,
											"name": "SWAP2"
										},
										{
											"begin": 8579,
											"end": 8606,
											"name": "PUSH",
											"value": "A40AD10B942505047C532A7399BF5EAC2768B11B7155B40EC80309AEA567F998"
										},
										{
											"begin": 8579,
											"end": 8606,
											"name": "SWAP2"
										},
										{
											"begin": 8579,
											"end": 8606,
											"name": "LOG2"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "MLOAD"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "DUP3"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "SWAP1"
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP5"
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "PUSH",
											"value": "1CA8663227A7FE9919713A01D344AFBB434E234F35A3E540A6AD924F88771F38"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3708,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3714,
											"end": 3740,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3474,
											"end": 3745,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SLOAD"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SLOAD"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "PUSH",
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1058,
											"end": 1083,
											"name": "LOG2"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SSTORE"
										},
										{
											"begin": 1001,
											"end": 1112,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "AND"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "JUMPDEST"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "SLOAD"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "DUP2"
										},
										{
											"begin": 463,
											"end": 493,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "AND"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP2"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMPDEST"
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "SLOAD"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "SWAP1"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "JUMPDEST"
										},
										{
											"begin": 2224,
											"end": 2241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2354,
											"name": "DUP1"
										},
										{
											"begin": 2589,
											"end": 2614,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2589,
											"end": 2614,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2589,
											"end": 2614,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2589,
											"end": 2614,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2589,
											"end": 2614,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "DUP5"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "KECCAK256"
										},
										{
											"begin": 2357,
											"end": 2385,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2357,
											"end": 2385,
											"name": "ADD"
										},
										{
											"begin": 2357,
											"end": 2385,
											"name": "SLOAD"
										},
										{
											"begin": 2357,
											"end": 2385,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 290,
											"name": "PUSH",
											"value": "2386F26FC10000"
										},
										{
											"begin": 2399,
											"end": 2429,
											"name": "DUP3"
										},
										{
											"begin": 2399,
											"end": 2429,
											"name": "GT"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "JUMPI"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "DUP2"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "MSTORE"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "DUP3"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "MSTORE"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "DUP3"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "MSTORE"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "4E4F5F53554646494349454E545F435245444954530000000000000000000000"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "DUP3"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "MSTORE"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "MLOAD"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "DUP2"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "SUB"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "REVERT"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 2391,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "DUP5"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "AND"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "DUP2"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "MSTORE"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "DUP2"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "MSTORE"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "DUP3"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2386F26FC0FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2491,
											"end": 2523,
											"name": "DUP6"
										},
										{
											"begin": 2491,
											"end": 2523,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2488,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2460,
											"end": 2488,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2488,
											"name": "DUP3"
										},
										{
											"begin": 2460,
											"end": 2488,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SSTORE"
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SLOAD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP5"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MLOAD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP3"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "AND"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ISZERO"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP2"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "AND"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP3"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP3"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DIV"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP2"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP5"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DIV"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP5"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MUL"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP5"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP5"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MSTORE"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP3"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MSTORE"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "SWAP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD"
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "DUP3"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP3"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ISZERO"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "JUMPI"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "LT"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "JUMPI"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP1"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SLOAD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DIV"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MUL"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "DUP4"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "MSTORE"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP2"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "SWAP2"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "JUMP"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "JUMPDEST"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MLOAD"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP3"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "ADD"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP3"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MSTORE"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP2"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MSTORE"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "5F6673796D730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP4"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "ADD"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP2"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP2"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MSTORE"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP3"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MLOAD"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP5"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "ADD"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP4"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MSTORE"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP4"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MSTORE"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "5844430000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP1"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "DUP4"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "ADD"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "MSTORE"
										},
										{
											"begin": 2589,
											"end": 2688,
											"name": "SWAP2"
										},
										{
											"begin": 2589,
											"end": 2688,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP2"
										},
										{
											"begin": 2589,
											"end": 2688,
											"name": "DUP4"
										},
										{
											"begin": 2589,
											"end": 2688,
											"name": "SWAP2"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "AND"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "JUMPDEST"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MLOAD"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP2"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "5F7473796D730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP4"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP2"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP2"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MLOAD"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP5"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP4"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP4"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "5553445400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "DUP4"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP2"
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "DUP4"
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "SWAP2"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2730,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "AND"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2723,
											"end": 2747,
											"name": "JUMPDEST"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "DUP1"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "MLOAD"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "DUP1"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "DUP3"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "SWAP1"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "SWAP2"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "DUP2"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "PUSH",
											"value": "74696D6573000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "DUP3"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "SWAP1"
										},
										{
											"begin": 2753,
											"end": 2756,
											"name": "DUP3"
										},
										{
											"begin": 2753,
											"end": 2756,
											"name": "SWAP1"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2753,
											"end": 2763,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "AND"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2753,
											"end": 2779,
											"name": "JUMPDEST"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "SLOAD"
										},
										{
											"begin": 2797,
											"end": 2845,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2797,
											"end": 2845,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 290,
											"name": "PUSH",
											"value": "2386F26FC10000"
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2797,
											"end": 2845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2845,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2797,
											"end": 2845,
											"name": "JUMPDEST"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2851,
											"end": 2866,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2851,
											"end": 2872,
											"name": "SSTORE"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SLOAD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MLOAD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP8"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "AND"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP6"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "AND"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP5"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP5"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DIV"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP4"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP5"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DIV"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MUL"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP3"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP3"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MSTORE"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP3"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MSTORE"
										},
										{
											"begin": 2785,
											"end": 2845,
											"name": "SWAP4"
										},
										{
											"begin": 2785,
											"end": 2845,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2785,
											"end": 2845,
											"name": "DUP7"
										},
										{
											"begin": 2785,
											"end": 2845,
											"name": "SWAP4"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP4"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP3"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP4"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ADD"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP3"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP3"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "JUMPI"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "LT"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "JUMPI"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP4"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SLOAD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DIV"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MUL"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "DUP4"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "MSTORE"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "SWAP2"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "JUMP"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "DUP8"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "AND"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "PUSH",
											"value": "7F3DF4038A13E7B83557E5A0EBF67FEC07391A522319AB42E81255E88DE18FFB"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2941,
											"name": "LOG4"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "POP"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "POP"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "SWAP2"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "SWAP1"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "POP"
										},
										{
											"begin": 2162,
											"end": 2946,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "MSTORE"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP2"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "MSTORE"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "KECCAK256"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SLOAD"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "DUP3"
										},
										{
											"begin": 615,
											"end": 660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "JUMPDEST"
										},
										{
											"begin": 3796,
											"end": 3803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 3818,
											"end": 3836,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "JUMPDEST"
										},
										{
											"begin": 3811,
											"end": 3838,
											"name": "SWAP1"
										},
										{
											"begin": 3811,
											"end": 3838,
											"name": "POP"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "SWAP1"
										},
										{
											"begin": 3749,
											"end": 3843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP6"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP5"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DIV"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP5"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DIV"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP5"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MUL"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP5"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "LT"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DIV"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MUL"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "KECCAK256"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SLOAD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP4"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "GT"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 388,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1295,
											"end": 1299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1426,
											"name": "DUP1"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1632,
											"end": 1653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1335,
											"name": "PUSH",
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "DUP6"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "GT"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "ISZERO"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "JUMPI"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP1"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP2"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "MSTORE"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP3"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "ADD"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "MSTORE"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP3"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "ADD"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "MSTORE"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "4E4F545F4D4F52455F5448414E5F3130305F414C4C4F57454400000000000000"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP3"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "ADD"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "MSTORE"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "MLOAD"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP2"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "SUB"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "ADD"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "REVERT"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1447,
											"end": 1467,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1447,
											"end": 1467,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1447,
											"end": 1467,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 1447,
											"end": 1467,
											"name": "JUMPDEST"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MLOAD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP2"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MSTORE"
										},
										{
											"begin": 1493,
											"end": 1503,
											"name": "CALLER"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP3"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ADD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MSTORE"
										},
										{
											"begin": 1512,
											"end": 1516,
											"name": "ADDRESS"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP3"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ADD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MSTORE"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP2"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ADD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP9"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MSTORE"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MLOAD"
										},
										{
											"begin": 1405,
											"end": 1468,
											"name": "SWAP2"
										},
										{
											"begin": 1405,
											"end": 1468,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP6"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "AND"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP2"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP2"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP3"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ADD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP3"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP3"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP2"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP3"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "SUB"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ADD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP8"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "DUP1"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "POP"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "GAS"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "CALL"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "POP"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "POP"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "POP"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "POP"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "MLOAD"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "CALLER"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "MSTORE"
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1476,
											"end": 1525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "MSTORE"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP1"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP5"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "KECCAK256"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "MLOAD"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP1"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP4"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "ADD"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP4"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "MSTORE"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP2"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "AND"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP4"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "MSTORE"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP1"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP6"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "ADD"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP1"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "SLOAD"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "SWAP5"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP9"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "ADD"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "DUP6"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "SWAP1"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "MSTORE"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP7"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "MLOAD"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP9"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "SWAP8"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "MSTORE"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP11"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP8"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "MSTORE"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP15"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP4"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP6"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP8"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "DUP2"
										},
										{
											"begin": 1713,
											"end": 1775,
											"name": "MSTORE"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP9"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP8"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP5"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP4"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "MLOAD"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP4"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP3"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "AND"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP2"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP2"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "OR"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP2"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SSTORE"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "MLOAD"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SWAP6"
										},
										{
											"begin": 1692,
											"end": 1775,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "SWAP3"
										},
										{
											"begin": 1578,
											"end": 1624,
											"name": "SWAP4"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1799,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 4298,
											"end": 4373,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 4318,
											"end": 4328,
											"name": "DUP5"
										},
										{
											"begin": 4330,
											"end": 4338,
											"name": "DUP5"
										},
										{
											"begin": 4340,
											"end": 4359,
											"name": "DUP5"
										},
										{
											"begin": 4361,
											"end": 4372,
											"name": "DUP5"
										},
										{
											"begin": 4298,
											"end": 4317,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4298,
											"end": 4373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4373,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 4298,
											"end": 4373,
											"name": "JUMPDEST"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "POP"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "POP"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "POP"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "POP"
										},
										{
											"begin": 4135,
											"end": 4378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1274,
											"end": 1377,
											"name": "JUMPDEST"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "AND"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 705,
											"end": 724,
											"name": "EQ"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "REVERT"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 1343,
											"end": 1372,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP2"
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 1343,
											"end": 1372,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4703,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4431,
											"end": 4703,
											"name": "JUMPDEST"
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "DUP1"
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "MLOAD"
										},
										{
											"begin": 4500,
											"end": 4514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4514,
											"name": "SWAP1"
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP3"
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "SWAP1"
										},
										{
											"begin": 4580,
											"end": 4611,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4638,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4638,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 4576,
											"end": 4638,
											"name": "JUMPI"
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4621,
											"end": 4631,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 4621,
											"end": 4631,
											"name": "JUMP"
										},
										{
											"begin": 4576,
											"end": 4638,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 4576,
											"end": 4638,
											"name": "JUMPDEST"
										},
										{
											"begin": 4689,
											"end": 4691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP4"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "ADD"
										},
										{
											"begin": 4671,
											"end": 4693,
											"name": "MLOAD"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "SWAP2"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "POP"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "JUMPDEST"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "POP"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "SWAP2"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "SWAP1"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "POP"
										},
										{
											"begin": 4652,
											"end": 4699,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 1966,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1680,
											"end": 1966,
											"name": "JUMPDEST"
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1892,
											"end": 1961,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "DUP2"
										},
										{
											"begin": 1907,
											"end": 1914,
											"name": "DUP7"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP7"
										},
										{
											"begin": 1934,
											"end": 1960,
											"name": "DUP7"
										},
										{
											"begin": 1892,
											"end": 1961,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 1906,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 1892,
											"end": 1961,
											"name": "AND"
										},
										{
											"begin": 1892,
											"end": 1961,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 1961,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 1892,
											"end": 1961,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1961,
											"name": "SWAP6"
										},
										{
											"begin": 1680,
											"end": 1966,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1680,
											"end": 1966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1922,
											"end": 2077,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1922,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 2010,
											"end": 2018,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2010,
											"end": 2018,
											"name": "DUP4"
										},
										{
											"begin": 2010,
											"end": 2018,
											"name": "ADD"
										},
										{
											"begin": 2010,
											"end": 2018,
											"name": "MLOAD"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "DUP4"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "AND"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2010,
											"end": 2037,
											"name": "JUMPDEST"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "DUP4"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "ADD"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "MLOAD"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "SWAP1"
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "DUP3"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2043,
											"end": 2064,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "AND"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "JUMPDEST"
										},
										{
											"begin": 1922,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1922,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1922,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1922,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2647,
											"end": 2802,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2647,
											"end": 2802,
											"name": "JUMPDEST"
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "DUP4"
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "ADD"
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "MLOAD"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "SWAP1"
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "DUP4"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2759,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "JUMPDEST"
										},
										{
											"begin": 2771,
											"end": 2779,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2771,
											"end": 2779,
											"name": "DUP4"
										},
										{
											"begin": 2771,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2771,
											"end": 2779,
											"name": "MLOAD"
										},
										{
											"begin": 2771,
											"end": 2797,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 2771,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP3"
										},
										{
											"begin": 2771,
											"end": 2797,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2771,
											"end": 2797,
											"name": "AND"
										},
										{
											"begin": 2771,
											"end": 2797,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "JUMPDEST"
										},
										{
											"begin": 3035,
											"end": 3052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3105,
											"name": "ADDRESS"
										},
										{
											"begin": 3107,
											"end": 3115,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3115,
											"name": "SLOAD"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "MLOAD"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "DUP1"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "AND"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "MUL"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "DUP2"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "DUP3"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "DUP2"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "SWAP3"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "POP"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "POP"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "POP"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "SWAP1"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "MSTORE"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "MLOAD"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP3"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "MLOAD"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "ADD"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP4"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP4"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "DUP5"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP3"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "MLOAD"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP3"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP5"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "ADD"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP3"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SUB"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP2"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "KECCAK256"
										},
										{
											"begin": 3136,
											"end": 3144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3144,
											"name": "SLOAD"
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "DUP11"
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "ADD"
										},
										{
											"begin": 3123,
											"end": 3144,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "MSTORE"
										},
										{
											"begin": 3150,
											"end": 3165,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "MSTORE"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "DUP4"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "DUP3"
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "KECCAK256"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "DUP1"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "DUP13"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "AND"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "OR"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3186,
											"name": "SSTORE"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP3"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "MLOAD"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP3"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "DUP6"
										},
										{
											"begin": 3074,
											"end": 3117,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"value": "A6745906207AFB96A5801B8E5711FD7B74C5780CE893A973806E179D675BBE24"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "LOG2"
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "AND"
										},
										{
											"begin": 3237,
											"end": 3256,
											"name": "PUSH",
											"value": "4000AEA0"
										},
										{
											"begin": 3257,
											"end": 3264,
											"name": "DUP6"
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "DUP5"
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "DUP8"
										},
										{
											"begin": 3276,
											"end": 3289,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "JUMPDEST"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP5"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MUL"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP3"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP3"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ISZERO"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "JUMPI"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP3"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "EXP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "NOT"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ADD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "JUMPDEST"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SWAP5"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "SUB"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP8"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "GAS"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "CALL"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3237,
											"end": 3296,
											"name": "MLOAD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ISZERO"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ISZERO"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "JUMPI"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP1"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP2"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "636C650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP3"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MSTORE"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "MLOAD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "DUP2"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "SUB"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "ADD"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "SWAP1"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "REVERT"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 3229,
											"end": 3336,
											"name": "JUMPDEST"
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3342,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3342,
											"end": 3355,
											"name": "SLOAD"
										},
										{
											"begin": 3354,
											"end": 3355,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3342,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3342,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3342,
											"end": 3355,
											"name": "SSTORE"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "SWAP4"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "SWAP3"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "POP"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "POP"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "POP"
										},
										{
											"begin": 2917,
											"end": 3383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5072,
											"end": 5178,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5072,
											"end": 5178,
											"name": "JUMPDEST"
										},
										{
											"begin": 5169,
											"end": 5172,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5169,
											"end": 5172,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5169,
											"end": 5172,
											"name": "AND"
										},
										{
											"begin": 5072,
											"end": 5178,
											"name": "SWAP1"
										},
										{
											"begin": 5072,
											"end": 5178,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "JUMPDEST"
										},
										{
											"begin": 4050,
											"end": 4082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP5"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP2"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MSTORE"
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MSTORE"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP1"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP3"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "KECCAK256"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP1"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4142,
											"end": 4176,
											"name": "DUP2"
										},
										{
											"begin": 4142,
											"end": 4176,
											"name": "AND"
										},
										{
											"begin": 4142,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 4142,
											"end": 4176,
											"name": "SWAP2"
										},
										{
											"begin": 4142,
											"end": 4176,
											"name": "SSTORE"
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SWAP1"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SWAP2"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "AND"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SWAP2"
										},
										{
											"begin": 4124,
											"end": 4134,
											"name": "DUP7"
										},
										{
											"begin": 4124,
											"end": 4134,
											"name": "SWAP2"
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "PUSH",
											"value": "715822738DAD692E521EBC0193D189BF23153EB1D4420173D6B30CD8ADD9F9A6"
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "SWAP2"
										},
										{
											"begin": 4050,
											"end": 4082,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "LOG2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MLOAD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "6EE4D55300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP8"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP7"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP6"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "AND"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP3"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP5"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "DUP4"
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "AND"
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "PUSH",
											"value": "6EE4D553"
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP4"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP3"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP3"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP3"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "SUB"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP4"
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "DUP8"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "DUP1"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "GAS"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "CALL"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4299,
											"name": "POP"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "POP"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "POP"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "POP"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "POP"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "POP"
										},
										{
											"begin": 3899,
											"end": 4304,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1512,
											"end": 1683,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 1512,
											"end": 1683,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "ISZERO"
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "ISZERO"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "JUMPI"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "REVERT"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "JUMPDEST"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "SLOAD"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "DUP1"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "DUP5"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "AND"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "SWAP3"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1617,
											"end": 1655,
											"name": "LOG3"
										},
										{
											"begin": 1661,
											"end": 1666,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "AND"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "OR"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SSTORE"
										},
										{
											"begin": 1512,
											"end": 1683,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1308,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 948,
											"end": 1308,
											"name": "JUMPDEST"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "JUMPDEST"
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DUP6"
										},
										{
											"begin": 1145,
											"end": 1153,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1145,
											"end": 1153,
											"name": "ADD"
										},
										{
											"begin": 1145,
											"end": 1153,
											"name": "MLOAD"
										},
										{
											"begin": 324,
											"end": 327,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP2"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP4"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1286,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1266,
											"name": "DUP3"
										},
										{
											"begin": 1243,
											"end": 1266,
											"name": "ADD"
										},
										{
											"begin": 1243,
											"end": 1286,
											"name": "MSTORE"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1308,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2803,
											"end": 2998,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 2803,
											"end": 2998,
											"name": "JUMPDEST"
										},
										{
											"begin": 2902,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 2913,
											"end": 2916,
											"name": "DUP3"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2943,
											"end": 2948,
											"name": "DUP4"
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "MLOAD"
										},
										{
											"begin": 2902,
											"end": 2912,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2902,
											"end": 2957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2957,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 2902,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 2967,
											"end": 2970,
											"name": "DUP3"
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "DUP3"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2977,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "AND"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 2169,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 1724,
											"end": 2169,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1813,
											"end": 1818,
											"name": "DUP2"
										},
										{
											"begin": 1813,
											"end": 1841,
											"name": "SLT"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "JUMPI"
										},
										{
											"begin": 1857,
											"end": 1887,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "DUP3"
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "DUP3"
										},
										{
											"begin": 1857,
											"end": 1875,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 1857,
											"end": 1887,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1857,
											"end": 1887,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 1857,
											"end": 1887,
											"name": "JUMPDEST"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "JUMP"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 1810,
											"end": 2163,
											"name": "JUMPDEST"
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP2"
										},
										{
											"begin": 1907,
											"end": 1933,
											"name": "SGT"
										},
										{
											"begin": 1904,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 1904,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 1904,
											"end": 2163,
											"name": "JUMPI"
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1962,
											"end": 1965,
											"name": "DUP3"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP3"
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1904,
											"end": 2163,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 1904,
											"end": 2163,
											"name": "JUMPDEST"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2003,
											"name": "DUP2"
										},
										{
											"begin": 1993,
											"end": 2003,
											"name": "SLT"
										},
										{
											"begin": 1990,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 1990,
											"end": 2163,
											"name": "JUMPI"
										},
										{
											"begin": 2019,
											"end": 2063,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2061,
											"name": "DUP4"
										},
										{
											"begin": 2019,
											"end": 2029,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2019,
											"end": 2063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2163,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 1990,
											"end": 2163,
											"name": "JUMPDEST"
										},
										{
											"begin": 2094,
											"end": 2152,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "DUP3"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "SUB"
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2094,
											"end": 2152,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2094,
											"end": 2152,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2094,
											"end": 2152,
											"name": "JUMPDEST"
										},
										{
											"begin": 1724,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 1724,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 1724,
											"end": 2169,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7293,
											"end": 7816,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 7293,
											"end": 7816,
											"name": "JUMPDEST"
										},
										{
											"begin": 7686,
											"end": 7693,
											"name": "DUP1"
										},
										{
											"begin": 7686,
											"end": 7693,
											"name": "MLOAD"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP1"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP4"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "ADD"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "MLOAD"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "DUP1"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "DUP6"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "ADD"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "MLOAD"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7760,
											"end": 7770,
											"name": "DUP7"
										},
										{
											"begin": 7760,
											"end": 7770,
											"name": "DUP2"
										},
										{
											"begin": 7760,
											"end": 7770,
											"name": "ADD"
										},
										{
											"begin": 7760,
											"end": 7770,
											"name": "MLOAD"
										},
										{
											"begin": 7798,
											"end": 7806,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7798,
											"end": 7806,
											"name": "DUP9"
										},
										{
											"begin": 7798,
											"end": 7806,
											"name": "ADD"
										},
										{
											"begin": 7798,
											"end": 7806,
											"name": "MLOAD"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "MLOAD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MLOAD"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP3"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP3"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP11"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP9"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "AND"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP5"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP7"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "AND"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "A4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP5"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "C4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP5"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "E4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP5"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "104"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP6"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP9"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MLOAD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "124"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP7"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP9"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MLOAD"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "SWAP7"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "SWAP12"
										},
										{
											"begin": 7437,
											"end": 7466,
											"name": "PUSH",
											"value": "4042994600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7437,
											"end": 7466,
											"name": "SWAP12"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "SWAP5"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "SWAP11"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP12"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "SWAP11"
										},
										{
											"begin": 7686,
											"end": 7693,
											"name": "SWAP2"
										},
										{
											"begin": 7686,
											"end": 7693,
											"name": "SWAP10"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP1"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP9"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "SWAP1"
										},
										{
											"begin": 7729,
											"end": 7752,
											"name": "SWAP8"
										},
										{
											"begin": 7760,
											"end": 7770,
											"name": "SWAP7"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "SWAP4"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "SWAP6"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP2"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP5"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "144"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP6"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP4"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "AND"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ISZERO"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "JUMPI"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP3"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SUB"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MLOAD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP4"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SUB"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "EXP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SUB"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "NOT"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "AND"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "ADD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "DUP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP2"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "MSTORE"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP1"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP14"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "SWAP13"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "SWAP1"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "SWAP13"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "SWAP1"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "SWAP12"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP9"
										},
										{
											"begin": 7407,
											"end": 7811,
											"name": "SWAP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7293,
											"end": 7816,
											"name": "SWAP2"
										},
										{
											"begin": 7293,
											"end": 7816,
											"name": "SWAP1"
										},
										{
											"begin": 7293,
											"end": 7816,
											"name": "POP"
										},
										{
											"begin": 7293,
											"end": 7816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "JUMPDEST"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "JUMPDEST"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1045,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "MOD"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "ISZERO"
										},
										{
											"begin": 1033,
											"end": 1104,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 1033,
											"end": 1104,
											"name": "JUMPI"
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1091,
											"name": "DUP3"
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "MOD"
										},
										{
											"begin": 1077,
											"end": 1079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "SUB"
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1033,
											"end": 1104,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 1033,
											"end": 1104,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "DUP1"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "DUP4"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "ADD"
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "DUP3"
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "SWAP1"
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "MSTORE"
										},
										{
											"begin": 1214,
											"end": 1218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1219,
											"name": "DUP1"
										},
										{
											"begin": 1208,
											"end": 1219,
											"name": "MLOAD"
										},
										{
											"begin": 1226,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1242,
											"name": "DUP6"
										},
										{
											"begin": 1226,
											"end": 1242,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP2"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "MSTORE"
										},
										{
											"begin": 1291,
											"end": 1309,
											"name": "DUP4"
										},
										{
											"begin": 1291,
											"end": 1309,
											"name": "ADD"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP2"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "ADD"
										},
										{
											"begin": 1270,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1270,
											"end": 1311,
											"name": "MSTORE"
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "SWAP3"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1337,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 1421,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 700,
											"end": 1421,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 814,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 803,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 803,
											"end": 814,
											"name": "GT"
										},
										{
											"begin": 800,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 800,
											"end": 1415,
											"name": "JUMPI"
										},
										{
											"begin": 830,
											"end": 874,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 830,
											"end": 833,
											"name": "DUP4"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "DUP5"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "AND"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "MUL"
										},
										{
											"begin": 852,
											"end": 872,
											"name": "AND"
										},
										{
											"begin": 852,
											"end": 872,
											"name": "DUP4"
										},
										{
											"begin": 852,
											"end": 872,
											"name": "OR"
										},
										{
											"begin": 830,
											"end": 845,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 830,
											"end": 874,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 830,
											"end": 874,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 830,
											"end": 874,
											"name": "JUMPDEST"
										},
										{
											"begin": 830,
											"end": 874,
											"name": "POP"
										},
										{
											"begin": 800,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 800,
											"end": 1415,
											"name": "JUMP"
										},
										{
											"begin": 800,
											"end": 1415,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 800,
											"end": 1415,
											"name": "JUMPDEST"
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 894,
											"end": 907,
											"name": "DUP2"
										},
										{
											"begin": 894,
											"end": 907,
											"name": "GT"
										},
										{
											"begin": 891,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 891,
											"end": 1415,
											"name": "JUMPI"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 923,
											"end": 926,
											"name": "DUP4"
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "DUP7"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "AND"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "MUL"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "OR"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 923,
											"end": 938,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP4"
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP3"
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 978,
											"end": 1001,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 978,
											"end": 991,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 978,
											"end": 1001,
											"name": "AND"
										},
										{
											"begin": 978,
											"end": 1001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 1415,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 891,
											"end": 1415,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "GT"
										},
										{
											"begin": 1018,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 1018,
											"end": 1415,
											"name": "JUMPI"
										},
										{
											"begin": 1052,
											"end": 1093,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 1052,
											"end": 1055,
											"name": "DUP4"
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP7"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "AND"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "MUL"
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "OR"
										},
										{
											"begin": 1052,
											"end": 1093,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1067,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 1052,
											"end": 1093,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1093,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1093,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 1052,
											"end": 1093,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP4"
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "DUP3"
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "AND"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1415,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 1018,
											"end": 1415,
											"name": "JUMPDEST"
										},
										{
											"begin": 1159,
											"end": 1169,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "DUP2"
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "GT"
										},
										{
											"begin": 1147,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 1147,
											"end": 1415,
											"name": "JUMPI"
										},
										{
											"begin": 1185,
											"end": 1226,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "DUP4"
										},
										{
											"begin": 1222,
											"end": 1224,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "DUP7"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "MUL"
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "OR"
										},
										{
											"begin": 1185,
											"end": 1226,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1200,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 1185,
											"end": 1226,
											"name": "AND"
										},
										{
											"begin": 1185,
											"end": 1226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1226,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 1185,
											"end": 1226,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1263,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "DUP3"
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1263,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 1240,
											"end": 1263,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1263,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1147,
											"end": 1415,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 1147,
											"end": 1415,
											"name": "JUMPDEST"
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "DUP2"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "GT"
										},
										{
											"begin": 1280,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 1280,
											"end": 1415,
											"name": "JUMPI"
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 1326,
											"end": 1329,
											"name": "DUP4"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "DUP7"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "AND"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "MUL"
										},
										{
											"begin": 1348,
											"end": 1365,
											"name": "OR"
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1341,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "AND"
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 1381,
											"end": 1384,
											"name": "DUP4"
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "AND"
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4651,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 4496,
											"end": 4651,
											"name": "JUMPDEST"
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "JUMPDEST"
										},
										{
											"begin": 4601,
											"end": 4646,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 4607,
											"end": 4610,
											"name": "DUP4"
										},
										{
											"begin": 4612,
											"end": 4615,
											"name": "DUP5"
										},
										{
											"begin": 4612,
											"end": 4619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4619,
											"name": "ADD"
										},
										{
											"begin": 4612,
											"end": 4619,
											"name": "MLOAD"
										},
										{
											"begin": 4612,
											"end": 4626,
											"name": "MLOAD"
										},
										{
											"begin": 4628,
											"end": 4632,
											"name": "DUP5"
										},
										{
											"begin": 4634,
											"end": 4638,
											"name": "DUP6"
										},
										{
											"begin": 4634,
											"end": 4645,
											"name": "MLOAD"
										},
										{
											"begin": 4601,
											"end": 4606,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 4601,
											"end": 4646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4601,
											"end": 4646,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 4601,
											"end": 4646,
											"name": "JUMPDEST"
										},
										{
											"begin": 4594,
											"end": 4646,
											"name": "SWAP4"
										},
										{
											"begin": 4496,
											"end": 4651,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2797,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 2571,
											"end": 2797,
											"name": "JUMPDEST"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 2664,
											"end": 2667,
											"name": "DUP3"
										},
										{
											"begin": 2686,
											"end": 2734,
											"name": "PUSH",
											"value": "C3"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "AND"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "JUMPDEST"
										},
										{
											"begin": 2664,
											"end": 2736,
											"name": "POP"
										},
										{
											"begin": 2744,
											"end": 2790,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2756,
											"end": 2759,
											"name": "DUP3"
										},
										{
											"begin": 2782,
											"end": 2787,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2777,
											"end": 2787,
											"name": "SUB"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "MLOAD"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "ADD"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "DUP1"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "DUP3"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "DUP2"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "MSTORE"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "ADD"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "SWAP2"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "POP"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "POP"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "SWAP1"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "MSTORE"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 2744,
											"end": 2790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2359,
											"end": 2565,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 2359,
											"end": 2565,
											"name": "JUMPDEST"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3"
										},
										{
											"begin": 2468,
											"end": 2507,
											"name": "PUSH",
											"value": "C2"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2446,
											"end": 2461,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "AND"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "JUMPDEST"
										},
										{
											"begin": 2446,
											"end": 2509,
											"name": "POP"
										},
										{
											"begin": 2517,
											"end": 2558,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3"
										},
										{
											"begin": 2550,
											"end": 2555,
											"name": "DUP3"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "MLOAD"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "ADD"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "DUP1"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "DUP3"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "DUP2"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "MSTORE"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "ADD"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "SWAP2"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "POP"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "POP"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "SWAP1"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "MSTORE"
										},
										{
											"begin": 2517,
											"end": 2528,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 2517,
											"end": 2558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5811,
											"end": 5955,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5811,
											"end": 5955,
											"name": "JUMPDEST"
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "JUMPDEST"
										},
										{
											"begin": 5913,
											"end": 5950,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 5924,
											"end": 5927,
											"name": "DUP4"
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "DUP5"
										},
										{
											"begin": 5929,
											"end": 5936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5936,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 5936,
											"name": "MLOAD"
										},
										{
											"begin": 5929,
											"end": 5943,
											"name": "MLOAD"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP5"
										},
										{
											"begin": 5913,
											"end": 5923,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5913,
											"end": 5950,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9497,
											"end": 9651,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 9497,
											"end": 9651,
											"name": "JUMPDEST"
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "JUMPDEST"
										},
										{
											"begin": 9606,
											"end": 9646,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 9615,
											"end": 9618,
											"name": "DUP5"
										},
										{
											"begin": 9620,
											"end": 9623,
											"name": "DUP6"
										},
										{
											"begin": 9620,
											"end": 9627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9627,
											"name": "ADD"
										},
										{
											"begin": 9620,
											"end": 9627,
											"name": "MLOAD"
										},
										{
											"begin": 9620,
											"end": 9634,
											"name": "MLOAD"
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "DUP6"
										},
										{
											"begin": 9642,
											"end": 9645,
											"name": "DUP6"
										},
										{
											"begin": 9606,
											"end": 9614,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 9606,
											"end": 9646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9606,
											"end": 9646,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 9606,
											"end": 9646,
											"name": "JUMPDEST"
										},
										{
											"begin": 9599,
											"end": 9646,
											"name": "SWAP5"
										},
										{
											"begin": 9497,
											"end": 9651,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9497,
											"end": 9651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2651,
											"end": 3791,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 2651,
											"end": 3791,
											"name": "JUMPDEST"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "JUMPDEST"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "DUP1"
										},
										{
											"begin": 3580,
											"end": 3589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2786,
											"name": "DUP6"
										},
										{
											"begin": 2782,
											"end": 2793,
											"name": "MLOAD"
										},
										{
											"begin": 2775,
											"end": 2778,
											"name": "DUP6"
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "GT"
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "ISZERO"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "ISZERO"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "ISZERO"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "JUMPI"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "REVERT"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2767,
											"end": 2794,
											"name": "JUMPDEST"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "DUP8"
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "ADD"
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "MLOAD"
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP6"
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "DUP9"
										},
										{
											"begin": 2805,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2805,
											"end": 2829,
											"name": "GT"
										},
										{
											"begin": 2801,
											"end": 2891,
											"name": "ISZERO"
										},
										{
											"begin": 2801,
											"end": 2891,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 2801,
											"end": 2891,
											"name": "JUMPI"
										},
										{
											"begin": 2839,
											"end": 2884,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 2846,
											"end": 2849,
											"name": "DUP9"
										},
										{
											"begin": 2851,
											"end": 2879,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "DUP11"
										},
										{
											"begin": 2855,
											"end": 2867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2867,
											"name": "ADD"
										},
										{
											"begin": 2855,
											"end": 2867,
											"name": "MLOAD"
										},
										{
											"begin": 2875,
											"end": 2878,
											"name": "DUP11"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP10"
										},
										{
											"begin": 2869,
											"end": 2878,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 2851,
											"end": 2879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2879,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 2851,
											"end": 2879,
											"name": "JUMPDEST"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2851,
											"end": 2883,
											"name": "MUL"
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 2839,
											"end": 2884,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2884,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 2839,
											"end": 2884,
											"name": "JUMPDEST"
										},
										{
											"begin": 3006,
											"end": 3009,
											"name": "DUP8"
										},
										{
											"begin": 3000,
											"end": 3010,
											"name": "MLOAD"
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP1"
										},
										{
											"begin": 3071,
											"end": 3084,
											"name": "MLOAD"
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP9"
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP4"
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3172,
											"end": 3197,
											"name": "ADD"
										},
										{
											"begin": 3164,
											"end": 3197,
											"name": "SWAP5"
										},
										{
											"begin": 3164,
											"end": 3197,
											"name": "POP"
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "DUP1"
										},
										{
											"begin": 3271,
											"end": 3274,
											"name": "DUP10"
										},
										{
											"begin": 3266,
											"end": 3269,
											"name": "DUP9"
										},
										{
											"begin": 3262,
											"end": 3275,
											"name": "ADD"
										},
										{
											"begin": 3259,
											"end": 3284,
											"name": "GT"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "ISZERO"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "JUMPI"
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "DUP9"
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP8"
										},
										{
											"begin": 3310,
											"end": 3323,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "DUP3"
										},
										{
											"begin": 3295,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "JUMPDEST"
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "DUP9"
										},
										{
											"begin": 3346,
											"end": 3359,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3359,
											"name": "SWAP4"
										},
										{
											"begin": 3339,
											"end": 3359,
											"name": "POP"
										},
										{
											"begin": 2935,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2935,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "JUMPDEST"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP6"
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "LT"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "JUMPI"
										},
										{
											"begin": 3486,
											"end": 3496,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3496,
											"name": "MLOAD"
										},
										{
											"begin": 3473,
											"end": 3497,
											"name": "DUP4"
										},
										{
											"begin": 3473,
											"end": 3497,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "SWAP1"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "SWAP5"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "ADD"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "SWAP4"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "SWAP3"
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "DUP4"
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "ADD"
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "SWAP3"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "SWAP1"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "SWAP2"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "ADD"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "SWAP1"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "JUMP"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3417,
											"end": 3546,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3655,
											"end": 3665,
											"name": "MLOAD"
										},
										{
											"begin": 3704,
											"end": 3715,
											"name": "DUP2"
										},
										{
											"begin": 3704,
											"end": 3715,
											"name": "MLOAD"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3608,
											"name": "SWAP5"
										},
										{
											"begin": 3600,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 3600,
											"end": 3608,
											"name": "SWAP5"
										},
										{
											"begin": 3600,
											"end": 3608,
											"name": "SUB"
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3592,
											"end": 3613,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "NOT"
										},
										{
											"begin": 3651,
											"end": 3677,
											"name": "SWAP1"
										},
										{
											"begin": 3651,
											"end": 3677,
											"name": "SWAP2"
										},
										{
											"begin": 3651,
											"end": 3677,
											"name": "AND"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "SWAP4"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "AND"
										},
										{
											"begin": 3742,
											"end": 3763,
											"name": "SWAP3"
										},
										{
											"begin": 3742,
											"end": 3763,
											"name": "SWAP1"
										},
										{
											"begin": 3742,
											"end": 3763,
											"name": "SWAP3"
										},
										{
											"begin": 3742,
											"end": 3763,
											"name": "OR"
										},
										{
											"begin": 3729,
											"end": 3764,
											"name": "SWAP1"
										},
										{
											"begin": 3729,
											"end": 3764,
											"name": "SWAP2"
										},
										{
											"begin": 3729,
											"end": 3764,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "SWAP2"
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "SWAP3"
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2651,
											"end": 3791,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2175,
											"end": 2353,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 2175,
											"end": 2353,
											"name": "JUMPDEST"
										},
										{
											"begin": 2272,
											"end": 2319,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 2283,
											"end": 2286,
											"name": "DUP3"
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP4"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MLOAD"
										},
										{
											"begin": 2272,
											"end": 2282,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2272,
											"end": 2319,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 5564,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 4945,
											"end": 5564,
											"name": "JUMPDEST"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "JUMPDEST"
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "DUP5"
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "ADD"
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "MLOAD"
										},
										{
											"begin": 5053,
											"end": 5072,
											"name": "DUP4"
										},
										{
											"begin": 5053,
											"end": 5072,
											"name": "LT"
										},
										{
											"begin": 5049,
											"end": 5118,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 5049,
											"end": 5118,
											"name": "JUMPI"
										},
										{
											"begin": 5082,
											"end": 5111,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 5089,
											"end": 5092,
											"name": "DUP5"
										},
										{
											"begin": 5094,
											"end": 5097,
											"name": "DUP6"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "ADD"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "MLOAD"
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5094,
											"end": 5110,
											"name": "MUL"
										},
										{
											"begin": 5082,
											"end": 5088,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 5082,
											"end": 5111,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5082,
											"end": 5111,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 5082,
											"end": 5111,
											"name": "JUMPDEST"
										},
										{
											"begin": 5204,
											"end": 5207,
											"name": "DUP4"
										},
										{
											"begin": 5198,
											"end": 5208,
											"name": "MLOAD"
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP1"
										},
										{
											"begin": 5269,
											"end": 5282,
											"name": "MLOAD"
										},
										{
											"begin": 5387,
											"end": 5389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "DUP6"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4"
										},
										{
											"begin": 5369,
											"end": 5385,
											"name": "ADD"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "ADD"
										},
										{
											"begin": 5411,
											"end": 5415,
											"name": "DUP5"
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5416,
											"name": "MSTORE8"
										},
										{
											"begin": 5482,
											"end": 5488,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5480,
											"name": "DUP7"
										},
										{
											"begin": 5474,
											"end": 5489,
											"name": "EQ"
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "ISZERO"
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "JUMPI"
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5519,
											"end": 5525,
											"name": "DUP3"
										},
										{
											"begin": 5515,
											"end": 5529,
											"name": "ADD"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP4"
										},
										{
											"begin": 5500,
											"end": 5530,
											"name": "MSTORE"
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5556,
											"end": 5559,
											"name": "SWAP5"
										},
										{
											"begin": 5556,
											"end": 5559,
											"name": "SWAP6"
										},
										{
											"begin": 4945,
											"end": 5564,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4945,
											"end": 5564,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8610,
											"end": 9252,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 8610,
											"end": 9252,
											"name": "JUMPDEST"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "JUMPDEST"
										},
										{
											"begin": 8799,
											"end": 8808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8739,
											"name": "DUP6"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "ADD"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "MLOAD"
										},
										{
											"begin": 8730,
											"end": 8733,
											"name": "DUP6"
										},
										{
											"begin": 8724,
											"end": 8727,
											"name": "DUP5"
										},
										{
											"begin": 8724,
											"end": 8733,
											"name": "ADD"
										},
										{
											"begin": 8724,
											"end": 8748,
											"name": "GT"
										},
										{
											"begin": 8720,
											"end": 8793,
											"name": "ISZERO"
										},
										{
											"begin": 8720,
											"end": 8793,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 8720,
											"end": 8793,
											"name": "JUMPI"
										},
										{
											"begin": 8758,
											"end": 8786,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 8765,
											"end": 8768,
											"name": "DUP7"
										},
										{
											"begin": 8777,
											"end": 8780,
											"name": "DUP7"
										},
										{
											"begin": 8771,
											"end": 8774,
											"name": "DUP6"
										},
										{
											"begin": 8771,
											"end": 8780,
											"name": "ADD"
										},
										{
											"begin": 8784,
											"end": 8785,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8770,
											"end": 8785,
											"name": "MUL"
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 8758,
											"end": 8786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8758,
											"end": 8786,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 8758,
											"end": 8786,
											"name": "JUMPDEST"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8818,
											"end": 8821,
											"name": "DUP4"
										},
										{
											"begin": 8811,
											"end": 8814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8811,
											"end": 8821,
											"name": "EXP"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "SUB"
										},
										{
											"begin": 8799,
											"end": 8825,
											"name": "SWAP1"
										},
										{
											"begin": 8799,
											"end": 8825,
											"name": "POP"
										},
										{
											"begin": 8911,
											"end": 8914,
											"name": "DUP6"
										},
										{
											"begin": 8905,
											"end": 8915,
											"name": "MLOAD"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP4"
										},
										{
											"begin": 9020,
											"end": 9023,
											"name": "DUP7"
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3"
										},
										{
											"begin": 9008,
											"end": 9024,
											"name": "ADD"
										},
										{
											"begin": 9004,
											"end": 9030,
											"name": "ADD"
										},
										{
											"begin": 9082,
											"end": 9086,
											"name": "DUP6"
										},
										{
											"begin": 9074,
											"end": 9078,
											"name": "DUP4"
										},
										{
											"begin": 9070,
											"end": 9079,
											"name": "NOT"
										},
										{
											"begin": 9063,
											"end": 9067,
											"name": "DUP3"
										},
										{
											"begin": 9057,
											"end": 9068,
											"name": "MLOAD"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "AND"
										},
										{
											"begin": 9050,
											"end": 9087,
											"name": "OR"
										},
										{
											"begin": 9044,
											"end": 9048,
											"name": "DUP2"
										},
										{
											"begin": 9037,
											"end": 9088,
											"name": "MSTORE"
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP2"
										},
										{
											"begin": 9164,
											"end": 9177,
											"name": "MLOAD"
										},
										{
											"begin": 9158,
											"end": 9161,
											"name": "DUP6"
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "DUP9"
										},
										{
											"begin": 9149,
											"end": 9162,
											"name": "ADD"
										},
										{
											"begin": 9146,
											"end": 9178,
											"name": "GT"
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "ISZERO"
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "JUMPI"
										},
										{
											"begin": 9213,
											"end": 9216,
											"name": "DUP5"
										},
										{
											"begin": 9208,
											"end": 9211,
											"name": "DUP8"
										},
										{
											"begin": 9204,
											"end": 9217,
											"name": "ADD"
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "DUP3"
										},
										{
											"begin": 9189,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9244,
											"end": 9247,
											"name": "SWAP6"
										},
										{
											"begin": 9244,
											"end": 9247,
											"name": "SWAP7"
										},
										{
											"begin": 8610,
											"end": 9252,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8610,
											"end": 9252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2003,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 1889,
											"end": 2003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1939,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP2"
										},
										{
											"begin": 1955,
											"end": 1956,
											"name": "DUP4"
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "GT"
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "ISZERO"
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "DUP2"
										},
										{
											"begin": 1970,
											"end": 1978,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 1970,
											"end": 1978,
											"name": "JUMP"
										},
										{
											"begin": 1732,
											"end": 1885,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 1732,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "DUP2"
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "MLOAD"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 1823,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1846,
											"end": 1854,
											"name": "DUP4"
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "JUMPDEST"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP"
										},
										{
											"begin": 1861,
											"end": 1880,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 1868,
											"end": 1871,
											"name": "DUP4"
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 1861,
											"end": 1880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 4706,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"cancelRequest(bytes32,uint256,bytes4,uint256)": "ec65d0f8",
							"currentValue()": "698996f8",
							"depositPLI(uint256)": "d378d5eb",
							"fulfill(bytes32,uint256)": "4357855e",
							"getPluginToken()": "a4b6f67e",
							"jobId()": "c2939d97",
							"latestTimestamp()": "8205bf6a",
							"oracle()": "7dc0d1d0",
							"owner()": "8da5cb5b",
							"plidbs(address)": "a2e36c5f",
							"renounceOwnership()": "715018a6",
							"requestData(address)": "9dd4cc5d",
							"showPrice()": "8e0e0abb",
							"testMyFunc()": "2d8c762c",
							"transferOwnership(address)": "f2fde38b",
							"withdrawPli()": "37fccd30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"testMyFunc\",\"outputs\":[{\"name\":\"requestId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawPli\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"name\":\"_currentval\",\"type\":\"uint256\"}],\"name\":\"fulfill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"requestData\",\"outputs\":[{\"name\":\"requestId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"plidbs\",\"outputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"totalcredits\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPluginToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jobId\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"depositPLI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"name\":\"_payment\",\"type\":\"uint256\"},{\"name\":\"_callbackFunctionId\",\"type\":\"bytes4\"},{\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_pli\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_jobid\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"currentVal\",\"type\":\"uint256\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"jobId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"requestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"jobId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"requestCreatedTest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginCancelled\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/InternalContract.sol\":\"InternalContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.4/Plugin.sol\":{\"keccak256\":\"0x55d5a74c02f96985405b0b220344758006943a51cb1479875ae0beb02fe5a53e\",\"urls\":[\"bzzr://594231e6dc829495d3cf5e3a8ac05e73066ca66bf828c6c02c52eaa3ba5a6400\"]},\"@goplugin/contracts/src/v0.4/PluginClient.sol\":{\"keccak256\":\"0x02ee30c7bacfbd319dab6ec4e62bc0d60cd4ffe0dada9b8e4a096ccd22d91bc5\",\"urls\":[\"bzzr://563d6a01cf1a9bc96be7ee3ecc8c1fb152325115bf298dfd57b22a83c01187c9\"]},\"@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xd0b1a6134b5d6c0213bc4db5df8693ec41e13de3d97d43cc8d19639e516f9767\",\"urls\":[\"bzzr://93d66e26b4b5cf6cfa8c6a5d04cb56ff27d49a2aee8f54858ac3db7658355b1f\"]},\"@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol\":{\"keccak256\":\"0xe47511761a6c2376c687577b372cc9e4ffada0f7459d8c7a3098aadb5cab69d0\",\"urls\":[\"bzzr://c65c130027ab723ffce69a11e097b78f017eeb480578f83fb064fb4d327f0da2\"]},\"@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol\":{\"keccak256\":\"0x7f38f485eb3e9b2069399f5a994bf0c536f04f26f0324928f25e5bb554e24dee\",\"urls\":[\"bzzr://63132837e9194f67705c20046d53843c726042925786c735a1bbf5323afb031d\"]},\"@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x8019f30a207af4ee80a8b2774e42aba721641254ed0a97826a54f33d7caef218\",\"urls\":[\"bzzr://8ddbb9ae67ec27aed40d6013d6ea176c05f7cd61d4f6fa95492a03fa086d90af\"]},\"@goplugin/contracts/src/v0.4/vendor/Buffer.sol\":{\"keccak256\":\"0x900b4c8ab35b4876d89835a8b050c96107ace250a70f64c5bba6a78a60f03883\",\"urls\":[\"bzzr://408340da4e8fa35e608196ee508f11f9d44f6f70a10f0db0083ab20b5a894d59\"]},\"@goplugin/contracts/src/v0.4/vendor/CBOR.sol\":{\"keccak256\":\"0xa6ccf721ad390d312d179af25b84db9a8c79bdd557390b3ead5f20a9513d0332\",\"urls\":[\"bzzr://7fadae93321d5ec1d9e0ace4197a3e44c4df6007b475ef67df7062b9189d82c8\"]},\"@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol\":{\"keccak256\":\"0x08965df63f00cb8d164d6fc36a0c388740725906b0bfb79b17391d5dfeabf683\",\"urls\":[\"bzzr://0700cb12e032ed8ed8327e446dfd805ae9fa28785a2909a73def511fe374b8cd\"]},\"@goplugin/contracts/src/v0.4/vendor/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"contracts/InternalContract.sol\":{\"keccak256\":\"0xc09d006c3c8476caf449ac7ee0e57c4c622ccf545717bf6814546f88adccf2aa\",\"urls\":[\"bzzr://3bd1e3461384d1d296de0d804979d818629b030dce33e3fbce0f2f676c61c119\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			}
		},
		"sources": {
			"@goplugin/contracts/src/v0.4/Plugin.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/Plugin.sol",
					"exportedSymbols": {
						"Plugin": [
							250
						]
					},
					"id": 251,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/vendor/CBOR.sol",
							"file": "./vendor/CBOR.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 1768,
							"src": "26:56:0",
							"symbolAliases": [
								{
									"foreign": 2,
									"local": "CBOR_Plugin"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/vendor/Buffer.sol",
							"file": "./vendor/Buffer.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 1369,
							"src": "83:62:0",
							"symbolAliases": [
								{
									"foreign": 4,
									"local": "Buffer_Plugin"
								}
							],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title Library for common Plugin functions\n@dev Uses imported CBOR library for encoding to buffer",
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Plugin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 8,
									"name": "defaultBufferSize",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "278:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323536",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "324:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_256_by_1",
											"typeString": "int_const 256"
										},
										"value": "256"
									},
									"visibility": "internal"
								},
								{
									"id": 11,
									"libraryName": {
										"contractScope": null,
										"id": 9,
										"name": "CBOR_Plugin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1767,
										"src": "383:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CBOR_$1767",
											"typeString": "library CBOR"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "377:43:0",
									"typeName": {
										"contractScope": null,
										"id": 10,
										"name": "Buffer_Plugin.buffer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 904,
										"src": "399:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
											"typeString": "struct Buffer.buffer"
										}
									}
								},
								{
									"canonicalName": "Plugin.Request",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 13,
											"name": "id",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "445:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 12,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"name": "callbackAddress",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "461:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 14,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "461:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"name": "callbackFunctionId",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "490:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 16,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "490:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"name": "nonce",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "521:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "521:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"name": "buf",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "540:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
												"typeString": "struct Buffer.buffer"
											},
											"typeName": {
												"contractScope": null,
												"id": 20,
												"name": "Buffer_Plugin.buffer",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 904,
												"src": "540:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
													"typeString": "struct Buffer.buffer"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nodeType": "StructDefinition",
									"scope": 250,
									"src": "424:145:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "1120:188:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 38,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1145:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "1145:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 40,
															"name": "defaultBufferSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1155:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 35,
															"name": "Buffer_Plugin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "1126:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Buffer_$1368_$",
																"typeString": "type(library Buffer)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "1126:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1126:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 43,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1179:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "1179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1189:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1179:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1179:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "callbackAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "1198:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 52,
														"name": "_callbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1221:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1198:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1198:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "callbackFunctionId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "1243:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 58,
														"name": "_callbackFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1269:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1243:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1243:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "1299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"functionReturnParameters": 34,
												"id": 62,
												"nodeType": "Return",
												"src": "1292:11:0"
											}
										]
									},
									"documentation": "@notice Initializes a Plugin request\n@dev Sets the ID, callback address, and callback function signature on the request\n@param self The uninitialized request\n@param _id The Job Specification ID\n@param _callbackAddress The callback address\n@param _callbackFunction The callback function signature\n@return The initialized request",
									"id": 64,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "973:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 23,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "998:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 25,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"name": "_callbackAddress",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1015:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"name": "_callbackFunction",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1045:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 29,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "967:106:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1097:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 32,
													"name": "Plugin.Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "1097:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1096:23:0"
									},
									"scope": 250,
									"src": "948:360:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1619:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 74,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1644:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "1644:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1654:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 71,
															"name": "Buffer_Plugin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "1625:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Buffer_$1368_$",
																"typeString": "type(library Buffer)"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "1625:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1625:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 83,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1694:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "1694:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 85,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1704:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 80,
															"name": "Buffer_Plugin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "1673:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Buffer_$1368_$",
																"typeString": "type(library Buffer)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1140,
														"src": "1673:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1673:37:0"
											}
										]
									},
									"documentation": "@notice Sets the data for the buffer without encoding CBOR on-chain\n@dev CBOR can be closed with curly-brackets {} or they can be left off\n@param self The initialized request\n@param _data The CBOR data",
									"id": 89,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "setBuffer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1565:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 65,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "1565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1586:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 67,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1586:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1564:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:0"
									},
									"scope": 250,
									"src": "1546:169:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2004:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 103,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2032:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 98,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2010:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2010:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "2010:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2010:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 111,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 106,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2043:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2043:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "2043:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2043:29:0"
											}
										]
									},
									"documentation": "@notice Adds a string value to the request with a given key name\n@param self The initialized request\n@param _key The name of the key\n@param _value The string value to add",
									"id": 115,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1935:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 90,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "1935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"name": "_key",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1956:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1969:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 94,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1969:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1934:49:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:0"
									},
									"scope": 250,
									"src": "1922:155:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2368:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 129,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2396:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 124,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2374:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2374:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "2374:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2374:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2374:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 137,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "2428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 132,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2407:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeBytes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1643,
														"src": "2407:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2407:28:0"
											}
										]
									},
									"documentation": "@notice Adds a bytes value to the request with a given key name\n@param self The initialized request\n@param _key The name of the key\n@param _value The bytes value to add",
									"id": 141,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "addBytes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2300:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 116,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "2300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"name": "_key",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2321:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2334:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2334:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2299:48:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:0"
									},
									"scope": 250,
									"src": "2282:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2732:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 155,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2760:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 150,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "2738:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2738:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "2738:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,string memory) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "2738:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 163,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 158,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "2771:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "2771:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeInt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1622,
														"src": "2771:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,int256) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2771:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2771:26:0"
											}
										]
									},
									"documentation": "@notice Adds a int256 value to the request with a given key name\n@param self The initialized request\n@param _key The name of the key\n@param _value The int256 value to add",
									"id": 167,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "addInt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2663:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 142,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "2663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"name": "_key",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2684:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2684:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2662:49:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2732:0:0"
									},
									"scope": 250,
									"src": "2647:155:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3098:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 181,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "3126:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 176,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "3104:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "3104:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3104:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "3104:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 189,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "3157:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 184,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "3137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3137:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeUInt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1568,
														"src": "3137:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3137:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "3137:27:0"
											}
										]
									},
									"documentation": "@notice Adds a uint256 value to the request with a given key name\n@param self The initialized request\n@param _key The name of the key\n@param _value The uint256 value to add",
									"id": 193,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "addUint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3028:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 168,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "3028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"name": "_key",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3049:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3062:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3027:50:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:0:0"
									},
									"scope": 250,
									"src": "3011:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3495:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 208,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3523:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 203,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "3501:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3501:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "3501:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "3501:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 211,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "3534:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3534:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startArray",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1744,
														"src": "3534:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3534:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "3534:21:0"
											},
											{
												"body": {
													"id": 239,
													"nodeType": "Block",
													"src": "3606:48:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 234,
																			"name": "_values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 200,
																			"src": "3636:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 236,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 235,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3644:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3636:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 229,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "3614:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																				"typeString": "struct Plugin.Request memory"
																			}
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "buf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 21,
																		"src": "3614:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "encodeString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "3614:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,string memory) pure"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3614:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "3614:33:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "3581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 223,
															"name": "_values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "3585:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3585:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3581:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 240,
												"initializationExpression": {
													"assignments": [
														219
													],
													"declarations": [
														{
															"constant": false,
															"id": 219,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 249,
															"src": "3566:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 218,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3566:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 221,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3578:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3566:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3601:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 226,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3601:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 228,
													"nodeType": "ExpressionStatement",
													"src": "3601:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3561:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 241,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "3659:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "3659:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "endSequence",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1766,
														"src": "3659:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3659:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "3659:22:0"
											}
										]
									},
									"documentation": "@notice Adds an array of strings to the request with a given key name\n@param self The initialized request\n@param _key The name of the key\n@param _values The array of string values to add",
									"id": 249,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "addStringArray",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3416:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 194,
													"name": "Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "3416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"name": "_key",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3437:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3450:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 198,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3450:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 199,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3450:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3415:59:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:0:0"
									},
									"scope": 250,
									"src": "3392:294:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "259:3429:0"
						}
					],
					"src": "0:3689:0"
				},
				"id": 0
			},
			"@goplugin/contracts/src/v0.4/PluginClient.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/PluginClient.sol",
					"exportedSymbols": {
						"PluginClient": [
							681
						]
					},
					"id": 682,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/Plugin.sol",
							"file": "./Plugin.sol",
							"id": 253,
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 251,
							"src": "26:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol",
							"file": "./interfaces/ENSInterface.sol",
							"id": 254,
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 762,
							"src": "49:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol",
							"file": "./interfaces/PliTokenInterface.sol",
							"id": 255,
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 857,
							"src": "89:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol",
							"file": "./interfaces/PluginRequestInterface.sol",
							"id": 256,
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 890,
							"src": "134:49:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol",
							"file": "./interfaces/PointerInterface.sol",
							"id": 257,
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 898,
							"src": "184:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol",
							"file": "./vendor/ENSResolver.sol",
							"id": 259,
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 1778,
							"src": "228:77:1",
							"symbolAliases": [
								{
									"foreign": 258,
									"local": "ENSResolver_Plugin"
								}
							],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title The PluginClient contract\n@notice Contract writers can inherit this contract in order to create requests for the\nPlugin network",
							"fullyImplemented": true,
							"id": 681,
							"linearizedBaseContracts": [
								681
							],
							"name": "PluginClient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 262,
									"libraryName": {
										"contractScope": null,
										"id": 260,
										"name": "Plugin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 250,
										"src": "491:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Plugin_$250",
											"typeString": "library Plugin"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "485:32:1",
									"typeName": {
										"contractScope": null,
										"id": 261,
										"name": "Plugin.Request",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "502:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
											"typeString": "struct Plugin.Request"
										}
									}
								},
								{
									"constant": true,
									"id": 267,
									"name": "PLI",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "521:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "521:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 264,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "553:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 265,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "557:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "553:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 270,
									"name": "AMOUNT_OVERRIDE",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "563:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "563:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "606:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 273,
									"name": "SENDER_OVERRIDE",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "611:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 271,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307830",
										"id": 272,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "654:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 276,
									"name": "ARGS_VERSION",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 275,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "701:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 281,
									"name": "ENS_TOKEN_SUBNAME",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "706:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 277,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "706c69",
												"id": 279,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "761:5:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_673b1587d9769c3a3badcba38ab7aa1a367ce6235a55e6b1061e2d2788397154",
													"typeString": "literal_string \"pli\""
												},
												"value": "pli"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_673b1587d9769c3a3badcba38ab7aa1a367ce6235a55e6b1061e2d2788397154",
													"typeString": "literal_string \"pli\""
												}
											],
											"id": 278,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2272,
											"src": "751:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
												"typeString": "function () pure returns (bytes32)"
											}
										},
										"id": 280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "751:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 286,
									"name": "ENS_ORACLE_SUBNAME",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "771:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 282,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "771:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "6f7261636c65",
												"id": 284,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "827:8:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6",
													"typeString": "literal_string \"oracle\""
												},
												"value": "oracle"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6",
													"typeString": "literal_string \"oracle\""
												}
											],
											"id": 283,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2272,
											"src": "817:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
												"typeString": "function () pure returns (bytes32)"
											}
										},
										"id": 285,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "817:19:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 289,
									"name": "PLI_TOKEN_POINTER",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "840:87:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 287,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307843383962443445313633324433413433434230334141416435323632636265343033384263353731",
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "885:42:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"name": "ens",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "932:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ENSInterface_$761",
										"typeString": "contract ENSInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 290,
										"name": "ENSInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 761,
										"src": "932:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ENSInterface_$761",
											"typeString": "contract ENSInterface"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 293,
									"name": "ensNode",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "960:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 292,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "960:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"name": "pli",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "987:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PliTokenInterface_$856",
										"typeString": "contract PliTokenInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 294,
										"name": "PliTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 856,
										"src": "987:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PliTokenInterface_$856",
											"typeString": "contract PliTokenInterface"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 297,
									"name": "oracle",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "1020:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
										"typeString": "contract PluginRequestInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 296,
										"name": "PluginRequestInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 889,
										"src": "1020:22:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
											"typeString": "contract PluginRequestInterface"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 300,
									"name": "requests",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "1061:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1061:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 299,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1088:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 304,
									"name": "pendingRequests",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "1093:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 303,
										"keyType": {
											"id": 301,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 302,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "PluginRequested",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1171:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1170:20:1"
									},
									"src": "1149:42:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 312,
									"name": "PluginFulfilled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1216:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 309,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1215:20:1"
									},
									"src": "1194:42:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 316,
									"name": "PluginCancelled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1261:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1260:20:1"
									},
									"src": "1239:42:1"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "1848:118:1",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"name": "req",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "1854:25:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
															"typeString": "struct Plugin.Request"
														},
														"typeName": {
															"contractScope": null,
															"id": 329,
															"name": "Plugin.Request",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 22,
															"src": "1854:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
																"typeString": "struct Plugin.Request"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1854:25:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 334,
															"name": "_specId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "1907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 335,
															"name": "_callbackAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "1916:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 336,
															"name": "_callbackFunctionSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "1934:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 332,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "1892:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1892:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$22_memory_ptr_$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,bytes32,address,bytes4) pure returns (struct Plugin.Request memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"functionReturnParameters": 326,
												"id": 338,
												"nodeType": "Return",
												"src": "1885:76:1"
											}
										]
									},
									"documentation": "@notice Creates a request that can hold additional parameters\n@param _specId The Job Specification ID that the request will be created for\n@param _callbackAddress The callback address that the response will be sent to\n@param _callbackFunctionSignature The callback function signature to use for the callback address\n@return A Plugin Request struct in memory",
									"id": 340,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "buildPluginRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "_specId",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1713:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"name": "_callbackAddress",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1734:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"name": "_callbackFunctionSignature",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1764:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 321,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1764:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1707:94:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1825:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 324,
													"name": "Plugin.Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "1825:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1824:23:1"
									},
									"scope": 681,
									"src": "1680:286:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "2363:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 350,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "2396:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																"typeString": "contract PluginRequestInterface"
															}
														},
														{
															"argumentTypes": null,
															"id": 351,
															"name": "_req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2404:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 352,
															"name": "_payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2410:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																"typeString": "contract PluginRequestInterface"
															},
															{
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 349,
														"name": "sendPluginRequestTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "2376:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$22_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,struct Plugin.Request memory,uint256) returns (bytes32)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 348,
												"id": 354,
												"nodeType": "Return",
												"src": "2369:50:1"
											}
										]
									},
									"documentation": "@notice Creates a Plugin request to the stored oracle address\n@dev Calls `pluginRequestTo` with the stored oracle address\n@param _req The initialized Plugin Request\n@param _payment The amount of PLI to send for the request\n@return The request ID",
									"id": 356,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "sendPluginRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "_req",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2280:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 341,
													"name": "Plugin.Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "2280:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"name": "_payment",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2308:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2279:46:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2352:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2351:9:1"
									},
									"scope": 681,
									"src": "2253:171:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "3056:327:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 367,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "3062:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 371,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "3101:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PluginClient_$681",
																			"typeString": "contract PluginClient"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 372,
																		"name": "requests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "3107:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PluginClient_$681",
																			"typeString": "contract PluginClient"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 369,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2265,
																		"src": "3084:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3084:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 368,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "3074:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3074:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3062:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "3062:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 377,
															"name": "_req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3123:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "3123:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 380,
														"name": "requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "3136:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "3123:21:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 383,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3150:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 385,
														"indexExpression": {
															"argumentTypes": null,
															"id": 384,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3166:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3150:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 386,
														"name": "_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3179:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3150:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3150:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 390,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3213:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 389,
														"name": "PluginRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3197:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3197:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "3192:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 396,
																	"name": "_oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "3257:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 397,
																	"name": "_payment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3266:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 399,
																			"name": "_req",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "3290:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																				"typeString": "struct Plugin.Request memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																				"typeString": "struct Plugin.Request memory"
																			}
																		],
																		"id": 398,
																		"name": "encodeRequest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "3276:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Request_$22_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (struct Plugin.Request memory) view returns (bytes memory)"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3276:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 394,
																	"name": "pli",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3237:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																		"typeString": "contract PliTokenInterface"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "3237:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3237:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3298:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96",
																"typeString": "literal_string \"unable to transferAndCall to oracle\""
															},
															"value": "unable to transferAndCall to oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96",
																"typeString": "literal_string \"unable to transferAndCall to oracle\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2282,
														"src": "3229:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:107:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "3229:107:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 405,
														"name": "requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "3342:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3354:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3342:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "3342:13:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 409,
													"name": "requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "3369:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 366,
												"id": 410,
												"nodeType": "Return",
												"src": "3362:16:1"
											}
										]
									},
									"documentation": "@notice Creates a Plugin request to the specified oracle address\n@dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\nsend PLI which creates a request on the target oracle contract.\nEmits PluginRequested event.\n@param _oracle The address of the oracle for the request\n@param _req The initialized Plugin Request\n@param _payment The amount of PLI to send for the request\n@return The request ID",
									"id": 412,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "sendPluginRequestTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2946:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2946:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"name": "_req",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2963:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 359,
													"name": "Plugin.Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "2963:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"name": "_payment",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2991:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2991:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2945:63:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3035:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3034:19:1"
									},
									"scope": 681,
									"src": "2917:466:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4044:260:1",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "requested",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "4050:32:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
															"typeString": "contract PluginRequestInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 423,
															"name": "PluginRequestInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 889,
															"src": "4050:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																"typeString": "contract PluginRequestInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 426,
																"name": "pendingRequests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "4108:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																	"typeString": "mapping(bytes32 => address)"
																}
															},
															"id": 428,
															"indexExpression": {
																"argumentTypes": null,
																"id": 427,
																"name": "_requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "4124:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4108:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "PluginRequestInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "4085:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PluginRequestInterface_$889_$",
															"typeString": "type(contract PluginRequestInterface)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4085:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
														"typeString": "contract PluginRequestInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4050:86:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4142:34:1",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "4149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 433,
														"indexExpression": {
															"argumentTypes": null,
															"id": 432,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4165:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4149:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4142:34:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 437,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4203:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 436,
														"name": "PluginCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "4187:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4187:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "EmitStatement",
												"src": "4182:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 443,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4250:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 444,
															"name": "_payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4262:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 445,
															"name": "_callbackFunc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4272:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 446,
															"name": "_expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4287:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 440,
															"name": "requested",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4220:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																"typeString": "contract PluginRequestInterface"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "cancelOracleRequest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 888,
														"src": "4220:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes4_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,bytes4,uint256) external"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4220:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "4220:79:1"
											}
										]
									},
									"documentation": "@notice Allows a request to be cancelled if it has not been fulfilled\n@dev Requires keeping track of the expiration value emitted from the oracle contract.\nDeletes the request from the `pendingRequests` mapping.\nEmits PluginCancelled event.\n@param _requestId The request ID\n@param _payment The amount of PLI sent for the request\n@param _callbackFunc The callback function specified for the request\n@param _expiration The time of the expiration for the request",
									"id": 450,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "cancelPluginRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3933:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 413,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"name": "_payment",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3957:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"name": "_callbackFunc",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3979:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3979:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"name": "_expiration",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4005:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3927:101:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4044:0:1"
									},
									"scope": 681,
									"src": "3899:405:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "4470:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 455,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "4476:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
															"typeString": "contract PluginRequestInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 457,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "4508:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 456,
															"name": "PluginRequestInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4485:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PluginRequestInterface_$889_$",
																"typeString": "type(contract PluginRequestInterface)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
															"typeString": "contract PluginRequestInterface"
														}
													},
													"src": "4476:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
														"typeString": "contract PluginRequestInterface"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "4476:40:1"
											}
										]
									},
									"documentation": "@notice Sets the stored oracle address\n@param _oracle The address of the oracle contract",
									"id": 462,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setPluginOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4444:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4443:17:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4470:0:1"
									},
									"scope": 681,
									"src": "4419:102:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "4679:40:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 467,
														"name": "pli",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4685:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PliTokenInterface_$856",
															"typeString": "contract PliTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 469,
																"name": "_pli",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "4709:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 468,
															"name": "PliTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "4691:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PliTokenInterface_$856_$",
																"typeString": "type(contract PliTokenInterface)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4691:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PliTokenInterface_$856",
															"typeString": "contract PliTokenInterface"
														}
													},
													"src": "4685:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PliTokenInterface_$856",
														"typeString": "contract PliTokenInterface"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4685:29:1"
											}
										]
									},
									"documentation": "@notice Sets the PLI token address\n@param _pli The address of the PLI token contract",
									"id": 474,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setPluginToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"name": "_pli",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "4656:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4655:14:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4679:0:1"
									},
									"scope": 681,
									"src": "4632:87:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "4880:75:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 479,
																			"name": "PLI_TOKEN_POINTER",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "4918:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 478,
																		"name": "PointerInterface",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "4901:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PointerInterface_$897_$",
																			"typeString": "type(contract PointerInterface)"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4901:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PointerInterface_$897",
																		"typeString": "contract PointerInterface"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 896,
																"src": "4901:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4901:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 477,
														"name": "setPluginToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "4886:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "4886:64:1"
											}
										]
									},
									"documentation": "@notice Sets the Plugin token address for the public\nnetwork as given by the Pointer contract",
									"id": 486,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setPublicPluginToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4868:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4880:0:1"
									},
									"scope": 681,
									"src": "4839:116:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "5148:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 492,
															"name": "pli",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5169:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																"typeString": "contract PliTokenInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																"typeString": "contract PliTokenInterface"
															}
														],
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5161:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 490,
												"id": 494,
												"nodeType": "Return",
												"src": "5154:19:1"
											}
										]
									},
									"documentation": "@notice Retrieves the stored address of the PLI token\n@return The address of the PLI token",
									"id": 496,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "pluginTokenAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5099:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5137:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5136:9:1"
									},
									"scope": 681,
									"src": "5072:106:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "5384:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 502,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5405:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																"typeString": "contract PluginRequestInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																"typeString": "contract PluginRequestInterface"
															}
														],
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5397:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 500,
												"id": 504,
												"nodeType": "Return",
												"src": "5390:22:1"
											}
										]
									},
									"documentation": "@notice Retrieves the stored address of the oracle contract\n@return The address of the oracle contract",
									"id": 506,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "pluginOracleAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5335:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5373:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5372:9:1"
									},
									"scope": 681,
									"src": "5307:110:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5808:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5814:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 518,
														"indexExpression": {
															"argumentTypes": null,
															"id": 517,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5830:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5814:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 519,
														"name": "_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "5844:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5814:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "5814:37:1"
											}
										]
									},
									"documentation": "@notice Allows for a request which was created on another contract to be fulfilled\non this contract\n@param _oracle The address of the oracle contract that will fulfill the request\n@param _requestId The request ID used for the response",
									"id": 523,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 513,
													"name": "_requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 510,
													"src": "5794:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 514,
											"modifierName": {
												"argumentTypes": null,
												"id": 512,
												"name": "notPendingRequest",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 680,
												"src": "5776:17:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes32_$",
													"typeString": "modifier (bytes32)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5776:29:1"
										}
									],
									"name": "addPluginExternalRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5739:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5721:37:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5808:0:1"
									},
									"scope": 681,
									"src": "5688:168:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6181:298:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 530,
														"name": "ens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "6187:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSInterface_$761",
															"typeString": "contract ENSInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 532,
																"name": "_ens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "6206:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 531,
															"name": "ENSInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "6193:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ENSInterface_$761_$",
																"typeString": "type(contract ENSInterface)"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6193:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSInterface_$761",
															"typeString": "contract ENSInterface"
														}
													},
													"src": "6187:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSInterface_$761",
														"typeString": "contract ENSInterface"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "6187:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 536,
														"name": "ensNode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6217:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 537,
														"name": "_node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "6227:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6217:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "6217:15:1"
											},
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"name": "pliSubnode",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6238:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 540,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6238:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 545,
																	"name": "ensNode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "6286:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 546,
																	"name": "ENS_TOKEN_SUBNAME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "6295:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 543,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "6269:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6269:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6269:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "6259:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6259:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6238:76:1"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"name": "resolver",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6320:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSResolver_$1777",
															"typeString": "contract ENSResolver"
														},
														"typeName": {
															"contractScope": null,
															"id": 550,
															"name": "ENSResolver_Plugin",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1777,
															"src": "6320:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENSResolver_$1777",
																"typeString": "contract ENSResolver"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 555,
																	"name": "pliSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "6382:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 553,
																	"name": "ens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6369:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSInterface_$761",
																		"typeString": "contract ENSInterface"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resolver",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 753,
																"src": "6369:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6369:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 552,
														"name": "ENSResolver_Plugin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "6350:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ENSResolver_$1777_$",
															"typeString": "type(contract ENSResolver)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6350:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSResolver_$1777",
														"typeString": "contract ENSResolver"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6320:74:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 562,
																	"name": "pliSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "6429:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 560,
																	"name": "resolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6415:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSResolver_$1777",
																		"typeString": "contract ENSResolver"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1776,
																"src": "6415:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6415:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 559,
														"name": "setPluginToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "6400:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "6400:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 566,
														"name": "updatePluginOracleWithENS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "6447:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6447:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "6447:27:1"
											}
										]
									},
									"documentation": "@notice Sets the stored oracle and PLI token contracts with the addresses resolved by ENS\n@dev Accounts for subnodes having different resolvers\n@param _ens The address of the ENS contract\n@param _node The ENS node hash",
									"id": 570,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "usePluginWithENS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "_ens",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6137:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6151:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6151:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6136:29:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6181:0:1"
									},
									"scope": 681,
									"src": "6111:368:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6722:225:1",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"name": "oracleSubnode",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "6728:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 573,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6728:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 578,
																	"name": "ensNode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "6779:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 579,
																	"name": "ENS_ORACLE_SUBNAME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "6788:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 576,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "6762:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6762:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6762:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 575,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "6752:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6752:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6728:80:1"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"name": "resolver",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "6814:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSResolver_$1777",
															"typeString": "contract ENSResolver"
														},
														"typeName": {
															"contractScope": null,
															"id": 583,
															"name": "ENSResolver_Plugin",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1777,
															"src": "6814:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENSResolver_$1777",
																"typeString": "contract ENSResolver"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 588,
																	"name": "oracleSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "6876:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 586,
																	"name": "ens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6863:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSInterface_$761",
																		"typeString": "contract ENSInterface"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resolver",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 753,
																"src": "6863:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6863:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 585,
														"name": "ENSResolver_Plugin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "6844:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ENSResolver_$1777_$",
															"typeString": "type(contract ENSResolver)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6844:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSResolver_$1777",
														"typeString": "contract ENSResolver"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6814:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 595,
																	"name": "oracleSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "6927:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 593,
																	"name": "resolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "6913:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSResolver_$1777",
																		"typeString": "contract ENSResolver"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1776,
																"src": "6913:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6913:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 592,
														"name": "setPluginOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "6897:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6897:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "6897:45:1"
											}
										]
									},
									"documentation": "@notice Sets the stored oracle contract with the address resolved by ENS\n@dev This may be called on its own as long as `usePluginWithENS` has been called previously",
									"id": 600,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "updatePluginOracleWithENS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6704:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6722:0:1"
									},
									"scope": 681,
									"src": "6670:277:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "7394:422:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 609,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "7437:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PluginRequestInterface_$889",
																		"typeString": "contract PluginRequestInterface"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "oracleRequest",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 877,
																"src": "7437:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,uint256,bytes32,address,bytes4,uint256,uint256,bytes memory) external"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7437:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 612,
															"name": "SENDER_OVERRIDE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "7474:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 613,
															"name": "AMOUNT_OVERRIDE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7582:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 614,
																"name": "_req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "7686:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "7686:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 616,
																"name": "_req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "7701:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "callbackAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "7701:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 618,
																"name": "_req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "7729:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "callbackFunctionId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "7729:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 620,
																"name": "_req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "7760:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "7760:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "ARGS_VERSION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7778:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 623,
																	"name": "_req",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "7798:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																		"typeString": "struct Plugin.Request memory"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "7798:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$904_memory",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 901,
															"src": "7798:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 607,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "7407:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7407:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7407:404:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 606,
												"id": 627,
												"nodeType": "Return",
												"src": "7400:411:1"
											}
										]
									},
									"documentation": "@notice Encodes the request to be sent to the oracle contract\n@dev The Plugin node expects values to be in order for the request to be picked up. Order of types\nwill be validated in the oracle contract.\n@param _req The initialized Plugin Request\n@return The bytes payload for the `transferAndCall` method",
									"id": 629,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "_req",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "7316:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"contractScope": null,
													"id": 601,
													"name": "Plugin.Request",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 22,
													"src": "7316:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7315:28:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "7378:5:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7378:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7377:14:1"
									},
									"scope": 681,
									"src": "7293:523:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "8203:2:1",
										"statements": []
									},
									"documentation": "@notice Ensures that the fulfillment is valid for this contract\n@dev Use if the contract developer prefers methods instead of modifiers for validation\n@param _requestId The request ID for fulfillment",
									"id": 638,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 634,
													"name": "_requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 631,
													"src": "8140:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 635,
											"modifierName": {
												"argumentTypes": null,
												"id": 633,
												"name": "recordPluginFulfillment",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 663,
												"src": "8116:23:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes32_$",
													"typeString": "modifier (bytes32)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8116:35:1"
										}
									],
									"name": "validatePluginCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "8079:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8078:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8203:0:1"
									},
									"scope": 681,
									"src": "8047:158:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "8428:190:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 643,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "8442:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8442:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 645,
																	"name": "pendingRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "8456:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																		"typeString": "mapping(bytes32 => address)"
																	}
																},
																"id": 647,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 646,
																	"name": "_requestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "8472:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8456:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8442:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536f75726365206d75737420626520746865206f7261636c65206f66207468652072657175657374",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8485:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4",
																"typeString": "literal_string \"Source must be the oracle of the request\""
															},
															"value": "Source must be the oracle of the request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4",
																"typeString": "literal_string \"Source must be the oracle of the request\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2282,
														"src": "8434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8434:94:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "8434:94:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8534:34:1",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 652,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "8541:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 654,
														"indexExpression": {
															"argumentTypes": null,
															"id": 653,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "8557:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8541:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "8534:34:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 658,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "8595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 657,
														"name": "PluginFulfilled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "8579:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8579:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "EmitStatement",
												"src": "8574:32:1"
											},
											{
												"id": 661,
												"nodeType": "PlaceholderStatement",
												"src": "8612:1:1"
											}
										]
									},
									"documentation": "@dev Reverts if the sender is not the oracle of the request.\nEmits PluginFulfilled event.\n@param _requestId The request ID for fulfillment",
									"id": 663,
									"name": "recordPluginFulfillment",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "8408:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 639,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8407:20:1"
									},
									"src": "8375:243:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "8787:98:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 668,
																	"name": "pendingRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "8801:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																		"typeString": "mapping(bytes32 => address)"
																	}
																},
																"id": 670,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 669,
																	"name": "_requestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "8817:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8801:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8840:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8832:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8832:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8801:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265717565737420697320616c72656164792070656e64696e67",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8844:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa",
																"typeString": "literal_string \"Request is already pending\""
															},
															"value": "Request is already pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa",
																"typeString": "literal_string \"Request is already pending\""
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2282,
														"src": "8793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8793:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "8793:80:1"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "8879:1:1"
											}
										]
									},
									"documentation": "@dev Reverts if the request is already pending\n@param _requestId The request ID for fulfillment",
									"id": 680,
									"name": "notPendingRequest",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "8767:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 664,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8767:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8766:20:1"
									},
									"src": "8740:145:1",
									"visibility": "internal"
								}
							],
							"scope": 682,
							"src": "459:8428:1"
						}
					],
					"src": "0:8888:1"
				},
				"id": 1
			},
			"@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/ENSInterface.sol",
					"exportedSymbols": {
						"ENSInterface": [
							761
						]
					},
					"id": 762,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 683,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 761,
							"linearizedBaseContracts": [
								761
							],
							"name": "ENSInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 691,
									"name": "NewOwner",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "140:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 684,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"name": "label",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "162:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "185:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "139:60:2"
									},
									"src": "125:75:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 697,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "294:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "316:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "293:37:2"
									},
									"src": "279:52:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 703,
									"name": "NewResolver",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"name": "resolver",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "425:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "402:40:2"
									},
									"src": "385:58:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 709,
									"name": "NewTTL",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "503:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 704,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"name": "ttl",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "525:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 706,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:34:2"
									},
									"src": "490:47:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 718,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setSubnodeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "567:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"name": "label",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "581:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "596:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "566:44:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:0:2"
									},
									"scope": 761,
									"src": "542:78:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 725,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setResolver",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"name": "resolver",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "658:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:32:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:0:2"
									},
									"scope": 761,
									"src": "623:62:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 732,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "706:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:29:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "743:0:2"
									},
									"scope": 761,
									"src": "688:56:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 739,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setTTL",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "763:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"name": "ttl",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "777:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 735,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "777:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "762:26:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:2"
									},
									"scope": 761,
									"src": "747:51:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 746,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "816:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 740,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "815:14:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "853:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "852:9:2"
									},
									"scope": 761,
									"src": "801:61:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 753,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "resolver",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "883:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 747,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:14:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "920:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "919:9:2"
									},
									"scope": 761,
									"src": "865:64:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 760,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "ttl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "945:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 754,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "944:14:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "982:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 757,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "982:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "981:8:2"
									},
									"scope": 761,
									"src": "932:58:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 762,
							"src": "26:967:2"
						}
					],
					"src": "0:994:2"
				},
				"id": 2
			},
			"@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/PliTokenInterface.sol",
					"exportedSymbols": {
						"PliTokenInterface": [
							856
						]
					},
					"id": 857,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "PliTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 772,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "77:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "77:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "92:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "76:32:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "132:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "131:19:3"
									},
									"scope": 856,
									"src": "58:93:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 781,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "171:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "188:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:32:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "221:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "221:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "220:14:3"
									},
									"scope": 856,
									"src": "154:81:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 788,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "257:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "256:15:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "295:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "294:17:3"
									},
									"scope": 856,
									"src": "238:74:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 793,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "decimalPlaces",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "358:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 790,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "358:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "357:21:3"
									},
									"scope": 856,
									"src": "315:64:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 802,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "408:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:37:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "463:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "462:14:3"
									},
									"scope": 856,
									"src": "382:95:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 809,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "506:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "523:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "505:42:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:3"
									},
									"scope": 856,
									"src": "480:77:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 814,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"name": "tokenName",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "599:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "598:18:3"
									},
									"scope": 856,
									"src": "560:57:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 819,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"name": "tokenSymbol",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "661:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "661:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "660:20:3"
									},
									"scope": 856,
									"src": "620:61:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 824,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"name": "totalTokensIssued",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "730:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "729:27:3"
									},
									"scope": 856,
									"src": "684:73:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 833,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "778:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "790:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:27:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "823:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:14:3"
									},
									"scope": 856,
									"src": "760:77:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 844,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferAndCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "865:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "877:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "892:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "892:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "864:39:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "922:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "922:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "921:14:3"
									},
									"scope": 856,
									"src": "840:96:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 855,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "961:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "975:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "987:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "960:41:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1020:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:14:3"
									},
									"scope": 856,
									"src": "939:95:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 857,
							"src": "26:1010:3"
						}
					],
					"src": "0:1037:3"
				},
				"id": 3
			},
			"@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/PluginRequestInterface.sol",
					"exportedSymbols": {
						"PluginRequestInterface": [
							889
						]
					},
					"id": 890,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "PluginRequestInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 877,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "oracleRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "91:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "91:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"name": "payment",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "111:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "132:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"name": "callbackAddress",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "148:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"name": "callbackFunctionId",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "177:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 867,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "248:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "248:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "85:177:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:0:4"
									},
									"scope": 889,
									"src": "63:209:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 888,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "cancelOracleRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "310:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"name": "payment",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "333:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"name": "callbackFunctionId",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "354:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 882,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"name": "expiration",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "385:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "304:103:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:0:4"
									},
									"scope": 889,
									"src": "276:141:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "26:393:4"
						}
					],
					"src": "0:420:4"
				},
				"id": 4
			},
			"@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/interfaces/PointerInterface.sol",
					"exportedSymbols": {
						"PointerInterface": [
							897
						]
					},
					"id": 898,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 897,
							"linearizedBaseContracts": [
								897
							],
							"name": "PointerInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 896,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76:2:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "102:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "101:9:5"
									},
									"scope": 897,
									"src": "57:54:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 898,
							"src": "26:87:5"
						}
					],
					"src": "0:114:5"
				},
				"id": 5
			},
			"@goplugin/contracts/src/v0.4/vendor/Buffer.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/vendor/Buffer.sol",
					"exportedSymbols": {
						"Buffer": [
							1368
						]
					},
					"id": 1369,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 899,
							"literals": [
								"solidity",
								">",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev A library for working with mutable byte buffers in Solidity.\n* Byte buffers are mutable and expandable, and provide a variety of primitives\nfor writing to them. At any time you can fetch a bytes object containing the\ncurrent contents of the buffer. The bytes object should not be stored between\noperations, as it may change due to resizing of the buffer.",
							"fullyImplemented": true,
							"id": 1368,
							"linearizedBaseContracts": [
								1368
							],
							"name": "Buffer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Buffer.buffer",
									"id": 904,
									"members": [
										{
											"constant": false,
											"id": 901,
											"name": "buf",
											"nodeType": "VariableDeclaration",
											"scope": 904,
											"src": "686:9:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 900,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "686:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 903,
											"name": "capacity",
											"nodeType": "VariableDeclaration",
											"scope": 904,
											"src": "701:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 902,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "701:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "buffer",
									"nodeType": "StructDefinition",
									"scope": 1368,
									"src": "666:53:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "1027:310:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 913,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "1037:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1048:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1037:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1054:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1037:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 928,
												"nodeType": "IfStatement",
												"src": "1033:71:6",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "1057:47:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 918,
																	"name": "capacity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1065:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1077:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 920,
																					"name": "capacity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "1083:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3332",
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1094:2:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_32_by_1",
																						"typeString": "int_const 32"
																					},
																					"value": "32"
																				},
																				"src": "1083:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 923,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1082:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1077:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1065:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 926,
															"nodeType": "ExpressionStatement",
															"src": "1065:32:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 929,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1151:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "1151:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 932,
														"name": "capacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1166:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1151:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "1151:23:6"
											},
											{
												"externalReferences": [
													{
														"buf": {
															"declaration": 906,
															"isOffset": false,
															"isSlot": false,
															"src": "1233:3:6",
															"valueSize": 1
														}
													},
													{
														"capacity": {
															"declaration": 908,
															"isOffset": false,
															"isSlot": false,
															"src": "1300:8:6",
															"valueSize": 1
														}
													}
												],
												"id": 935,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let ptr := mload(0x40)\n    mstore(buf, ptr)\n    mstore(ptr, 0)\n    mstore(0x40, add(32, add(ptr, capacity)))\n}",
												"src": "1180:148:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 936,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 906,
													"src": "1329:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 912,
												"id": 937,
												"nodeType": "Return",
												"src": "1322:10:6"
											}
										]
									},
									"documentation": "@dev Initializes a buffer with an initial capacity.\n@param buf The buffer to initialize.\n@param capacity The number of bytes of space to allocate the buffer.\n@return The buffer, for chaining.",
									"id": 939,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "956:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 905,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "956:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"name": "capacity",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "975:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "975:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "955:34:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1012:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 910,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "1012:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1011:15:6"
									},
									"scope": 1368,
									"src": "942:395:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "1638:90:6",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"name": "buf",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "1644:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
															"typeString": "struct Buffer.buffer"
														},
														"typeName": {
															"contractScope": null,
															"id": 946,
															"name": "buffer",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 904,
															"src": "1644:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
																"typeString": "struct Buffer.buffer"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 948,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1644:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 949,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1667:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "1667:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 952,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "1677:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1667:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "1667:11:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 955,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1684:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "1684:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 958,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "1699:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1699:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1684:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "1684:23:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 962,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "1720:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 945,
												"id": 963,
												"nodeType": "Return",
												"src": "1713:10:6"
											}
										]
									},
									"documentation": "@dev Initializes a new buffer from an existing bytes object.\n     Changes to the buffer may mutate the original value.\n@param b The bytes object to initialize the buffer with.\n@return A new buffer.",
									"id": 965,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "fromBytes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1585:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 940,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1585:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1584:16:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1623:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 943,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "1623:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1622:15:6"
									},
									"scope": 1368,
									"src": "1566:162:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "1795:90:6",
										"statements": [
											{
												"assignments": [
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 973,
														"name": "oldbuf",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "1801:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 972,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1801:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 974,
														"name": "buf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1823:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
															"typeString": "struct Buffer.buffer memory"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "buf",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 901,
													"src": "1823:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:29:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 978,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1841:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 979,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 977,
														"name": "init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1836:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 983,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1868:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 984,
															"name": "oldbuf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "1873:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 982,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1120,
															1140
														],
														"referencedDeclaration": 1140,
														"src": "1861:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "1861:19:6"
											}
										]
									},
									"documentation": null,
									"id": 988,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "resize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1748:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 966,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "1748:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"name": "capacity",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1767:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1747:34:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:0:6"
									},
									"scope": 1368,
									"src": "1732:153:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "1945:58:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 997,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "1955:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 998,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "1959:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "1951:34:6",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "1962:23:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1000,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "1977:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 996,
															"id": 1001,
															"nodeType": "Return",
															"src": "1970:8:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1004,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "1997:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 996,
												"id": 1005,
												"nodeType": "Return",
												"src": "1990:8:6"
											}
										]
									},
									"documentation": null,
									"id": 1007,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1902:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1902:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1910:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1910:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1901:16:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1939:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1939:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1938:6:6"
									},
									"scope": 1368,
									"src": "1889:114:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2214:97:6",
										"statements": [
											{
												"externalReferences": [
													{
														"buf": {
															"declaration": 1009,
															"isOffset": false,
															"isSlot": false,
															"src": "2257:3:6",
															"valueSize": 1
														}
													}
												],
												"id": 1014,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let bufptr := mload(buf)\n    mstore(bufptr, 0)\n}",
												"src": "2220:82:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1015,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1009,
													"src": "2303:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1016,
												"nodeType": "Return",
												"src": "2296:10:6"
											}
										]
									},
									"documentation": "@dev Sets buffer length to 0.\n@param buf The buffer to truncate.\n@return The original buffer, for chaining..",
									"id": 1018,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "truncate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2157:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1008,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2157:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2156:19:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2199:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1011,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2199:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2198:15:6"
									},
									"scope": 1368,
									"src": "2139:172:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "2761:1030:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1032,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "2775:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1033,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "2782:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2782:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2281,
														"src": "2767:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2767:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "2767:27:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1038,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2805:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1039,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "2811:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2805:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1041,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2817:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "2817:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2805:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1058,
												"nodeType": "IfStatement",
												"src": "2801:90:6",
												"trueBody": {
													"id": 1057,
													"nodeType": "Block",
													"src": "2831:60:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1045,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "2846:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1047,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1020,
																						"src": "2855:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																							"typeString": "struct Buffer.buffer memory"
																						}
																					},
																					"id": 1048,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "capacity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 903,
																					"src": "2855:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1051,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1049,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1026,
																						"src": "2869:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1050,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1022,
																						"src": "2875:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2869:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1046,
																				"name": "max",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "2851:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2851:28:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2882:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2851:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1044,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "2839:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2839:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1056,
															"nodeType": "ExpressionStatement",
															"src": "2839:45:6"
														}
													]
												}
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"name": "dest",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "2897:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1059,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2897:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2897:9:6"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"name": "src",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "2912:8:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2912:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2912:8:6"
											},
											{
												"externalReferences": [
													{
														"buf": {
															"declaration": 1020,
															"isOffset": false,
															"isSlot": false,
															"src": "3006:3:6",
															"valueSize": 1
														}
													},
													{
														"dest": {
															"declaration": 1060,
															"isOffset": false,
															"isSlot": false,
															"src": "3164:4:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1026,
															"isOffset": false,
															"isSlot": false,
															"src": "3266:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1022,
															"isOffset": false,
															"isSlot": false,
															"src": "3271:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1022,
															"isOffset": false,
															"isSlot": false,
															"src": "3193:3:6",
															"valueSize": 1
														}
													},
													{
														"src": {
															"declaration": 1063,
															"isOffset": false,
															"isSlot": false,
															"src": "3339:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1026,
															"isOffset": false,
															"isSlot": false,
															"src": "3314:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1022,
															"isOffset": false,
															"isSlot": false,
															"src": "3319:3:6",
															"valueSize": 1
														}
													},
													{
														"data": {
															"declaration": 1024,
															"isOffset": false,
															"isSlot": false,
															"src": "3350:4:6",
															"valueSize": 1
														}
													}
												],
												"id": 1065,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let bufptr := mload(buf)\n    let buflen := mload(bufptr)\n    dest := add(add(bufptr, 32), off)\n    if gt(add(len, off), buflen)\n    {\n        mstore(bufptr, add(len, off))\n    }\n    src := add(data, 32)\n}",
												"src": "2926:494:6"
											},
											{
												"body": {
													"id": 1082,
													"nodeType": "Block",
													"src": "3446:100:6",
													"statements": [
														{
															"externalReferences": [
																{
																	"src": {
																		"declaration": 1063,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3492:3:6",
																		"valueSize": 1
																	}
																},
																{
																	"dest": {
																		"declaration": 1060,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3480:4:6",
																		"valueSize": 1
																	}
																}
															],
															"id": 1073,
															"nodeType": "InlineAssembly",
															"operations": "{\n    mstore(dest, mload(src))\n}",
															"src": "3454:62:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1074,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "3512:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3520:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3512:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1077,
															"nodeType": "ExpressionStatement",
															"src": "3512:10:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1078,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "3530:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3537:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3530:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "3530:9:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1066,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3424:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3431:2:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3424:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1069,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "3435:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3442:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "3435:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1072,
													"nodeType": "ExpressionStatement",
													"src": "3435:9:6"
												},
												"nodeType": "ForStatement",
												"src": "3417:129:6"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "3580:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3580:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3592:3:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3600:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1088,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "3605:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3600:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1090,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3599:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3592:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3612:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3592:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3580:33:6"
											},
											{
												"externalReferences": [
													{
														"src": {
															"declaration": 1063,
															"isOffset": false,
															"isSlot": false,
															"src": "3661:3:6",
															"valueSize": 1
														}
													},
													{
														"mask": {
															"declaration": 1085,
															"isOffset": false,
															"isSlot": false,
															"src": "3671:4:6",
															"valueSize": 1
														}
													},
													{
														"dest": {
															"declaration": 1060,
															"isOffset": false,
															"isSlot": false,
															"src": "3710:4:6",
															"valueSize": 1
														}
													},
													{
														"mask": {
															"declaration": 1085,
															"isOffset": false,
															"isSlot": false,
															"src": "3717:4:6",
															"valueSize": 1
														}
													},
													{
														"dest": {
															"declaration": 1060,
															"isOffset": false,
															"isSlot": false,
															"src": "3736:4:6",
															"valueSize": 1
														}
													}
												],
												"id": 1095,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let srcpart := and(mload(src), not(mask))\n    let destpart := and(mload(dest), mask)\n    mstore(dest, or(destpart, srcpart))\n}",
												"src": "3619:163:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1096,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "3783:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1097,
												"nodeType": "Return",
												"src": "3776:10:6"
											}
										]
									},
									"documentation": "@dev Writes a byte string to a buffer. Resizes if doing so would exceed\n     the capacity of the buffer.\n@param buf The buffer to append to.\n@param off The start offset to write to.\n@param data The data to append.\n@param len The number of bytes to copy.\n@return The original buffer, for chaining.",
									"id": 1099,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "write",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2666:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1019,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2666:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"name": "off",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2685:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2685:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2695:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2695:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2714:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2714:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2665:58:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2746:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1028,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2746:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2745:15:6"
									},
									"scope": 1368,
									"src": "2651:1140:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "4189:55:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1111,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4208:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "4213:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 901,
																"src": "4213:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4213:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1115,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "4229:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1116,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "4235:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1099,
															1242
														],
														"referencedDeclaration": 1099,
														"src": "4202:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4202:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1109,
												"id": 1118,
												"nodeType": "Return",
												"src": "4195:44:6"
											}
										]
									},
									"documentation": "@dev Appends a byte string to a buffer. Resizes if doing so would exceed\n     the capacity of the buffer.\n@param buf The buffer to append to.\n@param data The data to append.\n@param len The number of bytes to copy.\n@return The original buffer, for chaining.",
									"id": 1120,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "append",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "4103:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1100,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "4103:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "4122:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4122:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "4141:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4141:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4102:48:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "4174:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1107,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "4174:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4173:15:6"
									},
									"scope": 1368,
									"src": "4087:157:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "4588:63:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1130,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "4607:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1131,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "4612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 901,
																"src": "4612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4612:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1134,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "4628:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1135,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "4634:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4634:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1099,
															1242
														],
														"referencedDeclaration": 1099,
														"src": "4601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4601:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1138,
												"nodeType": "Return",
												"src": "4594:52:6"
											}
										]
									},
									"documentation": "@dev Appends a byte string to a buffer. Resizes if doing so would exceed\n     the capacity of the buffer.\n@param buf The buffer to append to.\n@param data The data to append.\n@return The original buffer, for chaining.",
									"id": 1140,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "append",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "4512:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1121,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "4512:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "4531:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4531:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4511:38:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "4573:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1126,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "4573:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4572:15:6"
									},
									"scope": 1368,
									"src": "4496:155:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "5043:521:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5053:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1152,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "5060:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "5060:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5053:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "5049:69:6",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "5074:44:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1156,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "5089:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1157,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1142,
																				"src": "5094:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "capacity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 903,
																			"src": "5094:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5109:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "5094:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1155,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "5082:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5082:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "ExpressionStatement",
															"src": "5082:29:6"
														}
													]
												}
											},
											{
												"externalReferences": [
													{
														"buf": {
															"declaration": 1142,
															"isOffset": false,
															"isSlot": false,
															"src": "5204:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1144,
															"isOffset": false,
															"isSlot": false,
															"src": "5477:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1144,
															"isOffset": false,
															"isSlot": false,
															"src": "5381:3:6",
															"valueSize": 1
														}
													},
													{
														"data": {
															"declaration": 1146,
															"isOffset": false,
															"isSlot": false,
															"src": "5411:4:6",
															"valueSize": 1
														}
													}
												],
												"id": 1165,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let bufptr := mload(buf)\n    let buflen := mload(bufptr)\n    let dest := add(add(bufptr, off), 32)\n    mstore8(dest, data)\n    if eq(off, buflen)\n    {\n        mstore(bufptr, add(buflen, 1))\n    }\n}",
												"src": "5124:431:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1166,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1142,
													"src": "5556:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1167,
												"nodeType": "Return",
												"src": "5549:10:6"
											}
										]
									},
									"documentation": "@dev Writes a byte to the buffer. Resizes if doing so would exceed the\n     capacity of the buffer.\n@param buf The buffer to append to.\n@param off The offset to write the byte at.\n@param data The data to append.\n@return The original buffer, for chaining.",
									"id": 1169,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "writeUint8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4965:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1141,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "4965:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"name": "off",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4984:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4984:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4994:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1145,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4964:41:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "5028:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1148,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "5028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5027:15:6"
									},
									"scope": 1368,
									"src": "4945:619:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "5900:55:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1179,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "5924:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1180,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "5929:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 901,
																"src": "5929:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5929:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1183,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5945:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1178,
														"name": "writeUint8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "5913:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,uint8) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5913:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1185,
												"nodeType": "Return",
												"src": "5906:44:6"
											}
										]
									},
									"documentation": "@dev Appends a byte to the buffer. Resizes if doing so would exceed the\n     capacity of the buffer.\n@param buf The buffer to append to.\n@param data The data to append.\n@return The original buffer, for chaining.",
									"id": 1187,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "appendUint8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1170,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "5832:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5851:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5831:31:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5885:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1175,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "5885:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5884:15:6"
									},
									"scope": 1368,
									"src": "5811:144:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "6412:599:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1200,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6422:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1201,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "6428:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6422:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1203,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "6434:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "6434:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6422:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "6418:73:6",
												"trueBody": {
													"id": 1216,
													"nodeType": "Block",
													"src": "6448:43:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1207,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "6463:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1210,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1208,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1195,
																						"src": "6469:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1209,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1191,
																						"src": "6475:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6469:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1211,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6468:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6482:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "6468:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1206,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "6456:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6456:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "6456:28:6"
														}
													]
												}
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 1242,
														"src": "6497:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6497:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6509:3:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1221,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6516:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6509:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6522:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6509:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6497:26:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1226,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "6553:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "6560:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "38",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6569:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3332",
																					"id": 1229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6574:2:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_32_by_1",
																						"typeString": "int_const 32"
																					},
																					"value": "32"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1230,
																					"name": "len",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1195,
																					"src": "6579:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6574:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1232,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6573:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6569:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6568:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6560:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6553:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "6553:31:6"
											},
											{
												"externalReferences": [
													{
														"buf": {
															"declaration": 1189,
															"isOffset": false,
															"isSlot": false,
															"src": "6670:3:6",
															"valueSize": 1
														}
													},
													{
														"mask": {
															"declaration": 1219,
															"isOffset": false,
															"isSlot": false,
															"src": "6833:4:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1191,
															"isOffset": false,
															"isSlot": false,
															"src": "6779:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1195,
															"isOffset": false,
															"isSlot": false,
															"src": "6785:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1191,
															"isOffset": false,
															"isSlot": false,
															"src": "6912:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1195,
															"isOffset": false,
															"isSlot": false,
															"src": "6917:3:6",
															"valueSize": 1
														}
													},
													{
														"data": {
															"declaration": 1193,
															"isOffset": false,
															"isSlot": false,
															"src": "6841:4:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1191,
															"isOffset": false,
															"isSlot": false,
															"src": "6967:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1195,
															"isOffset": false,
															"isSlot": false,
															"src": "6972:3:6",
															"valueSize": 1
														}
													}
												],
												"id": 1238,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let bufptr := mload(buf)\n    let dest := add(add(bufptr, off), len)\n    mstore(dest, or(and(mload(dest), not(mask)), data))\n    if gt(add(off, len), mload(bufptr))\n    {\n        mstore(bufptr, add(off, len))\n    }\n}",
												"src": "6590:412:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1239,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1189,
													"src": "7003:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1240,
												"nodeType": "Return",
												"src": "6996:10:6"
											}
										]
									},
									"documentation": "@dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n     exceed the capacity of the buffer.\n@param buf The buffer to append to.\n@param off The offset to write at.\n@param data The data to append.\n@param len The number of bytes to write (left-aligned).\n@return The original buffer, for chaining.",
									"id": 1242,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "write",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "6323:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1188,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "6323:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"name": "off",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "6342:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6342:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "6352:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "6366:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6366:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6322:53:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "6397:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1197,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "6397:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6396:15:6"
									},
									"scope": 1368,
									"src": "6308:703:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "7402:52:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1254,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "7421:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1255,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "7426:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1257,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "7439:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7431:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": "bytes32"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7431:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "3230",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7446:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 1253,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1099,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "7415:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7415:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1252,
												"id": 1261,
												"nodeType": "Return",
												"src": "7408:41:6"
											}
										]
									},
									"documentation": "@dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n     capacity of the buffer.\n@param buf The buffer to append to.\n@param off The offset to write at.\n@param data The data to append.\n@return The original buffer, for chaining.",
									"id": 1263,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "writeBytes20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "7321:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1243,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "7321:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"name": "off",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "7340:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7340:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "7350:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7320:43:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "7387:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1250,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "7387:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7386:15:6"
									},
									"scope": 1368,
									"src": "7299:155:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "7799:63:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1273,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "7818:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1274,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "7823:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 901,
																"src": "7823:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7823:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1278,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "7847:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7839:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": "bytes32"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7839:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "3230",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7854:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 1272,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1099,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "7812:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7812:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1282,
												"nodeType": "Return",
												"src": "7805:52:6"
											}
										]
									},
									"documentation": "@dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n     the capacity of the buffer.\n@param buf The buffer to append to.\n@param data The data to append.\n@return The original buffer, for chhaining.",
									"id": 1284,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "appendBytes20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "7728:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1264,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "7728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "7747:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7727:33:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "7784:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1269,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "7784:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7783:15:6"
									},
									"scope": 1368,
									"src": "7705:157:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "8206:54:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1294,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "8225:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1295,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "8230:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 901,
																"src": "8230:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8230:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "8246:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8252:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1293,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1099,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "8219:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8219:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1292,
												"id": 1301,
												"nodeType": "Return",
												"src": "8212:43:6"
											}
										]
									},
									"documentation": "@dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n     the capacity of the buffer.\n@param buf The buffer to append to.\n@param data The data to append.\n@return The original buffer, for chaining.",
									"id": 1303,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "appendBytes32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "8135:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1285,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "8135:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "8154:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8134:33:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "8191:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1290,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "8191:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8190:15:6"
									},
									"scope": 1368,
									"src": "8112:148:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "8714:538:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1316,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "8724:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1317,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "8730:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8724:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1319,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "8736:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "8736:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8724:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "8720:73:6",
												"trueBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "8750:43:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1323,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "8765:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1324,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1311,
																						"src": "8771:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1325,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "8777:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8771:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1327,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8770:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8784:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8770:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1322,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "8758:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8758:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1331,
															"nodeType": "ExpressionStatement",
															"src": "8758:28:6"
														}
													]
												}
											},
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "8799:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1334,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8799:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8811:3:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1337,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "8818:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8811:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8824:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8811:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8799:26:6"
											},
											{
												"externalReferences": [
													{
														"buf": {
															"declaration": 1305,
															"isOffset": false,
															"isSlot": false,
															"src": "8911:3:6",
															"valueSize": 1
														}
													},
													{
														"mask": {
															"declaration": 1335,
															"isOffset": false,
															"isSlot": false,
															"src": "9074:4:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1307,
															"isOffset": false,
															"isSlot": false,
															"src": "9020:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1311,
															"isOffset": false,
															"isSlot": false,
															"src": "9026:3:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1307,
															"isOffset": false,
															"isSlot": false,
															"src": "9153:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1311,
															"isOffset": false,
															"isSlot": false,
															"src": "9158:3:6",
															"valueSize": 1
														}
													},
													{
														"data": {
															"declaration": 1309,
															"isOffset": false,
															"isSlot": false,
															"src": "9082:4:6",
															"valueSize": 1
														}
													},
													{
														"off": {
															"declaration": 1307,
															"isOffset": false,
															"isSlot": false,
															"src": "9208:3:6",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 1311,
															"isOffset": false,
															"isSlot": false,
															"src": "9213:3:6",
															"valueSize": 1
														}
													}
												],
												"id": 1342,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let bufptr := mload(buf)\n    let dest := add(add(bufptr, off), len)\n    mstore(dest, or(and(mload(dest), not(mask)), data))\n    if gt(add(off, len), mload(bufptr))\n    {\n        mstore(bufptr, add(off, len))\n    }\n}",
												"src": "8831:412:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1343,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1305,
													"src": "9244:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1344,
												"nodeType": "Return",
												"src": "9237:10:6"
											}
										]
									},
									"documentation": "@dev Writes an integer to the buffer. Resizes if doing so would exceed\n     the capacity of the buffer.\n@param buf The buffer to append to.\n@param off The offset to write at.\n@param data The data to append.\n@param len The number of bytes to write (right-aligned).\n@return The original buffer, for chaining.",
									"id": 1346,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "writeInt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "8628:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1304,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "8628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"name": "off",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "8647:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8647:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "8657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8657:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "8668:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8668:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8627:50:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "8699:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1313,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "8699:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8698:15:6"
									},
									"scope": 1368,
									"src": "8610:642:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "9593:58:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1358,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "9615:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1359,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "9620:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 901,
																"src": "9620:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9620:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1362,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "9636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "9642:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1357,
														"name": "writeInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "9606:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,uint256,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9606:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1365,
												"nodeType": "Return",
												"src": "9599:47:6"
											}
										]
									},
									"documentation": "@dev Appends a byte to the end of the buffer. Resizes if doing so would\nexceed the capacity of the buffer.\n@param buf The buffer to append to.\n@param data The data to append.\n@return The original buffer.",
									"id": 1367,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "appendInt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "9516:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1347,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "9516:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "9535:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9535:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "9546:8:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9546:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9515:40:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "9578:6:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1354,
													"name": "buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "9578:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9577:15:6"
									},
									"scope": 1368,
									"src": "9497:154:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1369,
							"src": "403:9250:6"
						}
					],
					"src": "0:9654:6"
				},
				"id": 6
			},
			"@goplugin/contracts/src/v0.4/vendor/CBOR.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/vendor/CBOR.sol",
					"exportedSymbols": {
						"CBOR": [
							1767
						]
					},
					"id": 1768,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".19",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:34:7"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/vendor/Buffer.sol",
							"file": "./Buffer.sol",
							"id": 1372,
							"nodeType": "ImportDirective",
							"scope": 1768,
							"sourceUnit": 1369,
							"src": "68:54:7",
							"symbolAliases": [
								{
									"foreign": 1371,
									"local": "BufferPlugin"
								}
							],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1767,
							"linearizedBaseContracts": [
								1767
							],
							"name": "CBOR",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1375,
									"libraryName": {
										"contractScope": null,
										"id": 1373,
										"name": "BufferPlugin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1368,
										"src": "149:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Buffer_$1368",
											"typeString": "library Buffer"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "143:43:7",
									"typeName": {
										"contractScope": null,
										"id": 1374,
										"name": "BufferPlugin.buffer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 904,
										"src": "166:19:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
											"typeString": "struct Buffer.buffer"
										}
									}
								},
								{
									"constant": true,
									"id": 1378,
									"name": "MAJOR_TYPE_INT",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "192:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1376,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "192:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "232:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1381,
									"name": "MAJOR_TYPE_NEGATIVE_INT",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "239:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1379,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "239:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1384,
									"name": "MAJOR_TYPE_BYTES",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "295:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1382,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "295:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "337:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1387,
									"name": "MAJOR_TYPE_STRING",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "344:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1385,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "344:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 1386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "387:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1390,
									"name": "MAJOR_TYPE_ARRAY",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "394:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1388,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "394:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 1389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "436:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1393,
									"name": "MAJOR_TYPE_MAP",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "443:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1391,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "443:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35",
										"id": 1392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "483:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1396,
									"name": "MAJOR_TYPE_TAG",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "490:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1394,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "490:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "36",
										"id": 1395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1399,
									"name": "MAJOR_TYPE_CONTENT_FREE",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "537:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1397,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "537:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 1398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "586:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1402,
									"name": "TAG_TYPE_BIGNUM",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "594:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1400,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "594:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "635:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1405,
									"name": "TAG_TYPE_NEGATIVE_BIGNUM",
									"nodeType": "VariableDeclaration",
									"scope": 1767,
									"src": "642:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1403,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "642:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 1404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "692:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "790:631:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1414,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "803:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3233",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "812:2:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_23_by_1",
															"typeString": "int_const 23"
														},
														"value": "23"
													},
													"src": "803:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1431,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "894:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784646",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "903:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_255_by_1",
																"typeString": "int_const 255"
															},
															"value": "0xFF"
														},
														"src": "894:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1455,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "1021:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307846464646",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1030:6:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65535_by_1",
																	"typeString": "int_const 65535"
																},
																"value": "0xFFFF"
															},
															"src": "1021:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "1150:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30784646464646464646",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1159:10:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4294967295_by_1",
																		"typeString": "int_const 4294967295"
																	},
																	"value": "0xFFFFFFFF"
																},
																"src": "1150:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1503,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "1283:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "307846464646464646464646464646464646",
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1292:18:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xFFFFFFFFFFFFFFFF"
																	},
																	"src": "1283:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 1527,
																"nodeType": "IfStatement",
																"src": "1280:135:7",
																"trueBody": {
																	"id": 1526,
																	"nodeType": "Block",
																	"src": "1312:103:7",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1515,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"components": [
																										{
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											},
																											"id": 1512,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"id": 1510,
																												"name": "major",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1409,
																												"src": "1349:5:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "<<",
																											"rightExpression": {
																												"argumentTypes": null,
																												"hexValue": "35",
																												"id": 1511,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1358:1:7",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_5_by_1",
																													"typeString": "int_const 5"
																												},
																												"value": "5"
																											},
																											"src": "1349:10:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										}
																									],
																									"id": 1513,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "1348:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "|",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "3237",
																									"id": 1514,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1363:2:7",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_27_by_1",
																										"typeString": "int_const 27"
																									},
																									"value": "27"
																								},
																								"src": "1348:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 1509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1342:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint8_$",
																								"typeString": "type(uint8)"
																							},
																							"typeName": "uint8"
																						},
																						"id": 1516,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1342:24:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1506,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1407,
																						"src": "1326:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																							"typeString": "struct Buffer.buffer memory"
																						}
																					},
																					"id": 1508,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "appendUint8",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1187,
																					"src": "1326:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																						"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
																					}
																				},
																				"id": 1517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1326:41:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			"id": 1518,
																			"nodeType": "ExpressionStatement",
																			"src": "1326:41:7"
																		},
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1522,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1411,
																						"src": "1395:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"hexValue": "38",
																						"id": 1523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1402:1:7",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1519,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1407,
																						"src": "1381:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																							"typeString": "struct Buffer.buffer memory"
																						}
																					},
																					"id": 1521,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "appendInt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1367,
																					"src": "1381:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																						"typeString": "function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"
																					}
																				},
																				"id": 1524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1381:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			"id": 1525,
																			"nodeType": "ExpressionStatement",
																			"src": "1381:23:7"
																		}
																	]
																}
															},
															"id": 1528,
															"nodeType": "IfStatement",
															"src": "1147:268:7",
															"trueBody": {
																"id": 1502,
																"nodeType": "Block",
																"src": "1171:103:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1491,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 1488,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"id": 1486,
																											"name": "major",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1409,
																											"src": "1208:5:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "35",
																											"id": 1487,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1217:1:7",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_5_by_1",
																												"typeString": "int_const 5"
																											},
																											"value": "5"
																										},
																										"src": "1208:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"id": 1489,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1207:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "|",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "3236",
																								"id": 1490,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1222:2:7",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_26_by_1",
																									"typeString": "int_const 26"
																								},
																								"value": "26"
																							},
																							"src": "1207:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"id": 1485,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1201:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": "uint8"
																					},
																					"id": 1492,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1201:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1482,
																					"name": "buf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1407,
																					"src": "1185:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																						"typeString": "struct Buffer.buffer memory"
																					}
																				},
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "appendUint8",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1187,
																				"src": "1185:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																					"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
																				}
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1185:41:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		"id": 1494,
																		"nodeType": "ExpressionStatement",
																		"src": "1185:41:7"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1498,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1411,
																					"src": "1254:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "34",
																					"id": 1499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1261:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1495,
																					"name": "buf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1407,
																					"src": "1240:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																						"typeString": "struct Buffer.buffer memory"
																					}
																				},
																				"id": 1497,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "appendInt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1367,
																				"src": "1240:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																					"typeString": "function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"
																				}
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1240:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		"id": 1501,
																		"nodeType": "ExpressionStatement",
																		"src": "1240:23:7"
																	}
																]
															}
														},
														"id": 1529,
														"nodeType": "IfStatement",
														"src": "1018:397:7",
														"trueBody": {
															"id": 1478,
															"nodeType": "Block",
															"src": "1038:103:7",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 1467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									},
																									"id": 1464,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 1462,
																										"name": "major",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1409,
																										"src": "1075:5:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "<<",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "35",
																										"id": 1463,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1084:1:7",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "1075:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								}
																							],
																							"id": 1465,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "1074:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "|",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3235",
																							"id": 1466,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1089:2:7",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_25_by_1",
																								"typeString": "int_const 25"
																							},
																							"value": "25"
																						},
																						"src": "1074:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 1461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1068:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": "uint8"
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1068:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1458,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "1052:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "appendUint8",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1187,
																			"src": "1052:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																				"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
																			}
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1052:41:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 1470,
																	"nodeType": "ExpressionStatement",
																	"src": "1052:41:7"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1474,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "1121:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 1475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1128:1:7",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1471,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "1107:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "appendInt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1367,
																			"src": "1107:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																				"typeString": "function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"
																			}
																		},
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1107:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 1477,
																	"nodeType": "ExpressionStatement",
																	"src": "1107:23:7"
																}
															]
														}
													},
													"id": 1530,
													"nodeType": "IfStatement",
													"src": "891:524:7",
													"trueBody": {
														"id": 1454,
														"nodeType": "Block",
														"src": "909:103:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1443,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1440,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 1438,
																									"name": "major",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1409,
																									"src": "946:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "35",
																									"id": 1439,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "955:1:7",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "946:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1441,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "945:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3234",
																						"id": 1442,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "960:2:7",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_24_by_1",
																							"typeString": "int_const 24"
																						},
																						"value": "24"
																					},
																					"src": "945:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "939:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": "uint8"
																			},
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "939:24:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1434,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "923:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "appendUint8",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1187,
																		"src": "923:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																			"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "923:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1446,
																"nodeType": "ExpressionStatement",
																"src": "923:41:7"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1450,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "992:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "999:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1447,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "978:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "appendInt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1367,
																		"src": "978:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																			"typeString": "function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "978:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 1453,
																"nodeType": "ExpressionStatement",
																"src": "978:23:7"
															}
														]
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "800:615:7",
												"trueBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "816:69:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1423,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 1421,
																								"name": "major",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1409,
																								"src": "853:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "35",
																								"id": 1422,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "862:1:7",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "853:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 1424,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "852:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1425,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1411,
																					"src": "867:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "852:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "846:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": "uint8"
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "846:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1417,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "830:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "appendUint8",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1187,
																	"src": "830:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "830:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "830:44:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1533,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeType",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "720:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1406,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "720:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"name": "major",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "752:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "752:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "765:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:57:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:0:7"
									},
									"scope": 1767,
									"src": "700:721:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "1521:58:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1544,
																					"name": "major",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1537,
																					"src": "1554:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "35",
																					"id": 1545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1563:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "1554:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1553:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3331",
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1568:2:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "1553:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1547:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": "uint8"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1547:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1540,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "1531:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "appendUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "1531:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "1531:41:7"
											}
										]
									},
									"documentation": null,
									"id": 1554,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeIndefiniteLengthType",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1463:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1534,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "1463:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"name": "major",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1495:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1536,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1462:45:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1521:0:7"
									},
									"scope": 1767,
									"src": "1427:152:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "1663:55:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1562,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "1684:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1563,
															"name": "MAJOR_TYPE_INT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "1689:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1564,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "1705:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1561,
														"name": "encodeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "1673:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,uint8,uint256) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "1673:38:7"
											}
										]
									},
									"documentation": null,
									"id": 1568,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeUInt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1605:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1555,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "1605:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1637:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1637:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1604:44:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1663:0:7"
									},
									"scope": 1767,
									"src": "1585:133:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "1800:369:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "1813:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1821:20:7",
														"subExpression": {
															"argumentTypes": null,
															"hexValue": "30783130303030303030303030303030303030",
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1822:19:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18446744073709551616_by_1",
																"typeString": "int_const 18446744073709551616"
															},
															"value": "0x10000000000000000"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_-18446744073709551616_by_1",
															"typeString": "int_const -18446744073709551616"
														}
													},
													"src": "1813:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1585,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "1907:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "307846464646464646464646464646464646",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:18:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18446744073709551615_by_1",
																"typeString": "int_const 18446744073709551615"
															},
															"value": "0xFFFFFFFFFFFFFFFF"
														},
														"src": "1907:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1594,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "1993:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2002:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1993:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1617,
															"nodeType": "Block",
															"src": "2080:83:7",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1607,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1570,
																				"src": "2105:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1608,
																				"name": "MAJOR_TYPE_NEGATIVE_INT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "2110:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1613,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "-",
																							"prefix": true,
																							"src": "2140:2:7",
																							"subExpression": {
																								"argumentTypes": null,
																								"hexValue": "31",
																								"id": 1610,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2141:1:7",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_-1_by_1",
																								"typeString": "int_const -1"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1612,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1572,
																							"src": "2145:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "2140:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2135:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 1614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2135:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1606,
																			"name": "encodeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "2094:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
																				"typeString": "function (struct Buffer.buffer memory,uint8,uint256) pure"
																			}
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2094:58:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1616,
																	"nodeType": "ExpressionStatement",
																	"src": "2094:58:7"
																}
															]
														},
														"id": 1618,
														"nodeType": "IfStatement",
														"src": "1990:173:7",
														"trueBody": {
															"id": 1605,
															"nodeType": "Block",
															"src": "2005:69:7",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1598,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1570,
																				"src": "2030:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1599,
																				"name": "MAJOR_TYPE_INT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1378,
																				"src": "2035:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1601,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "2056:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2051:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 1602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2051:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1597,
																			"name": "encodeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "2019:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
																				"typeString": "function (struct Buffer.buffer memory,uint8,uint256) pure"
																			}
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2019:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1604,
																	"nodeType": "ExpressionStatement",
																	"src": "2019:44:7"
																}
															]
														}
													},
													"id": 1619,
													"nodeType": "IfStatement",
													"src": "1904:259:7",
													"trueBody": {
														"id": 1593,
														"nodeType": "Block",
														"src": "1935:49:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1589,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "1962:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "1967:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1588,
																		"name": "encodeBigNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "1949:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_int256_$returns$__$",
																			"typeString": "function (struct Buffer.buffer memory,int256) pure"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1949:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1592,
																"nodeType": "ExpressionStatement",
																"src": "1949:24:7"
															}
														]
													}
												},
												"id": 1620,
												"nodeType": "IfStatement",
												"src": "1810:353:7",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "1843:55:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1580,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "1876:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1581,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "1881:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1579,
																	"name": "encodeSignedBigNum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "1857:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_int256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,int256) pure"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1857:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1583,
															"nodeType": "ExpressionStatement",
															"src": "1857:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1622,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeInt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "1743:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1569,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "1743:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "1775:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1571,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1775:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1742:43:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:0:7"
									},
									"scope": 1767,
									"src": "1724:445:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "2262:91:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1630,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "2283:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1631,
															"name": "MAJOR_TYPE_BYTES",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "2288:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1632,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "2306:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2306:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1629,
														"name": "encodeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "2272:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,uint8,uint256) pure"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2272:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "2272:47:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1639,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "2340:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1636,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "2329:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1140,
														"src": "2329:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2329:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "2329:17:7"
											}
										]
									},
									"documentation": null,
									"id": 1643,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeBytes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "2196:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1623,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2196:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "2228:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2228:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2195:52:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:0:7"
									},
									"scope": 1767,
									"src": "2175:178:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "2438:127:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1654,
																					"name": "MAJOR_TYPE_TAG",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1396,
																					"src": "2469:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "35",
																					"id": 1655,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2487:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2469:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1657,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2468:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1658,
																		"name": "TAG_TYPE_BIGNUM",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "2492:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2468:39:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2462:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": "uint8"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2462:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1650,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2446:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "appendUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "2446:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "2446:63:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1664,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2529:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1647,
																			"src": "2550:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2545:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2545:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1665,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "2534:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2534:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2534:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1663,
														"name": "encodeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "2517:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "2517:41:7"
											}
										]
									},
									"documentation": null,
									"id": 1674,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeBigNum",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "2381:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1644,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2381:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "2413:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1646,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2413:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2380:43:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:0:7"
									},
									"scope": 1767,
									"src": "2359:206:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "2656:141:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1685,
																					"name": "MAJOR_TYPE_TAG",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1396,
																					"src": "2687:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "35",
																					"id": 1686,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2705:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2687:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1688,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2686:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1689,
																		"name": "TAG_TYPE_NEGATIVE_BIGNUM",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "2710:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2686:48:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2680:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": "uint8"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2680:55:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1681,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "2664:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "appendUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "2664:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:72:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "2664:72:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1695,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "2756:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "2777:2:7",
																				"subExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1699,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2778:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_-1_by_1",
																					"typeString": "int_const -1"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1701,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1678,
																				"src": "2782:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2777:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2772:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2772:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1696,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "2761:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2761:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2761:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1694,
														"name": "encodeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "2744:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "2744:46:7"
											}
										]
									},
									"documentation": null,
									"id": 1708,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeSignedBigNum",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "2599:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1675,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2599:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"name": "input",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "2631:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1677,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2631:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2598:43:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:0:7"
									},
									"scope": 1767,
									"src": "2571:226:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "2892:106:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1716,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "2913:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1717,
															"name": "MAJOR_TYPE_STRING",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "2918:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2943:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2937:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": "bytes"
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2937:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory",
																	"typeString": "bytes memory"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2937:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1715,
														"name": "encodeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "2902:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,uint8,uint256) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2902:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "2902:55:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "2984:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2978:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": "bytes"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2978:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1724,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "2967:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1140,
														"src": "2967:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$904_memory_ptr_$bound_to$_t_struct$_buffer_$904_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2967:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "2967:24:7"
											}
										]
									},
									"documentation": null,
									"id": 1733,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "encodeString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "2825:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1709,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "2825:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "2857:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1711,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2857:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2824:53:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:0:7"
									},
									"scope": 1767,
									"src": "2803:195:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "3070:66:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1739,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "3107:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1740,
															"name": "MAJOR_TYPE_ARRAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3112:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1738,
														"name": "encodeIndefiniteLengthType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "3080:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,uint8) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3080:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "3080:49:7"
											}
										]
									},
									"documentation": null,
									"id": 1744,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "startArray",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "3024:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1734,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "3024:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3023:32:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3070:0:7"
									},
									"scope": 1767,
									"src": "3004:132:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "3206:64:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1750,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "3243:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1751,
															"name": "MAJOR_TYPE_MAP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "3248:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1749,
														"name": "encodeIndefiniteLengthType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "3216:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,uint8) pure"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3216:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "3216:47:7"
											}
										]
									},
									"documentation": null,
									"id": 1755,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "startMap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3160:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1745,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "3160:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3159:32:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:0:7"
									},
									"scope": 1767,
									"src": "3142:128:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "3343:73:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1761,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "3380:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1762,
															"name": "MAJOR_TYPE_CONTENT_FREE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "3385:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1760,
														"name": "encodeIndefiniteLengthType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "3353:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$904_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (struct Buffer.buffer memory,uint8) pure"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "3353:56:7"
											}
										]
									},
									"documentation": null,
									"id": 1766,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "endSequence",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"name": "buf",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "3297:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$904_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"contractScope": null,
													"id": 1756,
													"name": "BufferPlugin.buffer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 904,
													"src": "3297:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$904_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3296:32:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3343:0:7"
									},
									"scope": 1767,
									"src": "3276:140:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1768,
							"src": "124:3294:7"
						}
					],
					"src": "32:3387:7"
				},
				"id": 7
			},
			"@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/vendor/ENSResolver.sol",
					"exportedSymbols": {
						"ENSResolver": [
							1777
						]
					},
					"id": 1778,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1769,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777
							],
							"name": "ENSResolver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1776,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "addr",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "64:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1770,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "64:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "63:14:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "99:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "99:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "98:9:8"
									},
									"scope": 1777,
									"src": "50:58:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1778,
							"src": "25:85:8"
						}
					],
					"src": "0:111:8"
				},
				"id": 8
			},
			"@goplugin/contracts/src/v0.4/vendor/Ownable.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.4/vendor/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1863
						]
					},
					"id": 1864,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 1863,
							"linearizedBaseContracts": [
								1863
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1781,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "238:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1780,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1785,
									"name": "OwnershipRenounced",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "289:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:31:9"
									},
									"src": "264:56:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1791,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "355:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "390:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "349:69:9"
									},
									"src": "323:96:9"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "561:29:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1794,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "567:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1795,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "575:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "575:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "567:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "567:18:9"
											}
										]
									},
									"documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
									"id": 1800,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:2:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:9"
									},
									"scope": 1863,
									"src": "540:50:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "691:46:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1803,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "705:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "705:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1805,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "719:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "705:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2281,
														"src": "697:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "697:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "697:28:9"
											},
											{
												"id": 1809,
												"nodeType": "PlaceholderStatement",
												"src": "731:1:9"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 1811,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:2:9"
									},
									"src": "670:67:9",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "1047:65:9",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1817,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "1077:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1816,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "1058:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1058:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "EmitStatement",
												"src": "1053:30:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1820,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "1089:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1105:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1097:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1097:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1089:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "1089:18:9"
											}
										]
									},
									"documentation": "@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.",
									"id": 1827,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1814,
											"modifierName": {
												"argumentTypes": null,
												"id": 1813,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1811,
												"src": "1037:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1037:9:9"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1027:2:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:9"
									},
									"scope": 1863,
									"src": "1001:111:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "1337:40:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1835,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "1362:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1834,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "1343:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "1343:29:9"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
									"id": 1839,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1832,
											"modifierName": {
												"argumentTypes": null,
												"id": 1831,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1811,
												"src": "1327:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1327:9:9"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "1301:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1300:19:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:0:9"
									},
									"scope": 1863,
									"src": "1274:103:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "1568:115:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1845,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "1582:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1603:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1595:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1595:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1582:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2281,
														"src": "1574:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1574:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "1574:32:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1853,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "1638:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1854,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "1645:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1852,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "1617:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1856,
												"nodeType": "EmitStatement",
												"src": "1612:43:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1857,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "1661:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1858,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "1669:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1661:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "1661:17:9"
											}
										]
									},
									"documentation": "@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
									"id": 1862,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "1540:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1539:19:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:0:9"
									},
									"scope": 1863,
									"src": "1512:171:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1864,
							"src": "217:1468:9"
						}
					],
					"src": "0:1686:9"
				},
				"id": 9
			},
			"contracts/InternalContract.sol": {
				"ast": {
					"absolutePath": "contracts/InternalContract.sol",
					"exportedSymbols": {
						"InternalContract": [
							2263
						]
					},
					"id": 2264,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1865,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:10"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/vendor/Ownable.sol",
							"file": "@goplugin/contracts/src/v0.4/vendor/Ownable.sol",
							"id": 1866,
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 1864,
							"src": "25:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.4/PluginClient.sol",
							"file": "@goplugin/contracts/src/v0.4/PluginClient.sol",
							"id": 1867,
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 682,
							"src": "83:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1868,
										"name": "PluginClient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 681,
										"src": "169:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PluginClient_$681",
											"typeString": "contract PluginClient"
										}
									},
									"id": 1869,
									"nodeType": "InheritanceSpecifier",
									"src": "169:12:10"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1870,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1863,
										"src": "183:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1863",
											"typeString": "contract Ownable"
										}
									},
									"id": 1871,
									"nodeType": "InheritanceSpecifier",
									"src": "183:7:10"
								}
							],
							"contractDependencies": [
								681,
								1863
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2263,
							"linearizedBaseContracts": [
								2263,
								1863,
								681
							],
							"name": "InternalContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1878,
									"name": "ORACLE_PAYMENT",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "235:55:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1872,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 1877,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "302e3031",
											"id": 1873,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "277:4:10",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100",
												"typeString": "rational_const 1 / 100"
											},
											"value": "0.01"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1876,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 1874,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "284:2:10",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3138",
												"id": 1875,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "288:2:10",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "284:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "277:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1880,
									"name": "oracle",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "294:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1879,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1882,
									"name": "jobId",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "368:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1881,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "368:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1884,
									"name": "currentValue",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "432:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1883,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "432:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1886,
									"name": "latestTimestamp",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "463:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1885,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "InternalContract.PLIDatabase",
									"id": 1891,
									"members": [
										{
											"constant": false,
											"id": 1888,
											"name": "depositor",
											"nodeType": "VariableDeclaration",
											"scope": 1891,
											"src": "563:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1887,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "563:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1890,
											"name": "totalcredits",
											"nodeType": "VariableDeclaration",
											"scope": 1891,
											"src": "586:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1889,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "586:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PLIDatabase",
									"nodeType": "StructDefinition",
									"scope": 2263,
									"src": "539:72:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1895,
									"name": "plidbs",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "615:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PLIDatabase_$1891_storage_$",
										"typeString": "mapping(address => struct InternalContract.PLIDatabase)"
									},
									"typeName": {
										"id": 1894,
										"keyType": {
											"id": 1892,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "623:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "615:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PLIDatabase_$1891_storage_$",
											"typeString": "mapping(address => struct InternalContract.PLIDatabase)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1893,
											"name": "PLIDatabase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1891,
											"src": "634:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage_ptr",
												"typeString": "struct InternalContract.PLIDatabase"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1901,
									"name": "RequestFulfilled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"indexed": true,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "734:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"indexed": true,
												"name": "currentVal",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "765:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:67:10"
									},
									"src": "706:90:10"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1909,
									"name": "requestCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"indexed": true,
												"name": "requester",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "860:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"indexed": true,
												"name": "jobId",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "886:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1904,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"indexed": true,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "909:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1906,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "859:76:10"
									},
									"src": "839:97:10"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1915,
									"name": "requestCreatedTest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"name": "jobId",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "964:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1910,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": true,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "987:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1912,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "963:50:10"
									},
									"src": "939:75:10"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "1158:82:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1927,
															"name": "_pli",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "1179:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1926,
														"name": "setPluginToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1164:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "1164:20:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1930,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "1190:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1932,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "1207:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1199:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1199:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1190:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "1190:25:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1936,
														"name": "jobId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "1221:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1937,
														"name": "_jobid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "1229:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1221:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "1221:14:10"
											}
										]
									},
									"documentation": null,
									"id": 1941,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1924,
											"modifierName": {
												"argumentTypes": null,
												"id": 1923,
												"name": "Ownable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1863,
												"src": "1148:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Ownable_$1863_$",
													"typeString": "type(contract Ownable)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1148:9:10"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"name": "_pli",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1090:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1103:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"name": "_jobid",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1119:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1089:51:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:10"
									},
									"scope": 2263,
									"src": "1078:162:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "1301:498:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1949,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "1317:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000"
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1325:3:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3130",
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1329:2:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3138",
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1333:2:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1329:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1325:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000"
																}
															},
															"src": "1317:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e4f545f4d4f52455f5448414e5f3130305f414c4c4f574544",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1336:27:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba3827dfadd6dc4e2c46adb94433b25a9a2bc6eb7e0140b810f32174adcd2f6",
																"typeString": "literal_string \"NOT_MORE_THAN_100_ALLOWED\""
															},
															"value": "NOT_MORE_THAN_100_ALLOWED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba3827dfadd6dc4e2c46adb94433b25a9a2bc6eb7e0140b810f32174adcd2f6",
																"typeString": "literal_string \"NOT_MORE_THAN_100_ALLOWED\""
															}
														],
														"id": 1948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2282,
														"src": "1309:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "1309:55:10"
											},
											{
												"assignments": [
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"name": "pli",
														"nodeType": "VariableDeclaration",
														"scope": 2005,
														"src": "1405:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PliTokenInterface_$856",
															"typeString": "contract PliTokenInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1959,
															"name": "PliTokenInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 856,
															"src": "1405:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																"typeString": "contract PliTokenInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1965,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1962,
																"name": "pluginTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "1447:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1447:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1961,
														"name": "PliTokenInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "1429:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PliTokenInterface_$856_$",
															"typeString": "type(contract PliTokenInterface)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1429:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PliTokenInterface_$856",
														"typeString": "contract PliTokenInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:63:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "1493:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1493:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1972,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "1512:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InternalContract_$2263",
																		"typeString": "contract InternalContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_InternalContract_$2263",
																		"typeString": "contract InternalContract"
																	}
																],
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1504:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1504:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1974,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "1518:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1966,
															"name": "pli",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "1476:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																"typeString": "contract PliTokenInterface"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 855,
														"src": "1476:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:49:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "1476:49:10"
											},
											{
												"assignments": [
													1978
												],
												"declarations": [
													{
														"constant": false,
														"id": 1978,
														"name": "_plidb",
														"nodeType": "VariableDeclaration",
														"scope": 2005,
														"src": "1578:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PLIDatabase_$1891_memory_ptr",
															"typeString": "struct InternalContract.PLIDatabase"
														},
														"typeName": {
															"contractScope": null,
															"id": 1977,
															"name": "PLIDatabase",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1891,
															"src": "1578:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage_ptr",
																"typeString": "struct InternalContract.PLIDatabase"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1983,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1979,
														"name": "plidbs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "1606:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PLIDatabase_$1891_storage_$",
															"typeString": "mapping(address => struct InternalContract.PLIDatabase storage ref)"
														}
													},
													"id": 1982,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1980,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "1613:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1613:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1606:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage",
														"typeString": "struct InternalContract.PLIDatabase storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1578:46:10"
											},
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"name": "_totalCredits",
														"nodeType": "VariableDeclaration",
														"scope": 2005,
														"src": "1632:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1632:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1990,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1986,
															"name": "_plidb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "1656:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PLIDatabase_$1891_memory_ptr",
																"typeString": "struct InternalContract.PLIDatabase memory"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalcredits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "1656:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1988,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "1678:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1656:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1632:52:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1991,
															"name": "plidbs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "1692:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PLIDatabase_$1891_storage_$",
																"typeString": "mapping(address => struct InternalContract.PLIDatabase storage ref)"
															}
														},
														"id": 1994,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1992,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "1699:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1699:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1692:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage",
															"typeString": "struct InternalContract.PLIDatabase storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1996,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "1734:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1734:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 1998,
																"name": "_totalCredits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "1754:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1995,
															"name": "PLIDatabase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "1713:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PLIDatabase_$1891_storage_ptr_$",
																"typeString": "type(struct InternalContract.PLIDatabase storage pointer)"
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1713:62:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PLIDatabase_$1891_memory",
															"typeString": "struct InternalContract.PLIDatabase memory"
														}
													},
													"src": "1692:83:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage",
														"typeString": "struct InternalContract.PLIDatabase storage ref"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "1692:83:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1790:4:10",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1947,
												"id": 2003,
												"nodeType": "Return",
												"src": "1783:11:10"
											}
										]
									},
									"documentation": null,
									"id": 2005,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "depositPLI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "1264:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1263:16:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "1295:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1295:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1294:6:10"
									},
									"scope": 2263,
									"src": "1244:555:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "1852:30:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2010,
													"name": "currentValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1884,
													"src": "1865:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2011,
												"nodeType": "Return",
												"src": "1858:19:10"
											}
										]
									},
									"documentation": null,
									"id": 2013,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "showPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1821:2:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "1844:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1843:9:10"
									},
									"scope": 2263,
									"src": "1803:79:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "2245:701:10",
										"statements": [
											{
												"assignments": [
													2021
												],
												"declarations": [
													{
														"constant": false,
														"id": 2021,
														"name": "_a_totalCredits",
														"nodeType": "VariableDeclaration",
														"scope": 2099,
														"src": "2331:23:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2020,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2331:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2026,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2022,
															"name": "plidbs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "2357:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PLIDatabase_$1891_storage_$",
																"typeString": "mapping(address => struct InternalContract.PLIDatabase storage ref)"
															}
														},
														"id": 2024,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2023,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "2364:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2357:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage",
															"typeString": "struct InternalContract.PLIDatabase storage ref"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalcredits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1890,
													"src": "2357:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2331:54:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2028,
																"name": "_a_totalCredits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2399:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2029,
																"name": "ORACLE_PAYMENT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "2415:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2399:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e4f5f53554646494349454e545f43524544495453",
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2430:23:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0695daa45a8ad6328cbb91c9fdc41a8851dba7582ef7928b6d05e9aaf391d4e",
																"typeString": "literal_string \"NO_SUFFICIENT_CREDITS\""
															},
															"value": "NO_SUFFICIENT_CREDITS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0695daa45a8ad6328cbb91c9fdc41a8851dba7582ef7928b6d05e9aaf391d4e",
																"typeString": "literal_string \"NO_SUFFICIENT_CREDITS\""
															}
														],
														"id": 2027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2282,
														"src": "2391:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2391:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "2391:63:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2034,
																"name": "plidbs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "2460:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PLIDatabase_$1891_storage_$",
																	"typeString": "mapping(address => struct InternalContract.PLIDatabase storage ref)"
																}
															},
															"id": 2036,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2035,
																"name": "_caller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "2467:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2460:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PLIDatabase_$1891_storage",
																"typeString": "struct InternalContract.PLIDatabase storage ref"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalcredits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "2460:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2038,
															"name": "_a_totalCredits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "2491:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2039,
															"name": "ORACLE_PAYMENT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "2509:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2491:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2460:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2042,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:10"
											},
											{
												"assignments": [
													2046
												],
												"declarations": [
													{
														"constant": false,
														"id": 2046,
														"name": "req",
														"nodeType": "VariableDeclaration",
														"scope": 2099,
														"src": "2589:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
															"typeString": "struct Plugin.Request"
														},
														"typeName": {
															"contractScope": null,
															"id": 2045,
															"name": "Plugin.Request",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 22,
															"src": "2589:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
																"typeString": "struct Plugin.Request"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2056,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2049,
																	"name": "jobId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "2652:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 2048,
																"name": "stringToBytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "2636:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2636:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2051,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "2660:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InternalContract_$2263",
																"typeString": "contract InternalContract"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2052,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "2666:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InternalContract_$2263",
																		"typeString": "contract InternalContract"
																	}
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "fulfill",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2181,
																"src": "2666:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
																	"typeString": "function (bytes32,uint256) external"
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2666:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_contract$_InternalContract_$2263",
																"typeString": "contract InternalContract"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 2047,
														"name": "buildPluginRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2617:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (bytes32,address,bytes4) pure returns (struct Plugin.Request memory)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:71:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2589:99:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "5f6673796d73",
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2702:8:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d40b6c376ef2b94bf9c88bd28c1f4c12c3798943192b3bcd594fa19306685b3",
																"typeString": "literal_string \"_fsyms\""
															},
															"value": "_fsyms"
														},
														{
															"argumentTypes": null,
															"hexValue": "584443",
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2711:5:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cd5eb3412f33d8f9533775ef03170221ea8f5d6555bf0ddcaaa253ea1ce0f2e",
																"typeString": "literal_string \"XDC\""
															},
															"value": "XDC"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1d40b6c376ef2b94bf9c88bd28c1f4c12c3798943192b3bcd594fa19306685b3",
																"typeString": "literal_string \"_fsyms\""
															},
															{
																"typeIdentifier": "t_stringliteral_7cd5eb3412f33d8f9533775ef03170221ea8f5d6555bf0ddcaaa253ea1ce0f2e",
																"typeString": "literal_string \"XDC\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2057,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "2694:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "2694:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,string memory) pure"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2694:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "2694:23:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "5f7473796d73",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2731:8:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f2e76b515a94fa78648250c5cc2bbefe7620f9efb31af16247f63063f25acae",
																"typeString": "literal_string \"_tsyms\""
															},
															"value": "_tsyms"
														},
														{
															"argumentTypes": null,
															"hexValue": "55534454",
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2740:6:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
																"typeString": "literal_string \"USDT\""
															},
															"value": "USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_2f2e76b515a94fa78648250c5cc2bbefe7620f9efb31af16247f63063f25acae",
																"typeString": "literal_string \"_tsyms\""
															},
															{
																"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
																"typeString": "literal_string \"USDT\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2064,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "2723:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "2723:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,string memory) pure"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "2723:24:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "74696d6573",
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:7:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
																"typeString": "literal_string \"times\""
															},
															"value": "times"
														},
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2773:5:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
																"typeString": "literal_string \"times\""
															},
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2071,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "2753:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addInt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "2753:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,int256) pure"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "2753:26:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2078,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "2785:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2080,
																"name": "oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1880,
																"src": "2817:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 2081,
																"name": "req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "2825:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 2082,
																"name": "ORACLE_PAYMENT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "2830:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2079,
															"name": "sendPluginRequestTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2797:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$22_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (address,struct Plugin.Request memory,uint256) returns (bytes32)"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2797:48:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2785:60:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "2785:60:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2086,
														"name": "latestTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "2851:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2087,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "2869:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2851:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "2851:21:10"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2091,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "2898:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2093,
																	"name": "jobId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "2923:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 2092,
																"name": "stringToBytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "2907:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2907:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2095,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "2931:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2090,
														"name": "requestCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "2883:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,bytes32,bytes32)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2883:58:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2097,
												"nodeType": "EmitStatement",
												"src": "2878:63:10"
											}
										]
									},
									"documentation": null,
									"id": 2099,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "requestData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"name": "_caller",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2183:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2182:17:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2224:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2017,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2223:19:10"
									},
									"scope": 2263,
									"src": "2162:784:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "3030:417:10",
										"statements": [
											{
												"assignments": [
													2109
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"name": "req",
														"nodeType": "VariableDeclaration",
														"scope": 2161,
														"src": "3095:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
															"typeString": "struct Plugin.Request"
														},
														"typeName": {
															"contractScope": null,
															"id": 2108,
															"name": "Plugin.Request",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 22,
															"src": "3095:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_storage_ptr",
																"typeString": "struct Plugin.Request"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2119,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2112,
																	"name": "jobId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "3158:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 2111,
																"name": "stringToBytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "3142:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3142:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2114,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "3166:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InternalContract_$2263",
																"typeString": "contract InternalContract"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2115,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "3172:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InternalContract_$2263",
																		"typeString": "contract InternalContract"
																	}
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "fulfill",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2181,
																"src": "3172:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
																	"typeString": "function (bytes32,uint256) external"
																}
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3172:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_contract$_InternalContract_$2263",
																"typeString": "contract InternalContract"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 2110,
														"name": "buildPluginRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "3123:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (bytes32,address,bytes4) pure returns (struct Plugin.Request memory)"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:71:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3095:99:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "5f6673796d73",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:8:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d40b6c376ef2b94bf9c88bd28c1f4c12c3798943192b3bcd594fa19306685b3",
																"typeString": "literal_string \"_fsyms\""
															},
															"value": "_fsyms"
														},
														{
															"argumentTypes": null,
															"hexValue": "584443",
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3217:5:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cd5eb3412f33d8f9533775ef03170221ea8f5d6555bf0ddcaaa253ea1ce0f2e",
																"typeString": "literal_string \"XDC\""
															},
															"value": "XDC"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1d40b6c376ef2b94bf9c88bd28c1f4c12c3798943192b3bcd594fa19306685b3",
																"typeString": "literal_string \"_fsyms\""
															},
															{
																"typeIdentifier": "t_stringliteral_7cd5eb3412f33d8f9533775ef03170221ea8f5d6555bf0ddcaaa253ea1ce0f2e",
																"typeString": "literal_string \"XDC\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2120,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "3200:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "3200:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,string memory) pure"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3200:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "3200:23:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "5f7473796d73",
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3237:8:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f2e76b515a94fa78648250c5cc2bbefe7620f9efb31af16247f63063f25acae",
																"typeString": "literal_string \"_tsyms\""
															},
															"value": "_tsyms"
														},
														{
															"argumentTypes": null,
															"hexValue": "55534454",
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3246:6:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
																"typeString": "literal_string \"USDT\""
															},
															"value": "USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_2f2e76b515a94fa78648250c5cc2bbefe7620f9efb31af16247f63063f25acae",
																"typeString": "literal_string \"_tsyms\""
															},
															{
																"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
																"typeString": "literal_string \"USDT\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2127,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "3229:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "3229:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,string memory) pure"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2133,
												"nodeType": "ExpressionStatement",
												"src": "3229:24:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "74696d6573",
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3270:7:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
																"typeString": "literal_string \"times\""
															},
															"value": "times"
														},
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3279:5:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
																"typeString": "literal_string \"times\""
															},
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2134,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "3259:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addInt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "3259:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$22_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$22_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,int256) pure"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "3259:26:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2141,
														"name": "latestTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "3291:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2142,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "3309:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3291:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "3291:21:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2145,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "3318:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2147,
																"name": "oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1880,
																"src": "3350:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 2148,
																"name": "req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "3358:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 2149,
																"name": "ORACLE_PAYMENT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "3363:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_struct$_Request_$22_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2146,
															"name": "sendPluginRequestTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3330:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$22_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (address,struct Plugin.Request memory,uint256) returns (bytes32)"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3330:48:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3318:60:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2152,
												"nodeType": "ExpressionStatement",
												"src": "3318:60:10"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2155,
																	"name": "jobId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "3424:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 2154,
																"name": "stringToBytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "3408:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3408:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2157,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3432:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2153,
														"name": "requestCreatedTest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "3389:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "EmitStatement",
												"src": "3384:58:10"
											}
										]
									},
									"documentation": null,
									"id": 2161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 2102,
											"modifierName": {
												"argumentTypes": null,
												"id": 2101,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1811,
												"src": "2986:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2986:9:10"
										}
									],
									"name": "testMyFunc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:2:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "3009:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3008:19:10"
									},
									"scope": 2263,
									"src": "2949:498:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "3585:160:10",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2172,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "3684:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2173,
															"name": "_currentval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "3696:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2171,
														"name": "RequestFulfilled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "3667:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "EmitStatement",
												"src": "3662:46:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2176,
														"name": "currentValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "3714:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2177,
														"name": "_currentval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "3729:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3714:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "3714:26:10"
											}
										]
									},
									"documentation": null,
									"id": 2181,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 2168,
													"name": "_requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2163,
													"src": "3571:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2169,
											"modifierName": {
												"argumentTypes": null,
												"id": 2167,
												"name": "recordPluginFulfillment",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 663,
												"src": "3547:23:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes32_$",
													"typeString": "modifier (bytes32)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3547:35:10"
										}
									],
									"name": "fulfill",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3491:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"name": "_currentval",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3511:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3490:41:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3585:0:10"
									},
									"scope": 2263,
									"src": "3474:271:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "3805:38:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2186,
														"name": "pluginTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3818:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2188,
												"nodeType": "Return",
												"src": "3811:27:10"
											}
										]
									},
									"documentation": null,
									"id": 2190,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getPluginToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3772:2:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "3796:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3796:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3795:9:10"
									},
									"scope": 2263,
									"src": "3749:94:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "3934:165:10",
										"statements": [
											{
												"assignments": [
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2196,
														"name": "pli",
														"nodeType": "VariableDeclaration",
														"scope": 2218,
														"src": "3940:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PliTokenInterface_$856",
															"typeString": "contract PliTokenInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 2195,
															"name": "PliTokenInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 856,
															"src": "3940:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																"typeString": "contract PliTokenInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2201,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2198,
																"name": "pluginTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "3982:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3982:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2197,
														"name": "PliTokenInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3964:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PliTokenInterface_$856_$",
															"typeString": "type(contract PliTokenInterface)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3964:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PliTokenInterface_$856",
														"typeString": "contract PliTokenInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3940:63:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2205,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "4030:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4030:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2210,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "4064:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_InternalContract_$2263",
																						"typeString": "contract InternalContract"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_InternalContract_$2263",
																						"typeString": "contract InternalContract"
																					}
																				],
																				"id": 2209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4056:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4056:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2207,
																			"name": "pli",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "4042:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																				"typeString": "contract PliTokenInterface"
																			}
																		},
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 788,
																		"src": "4042:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4042:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2203,
																	"name": "pli",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "4017:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PliTokenInterface_$856",
																		"typeString": "contract PliTokenInterface"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 833,
																"src": "4017:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4017:54:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e61626c6520746f207472616e73666572",
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:20:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1",
																"typeString": "literal_string \"Unable to transfer\""
															},
															"value": "Unable to transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1",
																"typeString": "literal_string \"Unable to transfer\""
															}
														],
														"id": 2202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2282
														],
														"referencedDeclaration": 2282,
														"src": "4009:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:85:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "4009:85:10"
											}
										]
									},
									"documentation": null,
									"id": 2218,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 2193,
											"modifierName": {
												"argumentTypes": null,
												"id": 2192,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1811,
												"src": "3924:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3924:9:10"
										}
									],
									"name": "withdrawPli",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3914:2:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3934:0:10"
									},
									"scope": 2263,
									"src": "3894:205:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "4292:86:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2232,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "4318:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2233,
															"name": "_payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "4330:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2234,
															"name": "_callbackFunctionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "4340:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 2235,
															"name": "_expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "4361:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2231,
														"name": "cancelPluginRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "4298:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes4_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,bytes4,uint256)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:75:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "4298:75:10"
											}
										]
									},
									"documentation": null,
									"id": 2239,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 2229,
											"modifierName": {
												"argumentTypes": null,
												"id": 2228,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1811,
												"src": "4280:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4280:9:10"
										}
									],
									"name": "cancelRequest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "4163:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"name": "_payment",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "4187:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"name": "_callbackFunctionId",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "4209:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4209:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"name": "_expiration",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "4241:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4157:107:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4292:0:10"
									},
									"scope": 2263,
									"src": "4135:243:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "4516:187:10",
										"statements": [
											{
												"assignments": [
													2247
												],
												"declarations": [
													{
														"constant": false,
														"id": 2247,
														"name": "tempEmptyStringTest",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "4522:32:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2246,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4522:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2251,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2249,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "4563:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4557:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": "bytes"
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4557:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4522:48:10"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2252,
															"name": "tempEmptyStringTest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "4580:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4580:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4610:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4580:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2259,
												"nodeType": "IfStatement",
												"src": "4576:62:10",
												"trueBody": {
													"id": 2258,
													"nodeType": "Block",
													"src": "4613:25:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4628:3:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"functionReturnParameters": 2245,
															"id": 2257,
															"nodeType": "Return",
															"src": "4621:10:10"
														}
													]
												}
											},
											{
												"externalReferences": [
													{
														"result": {
															"declaration": 2244,
															"isOffset": false,
															"isSlot": false,
															"src": "4661:6:10",
															"valueSize": 1
														}
													},
													{
														"source": {
															"declaration": 2241,
															"isOffset": false,
															"isSlot": false,
															"src": "4681:6:10",
															"valueSize": 1
														}
													}
												],
												"id": 2260,
												"nodeType": "InlineAssembly",
												"operations": "{\n    result := mload(add(source, 32))\n}",
												"src": "4643:60:10"
											}
										]
									},
									"documentation": null,
									"id": 2262,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "stringToBytes32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"name": "source",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "4456:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4456:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4455:22:10"
									},
									"payable": false,
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "4500:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4499:16:10"
									},
									"scope": 2263,
									"src": "4431:272:10",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 2264,
							"src": "140:4566:10"
						}
					],
					"src": "0:4706:10"
				},
				"id": 10
			}
		}
	}
}